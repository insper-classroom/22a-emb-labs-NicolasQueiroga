
OLED1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00006ecc  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00406ecc  00406ecc  00016ecc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009d0  20400000  00406ed4  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00000308  204009d0  004078a4  000209d0  2**2
                  ALLOC
  4 .stack        00002000  20400cd8  00407bac  000209d0  2**0
                  ALLOC
  5 .heap         00000200  20402cd8  00409bac  000209d0  2**0
                  ALLOC
  6 .ARM.attributes 0000002e  00000000  00000000  000209d0  2**0
                  CONTENTS, READONLY
  7 .comment      00000059  00000000  00000000  000209fe  2**0
                  CONTENTS, READONLY
  8 .debug_info   00018a6e  00000000  00000000  00020a57  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 000038b0  00000000  00000000  000394c5  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000057a0  00000000  00000000  0003cd75  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 000008c8  00000000  00000000  00042515  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000918  00000000  00000000  00042ddd  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  0000a2c4  00000000  00000000  000436f5  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   0000f088  00000000  00000000  0004d9b9  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    000901ab  00000000  00000000  0005ca41  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_frame  00001f48  00000000  00000000  000ecbec  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	d8 2c 40 20 09 12 40 00 05 12 40 00 05 12 40 00     .,@ ..@...@...@.
  400010:	05 12 40 00 05 12 40 00 05 12 40 00 00 00 00 00     ..@...@...@.....
	...
  40002c:	05 12 40 00 05 12 40 00 00 00 00 00 05 12 40 00     ..@...@.......@.
  40003c:	05 12 40 00 05 12 40 00 05 12 40 00 05 12 40 00     ..@...@...@...@.
  40004c:	c9 15 40 00 05 12 40 00 05 12 40 00 05 12 40 00     ..@...@...@...@.
  40005c:	05 12 40 00 05 12 40 00 00 00 00 00 69 0d 40 00     ..@...@.....i.@.
  40006c:	7d 0d 40 00 91 0d 40 00 05 12 40 00 05 12 40 00     }.@...@...@...@.
  40007c:	05 12 40 00 a5 0d 40 00 b9 0d 40 00 05 12 40 00     ..@...@...@...@.
  40008c:	05 12 40 00 05 12 40 00 05 12 40 00 05 12 40 00     ..@...@...@...@.
  40009c:	05 12 40 00 05 12 40 00 05 12 40 00 05 12 40 00     ..@...@...@...@.
  4000ac:	05 12 40 00 05 12 40 00 05 12 40 00 05 12 40 00     ..@...@...@...@.
  4000bc:	05 12 40 00 05 12 40 00 05 12 40 00 05 12 40 00     ..@...@...@...@.
  4000cc:	05 12 40 00 00 00 00 00 05 12 40 00 00 00 00 00     ..@.......@.....
  4000dc:	05 12 40 00 05 12 40 00 05 12 40 00 05 12 40 00     ..@...@...@...@.
  4000ec:	05 12 40 00 05 12 40 00 05 12 40 00 05 12 40 00     ..@...@...@...@.
  4000fc:	05 12 40 00 05 12 40 00 05 12 40 00 05 12 40 00     ..@...@...@...@.
  40010c:	05 12 40 00 05 12 40 00 00 00 00 00 00 00 00 00     ..@...@.........
  40011c:	00 00 00 00 05 12 40 00 05 12 40 00 05 12 40 00     ......@...@...@.
  40012c:	05 12 40 00 05 12 40 00 00 00 00 00 05 12 40 00     ..@...@.......@.
  40013c:	05 12 40 00                                         ..@.

00400140 <__do_global_dtors_aux>:
  400140:	b510      	push	{r4, lr}
  400142:	4c05      	ldr	r4, [pc, #20]	; (400158 <__do_global_dtors_aux+0x18>)
  400144:	7823      	ldrb	r3, [r4, #0]
  400146:	b933      	cbnz	r3, 400156 <__do_global_dtors_aux+0x16>
  400148:	4b04      	ldr	r3, [pc, #16]	; (40015c <__do_global_dtors_aux+0x1c>)
  40014a:	b113      	cbz	r3, 400152 <__do_global_dtors_aux+0x12>
  40014c:	4804      	ldr	r0, [pc, #16]	; (400160 <__do_global_dtors_aux+0x20>)
  40014e:	f3af 8000 	nop.w
  400152:	2301      	movs	r3, #1
  400154:	7023      	strb	r3, [r4, #0]
  400156:	bd10      	pop	{r4, pc}
  400158:	204009d0 	.word	0x204009d0
  40015c:	00000000 	.word	0x00000000
  400160:	00406ed4 	.word	0x00406ed4

00400164 <frame_dummy>:
  400164:	4b0c      	ldr	r3, [pc, #48]	; (400198 <frame_dummy+0x34>)
  400166:	b143      	cbz	r3, 40017a <frame_dummy+0x16>
  400168:	480c      	ldr	r0, [pc, #48]	; (40019c <frame_dummy+0x38>)
  40016a:	490d      	ldr	r1, [pc, #52]	; (4001a0 <frame_dummy+0x3c>)
  40016c:	b510      	push	{r4, lr}
  40016e:	f3af 8000 	nop.w
  400172:	480c      	ldr	r0, [pc, #48]	; (4001a4 <frame_dummy+0x40>)
  400174:	6803      	ldr	r3, [r0, #0]
  400176:	b923      	cbnz	r3, 400182 <frame_dummy+0x1e>
  400178:	bd10      	pop	{r4, pc}
  40017a:	480a      	ldr	r0, [pc, #40]	; (4001a4 <frame_dummy+0x40>)
  40017c:	6803      	ldr	r3, [r0, #0]
  40017e:	b933      	cbnz	r3, 40018e <frame_dummy+0x2a>
  400180:	4770      	bx	lr
  400182:	4b09      	ldr	r3, [pc, #36]	; (4001a8 <frame_dummy+0x44>)
  400184:	2b00      	cmp	r3, #0
  400186:	d0f7      	beq.n	400178 <frame_dummy+0x14>
  400188:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  40018c:	4718      	bx	r3
  40018e:	4b06      	ldr	r3, [pc, #24]	; (4001a8 <frame_dummy+0x44>)
  400190:	2b00      	cmp	r3, #0
  400192:	d0f5      	beq.n	400180 <frame_dummy+0x1c>
  400194:	4718      	bx	r3
  400196:	bf00      	nop
  400198:	00000000 	.word	0x00000000
  40019c:	00406ed4 	.word	0x00406ed4
  4001a0:	204009d4 	.word	0x204009d4
  4001a4:	00406ed4 	.word	0x00406ed4
  4001a8:	00000000 	.word	0x00000000

004001ac <rtt_init>:
 * \return 0 if successful.
 */
uint32_t rtt_init(Rtt *p_rtt, uint16_t us_prescaler)
{
#if (SAM4N || SAM4S || SAM4E || SAM4C || SAMG51 || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	p_rtt->RTT_MR = (us_prescaler | RTT_MR_RTTRST | g_wobits_in_rtt_mr);
  4001ac:	4b03      	ldr	r3, [pc, #12]	; (4001bc <rtt_init+0x10>)
  4001ae:	681b      	ldr	r3, [r3, #0]
  4001b0:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
  4001b4:	4319      	orrs	r1, r3
  4001b6:	6001      	str	r1, [r0, #0]
#else
	p_rtt->RTT_MR = (us_prescaler | RTT_MR_RTTRST);
#endif
	return 0;
}
  4001b8:	2000      	movs	r0, #0
  4001ba:	4770      	bx	lr
  4001bc:	204009ec 	.word	0x204009ec

004001c0 <rtt_sel_source>:
 * \param p_rtt Pointer to an RTT instance.
 * \param is_rtc_sel RTC 1Hz Clock Selection.
 */
void rtt_sel_source(Rtt *p_rtt, bool is_rtc_sel)
{
	if(is_rtc_sel) {
  4001c0:	b941      	cbnz	r1, 4001d4 <rtt_sel_source+0x14>
		g_wobits_in_rtt_mr |= RTT_MR_RTC1HZ;
		p_rtt->RTT_MR |= g_wobits_in_rtt_mr;
	} else {
		g_wobits_in_rtt_mr &= ~RTT_MR_RTC1HZ;
  4001c2:	4a09      	ldr	r2, [pc, #36]	; (4001e8 <rtt_sel_source+0x28>)
  4001c4:	6813      	ldr	r3, [r2, #0]
  4001c6:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
  4001ca:	6013      	str	r3, [r2, #0]
		p_rtt->RTT_MR |= g_wobits_in_rtt_mr;
  4001cc:	6802      	ldr	r2, [r0, #0]
  4001ce:	4313      	orrs	r3, r2
  4001d0:	6003      	str	r3, [r0, #0]
  4001d2:	4770      	bx	lr
		g_wobits_in_rtt_mr |= RTT_MR_RTC1HZ;
  4001d4:	4a04      	ldr	r2, [pc, #16]	; (4001e8 <rtt_sel_source+0x28>)
  4001d6:	6813      	ldr	r3, [r2, #0]
  4001d8:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
  4001dc:	6013      	str	r3, [r2, #0]
		p_rtt->RTT_MR |= g_wobits_in_rtt_mr;
  4001de:	6802      	ldr	r2, [r0, #0]
  4001e0:	4313      	orrs	r3, r2
  4001e2:	6003      	str	r3, [r0, #0]
  4001e4:	4770      	bx	lr
  4001e6:	bf00      	nop
  4001e8:	204009ec 	.word	0x204009ec

004001ec <rtt_disable_interrupt>:
 */
void rtt_disable_interrupt(Rtt *p_rtt, uint32_t ul_sources)
{
	uint32_t temp = 0;

	temp = p_rtt->RTT_MR;
  4001ec:	6803      	ldr	r3, [r0, #0]
	temp &= (~ul_sources);
  4001ee:	ea23 0101 	bic.w	r1, r3, r1
#if (SAM4N || SAM4S || SAM4E || SAM4C || SAMG51 || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	temp |= g_wobits_in_rtt_mr;
  4001f2:	4b02      	ldr	r3, [pc, #8]	; (4001fc <rtt_disable_interrupt+0x10>)
  4001f4:	681b      	ldr	r3, [r3, #0]
  4001f6:	4319      	orrs	r1, r3
#endif
	p_rtt->RTT_MR = temp;
  4001f8:	6001      	str	r1, [r0, #0]
  4001fa:	4770      	bx	lr
  4001fc:	204009ec 	.word	0x204009ec

00400200 <rtt_read_timer_value>:
 *
 * \return The current Real-time Timer value.
 */
uint32_t rtt_read_timer_value(Rtt *p_rtt)
{
	uint32_t rtt_val = p_rtt->RTT_VR;
  400200:	6882      	ldr	r2, [r0, #8]

	while (rtt_val != p_rtt->RTT_VR) {
  400202:	6883      	ldr	r3, [r0, #8]
  400204:	429a      	cmp	r2, r3
  400206:	d003      	beq.n	400210 <rtt_read_timer_value+0x10>
		rtt_val = p_rtt->RTT_VR;
  400208:	6882      	ldr	r2, [r0, #8]
	while (rtt_val != p_rtt->RTT_VR) {
  40020a:	6883      	ldr	r3, [r0, #8]
  40020c:	4293      	cmp	r3, r2
  40020e:	d1fb      	bne.n	400208 <rtt_read_timer_value+0x8>
	}

	return rtt_val;
}
  400210:	4618      	mov	r0, r3
  400212:	4770      	bx	lr

00400214 <rtt_get_status>:
 *
 * \return The Real-time Timer status.
 */
uint32_t rtt_get_status(Rtt *p_rtt)
{
	return p_rtt->RTT_SR;
  400214:	68c0      	ldr	r0, [r0, #12]
}
  400216:	4770      	bx	lr

00400218 <spi_enable_clock>:
 * \brief Enable SPI clock.
 *
 * \param p_spi Pointer to an SPI instance.
 */
void spi_enable_clock(Spi *p_spi)
{
  400218:	b508      	push	{r3, lr}
#if (SAM4S || SAM3S || SAM3N || SAM3U || SAM4E || SAM4N || SAMG51|| SAMG53|| SAMG54)
	UNUSED(p_spi);
	sysclk_enable_peripheral_clock(ID_SPI);
#elif (SAM3XA || SAM4C || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	if (p_spi == SPI0) {
  40021a:	4b07      	ldr	r3, [pc, #28]	; (400238 <spi_enable_clock+0x20>)
  40021c:	4298      	cmp	r0, r3
  40021e:	d003      	beq.n	400228 <spi_enable_clock+0x10>
		sysclk_enable_peripheral_clock(ID_SPI0);
	}
	#ifdef SPI1
	else if (p_spi == SPI1) {
  400220:	4b06      	ldr	r3, [pc, #24]	; (40023c <spi_enable_clock+0x24>)
  400222:	4298      	cmp	r0, r3
  400224:	d004      	beq.n	400230 <spi_enable_clock+0x18>
  400226:	bd08      	pop	{r3, pc}
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  400228:	2015      	movs	r0, #21
  40022a:	4b05      	ldr	r3, [pc, #20]	; (400240 <spi_enable_clock+0x28>)
  40022c:	4798      	blx	r3
  40022e:	bd08      	pop	{r3, pc}
  400230:	202a      	movs	r0, #42	; 0x2a
  400232:	4b03      	ldr	r3, [pc, #12]	; (400240 <spi_enable_clock+0x28>)
  400234:	4798      	blx	r3
	}
	#endif
#elif SAM4L
	sysclk_enable_peripheral_clock(p_spi);
#endif
}
  400236:	e7f6      	b.n	400226 <spi_enable_clock+0xe>
  400238:	40008000 	.word	0x40008000
  40023c:	40058000 	.word	0x40058000
  400240:	00400eed 	.word	0x00400eed

00400244 <spi_set_peripheral_chip_select_value>:
 *                 \ref spi_enable_peripheral_select_decode,
 *                 \ref spi_disable_peripheral_select_decode.
 */
void spi_set_peripheral_chip_select_value(Spi *p_spi, uint32_t ul_value)
{
	p_spi->SPI_MR &= (~SPI_MR_PCS_Msk);
  400244:	6843      	ldr	r3, [r0, #4]
  400246:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
  40024a:	6043      	str	r3, [r0, #4]
	p_spi->SPI_MR |= SPI_MR_PCS(ul_value);
  40024c:	6843      	ldr	r3, [r0, #4]
  40024e:	0409      	lsls	r1, r1, #16
  400250:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
  400254:	4319      	orrs	r1, r3
  400256:	6041      	str	r1, [r0, #4]
  400258:	4770      	bx	lr

0040025a <spi_write>:
 * \retval SPI_OK on Success.
 * \retval SPI_ERROR_TIMEOUT on Time-out.
 */
spi_status_t spi_write(Spi *p_spi, uint16_t us_data,
		uint8_t uc_pcs, uint8_t uc_last)
{
  40025a:	b430      	push	{r4, r5}
	uint32_t timeout = SPI_TIMEOUT;
	uint32_t value;

	while (!(p_spi->SPI_SR & SPI_SR_TDRE)) {
  40025c:	f643 2499 	movw	r4, #15001	; 0x3a99
  400260:	6905      	ldr	r5, [r0, #16]
  400262:	f015 0f02 	tst.w	r5, #2
  400266:	d103      	bne.n	400270 <spi_write+0x16>
		if (!timeout--) {
  400268:	3c01      	subs	r4, #1
  40026a:	d1f9      	bne.n	400260 <spi_write+0x6>
			return SPI_ERROR_TIMEOUT;
  40026c:	2001      	movs	r0, #1
  40026e:	e00c      	b.n	40028a <spi_write+0x30>
 *
 * \return 1 for Variable mode, 0 for fixed mode.
 */
static inline uint32_t spi_get_peripheral_select_mode(Spi *p_spi)
{
	if (p_spi->SPI_MR & SPI_MR_PS) {
  400270:	6844      	ldr	r4, [r0, #4]
		}
	}

	if (spi_get_peripheral_select_mode(p_spi)) {
  400272:	f014 0f02 	tst.w	r4, #2
  400276:	d006      	beq.n	400286 <spi_write+0x2c>
		value = SPI_TDR_TD(us_data) | SPI_TDR_PCS(uc_pcs);
  400278:	0412      	lsls	r2, r2, #16
  40027a:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
  40027e:	4311      	orrs	r1, r2
		if (uc_last) {
  400280:	b10b      	cbz	r3, 400286 <spi_write+0x2c>
			value |= SPI_TDR_LASTXFER;
  400282:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
		}
	} else {
		value = SPI_TDR_TD(us_data);
	}

	p_spi->SPI_TDR = value;
  400286:	60c1      	str	r1, [r0, #12]

	return SPI_OK;
  400288:	2000      	movs	r0, #0
}
  40028a:	bc30      	pop	{r4, r5}
  40028c:	4770      	bx	lr

0040028e <spi_set_clock_polarity>:
 * \param ul_polarity Default clock state is logical one(high)/zero(low).
 */
void spi_set_clock_polarity(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_polarity)
{
	if (ul_polarity) {
  40028e:	b932      	cbnz	r2, 40029e <spi_set_clock_polarity+0x10>
  400290:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CPOL);
  400294:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400296:	f023 0301 	bic.w	r3, r3, #1
  40029a:	6303      	str	r3, [r0, #48]	; 0x30
  40029c:	4770      	bx	lr
  40029e:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
  4002a2:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4002a4:	f043 0301 	orr.w	r3, r3, #1
  4002a8:	6303      	str	r3, [r0, #48]	; 0x30
  4002aa:	4770      	bx	lr

004002ac <spi_set_clock_phase>:
 *  \param ul_pcs_ch Peripheral Chip Select channel (0~3).
 *  \param ul_phase Data capture on the rising/falling edge of clock.
 */
void spi_set_clock_phase(Spi *p_spi, uint32_t ul_pcs_ch, uint32_t ul_phase)
{
	if (ul_phase) {
  4002ac:	b932      	cbnz	r2, 4002bc <spi_set_clock_phase+0x10>
  4002ae:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_NCPHA);
  4002b2:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4002b4:	f023 0302 	bic.w	r3, r3, #2
  4002b8:	6303      	str	r3, [r0, #48]	; 0x30
  4002ba:	4770      	bx	lr
  4002bc:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
  4002c0:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4002c2:	f043 0302 	orr.w	r3, r3, #2
  4002c6:	6303      	str	r3, [r0, #48]	; 0x30
  4002c8:	4770      	bx	lr

004002ca <spi_configure_cs_behavior>:
 * \param ul_cs_behavior Behavior of the Chip Select after transfer.
 */
void spi_configure_cs_behavior(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_cs_behavior)
{
	if (ul_cs_behavior == SPI_CS_RISE_FORCED) {
  4002ca:	2a04      	cmp	r2, #4
  4002cc:	d003      	beq.n	4002d6 <spi_configure_cs_behavior+0xc>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
	} else if (ul_cs_behavior == SPI_CS_RISE_NO_TX) {
  4002ce:	b16a      	cbz	r2, 4002ec <spi_configure_cs_behavior+0x22>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
	} else if (ul_cs_behavior == SPI_CS_KEEP_LOW) {
  4002d0:	2a08      	cmp	r2, #8
  4002d2:	d016      	beq.n	400302 <spi_configure_cs_behavior+0x38>
  4002d4:	4770      	bx	lr
  4002d6:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  4002da:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4002dc:	f023 0308 	bic.w	r3, r3, #8
  4002e0:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
  4002e2:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4002e4:	f043 0304 	orr.w	r3, r3, #4
  4002e8:	6303      	str	r3, [r0, #48]	; 0x30
  4002ea:	4770      	bx	lr
  4002ec:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  4002f0:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4002f2:	f023 0308 	bic.w	r3, r3, #8
  4002f6:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
  4002f8:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4002fa:	f023 0304 	bic.w	r3, r3, #4
  4002fe:	6303      	str	r3, [r0, #48]	; 0x30
  400300:	4770      	bx	lr
  400302:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSAAT;
  400306:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400308:	f043 0308 	orr.w	r3, r3, #8
  40030c:	6303      	str	r3, [r0, #48]	; 0x30
	}
}
  40030e:	e7e1      	b.n	4002d4 <spi_configure_cs_behavior+0xa>

00400310 <spi_set_bits_per_transfer>:
 * \param ul_bits Number of bits (8~16), use the pattern defined
 *        in the device header file.
 */
void spi_set_bits_per_transfer(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_bits)
{
  400310:	eb00 0181 	add.w	r1, r0, r1, lsl #2
	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_BITS_Msk);
  400314:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  400316:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  40031a:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= ul_bits;
  40031c:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  40031e:	431a      	orrs	r2, r3
  400320:	630a      	str	r2, [r1, #48]	; 0x30
  400322:	4770      	bx	lr

00400324 <spi_calc_baudrate_div>:
 *   \retval > 0  Success.
 *   \retval < 0  Error.
 */
int16_t spi_calc_baudrate_div(const uint32_t baudrate, uint32_t mck)
{
	int baud_div = div_ceil(mck, baudrate);
  400324:	1e43      	subs	r3, r0, #1
  400326:	4419      	add	r1, r3
  400328:	fbb1 f0f0 	udiv	r0, r1, r0

	/* The value of baud_div is from 1 to 255 in the SCBR field. */
	if (baud_div <= 0 || baud_div > 255) {
  40032c:	1e43      	subs	r3, r0, #1
  40032e:	2bfe      	cmp	r3, #254	; 0xfe
		return -1;
	}

	return baud_div;
  400330:	bf94      	ite	ls
  400332:	b200      	sxthls	r0, r0
		return -1;
  400334:	f04f 30ff 	movhi.w	r0, #4294967295
}
  400338:	4770      	bx	lr

0040033a <spi_set_baudrate_div>:
 */
int16_t spi_set_baudrate_div(Spi *p_spi, uint32_t ul_pcs_ch,
		uint8_t uc_baudrate_divider)
{
    /* Programming the SCBR field to 0 is forbidden */
    if (!uc_baudrate_divider)
  40033a:	b17a      	cbz	r2, 40035c <spi_set_baudrate_div+0x22>
{
  40033c:	b410      	push	{r4}
  40033e:	4614      	mov	r4, r2
  400340:	eb00 0181 	add.w	r1, r0, r1, lsl #2
        return -1;

	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_SCBR_Msk);
  400344:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  400346:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
  40034a:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_SCBR(uc_baudrate_divider);
  40034c:	6b0a      	ldr	r2, [r1, #48]	; 0x30
  40034e:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
  400352:	630a      	str	r2, [r1, #48]	; 0x30
    return 0;
  400354:	2000      	movs	r0, #0
}
  400356:	f85d 4b04 	ldr.w	r4, [sp], #4
  40035a:	4770      	bx	lr
        return -1;
  40035c:	f04f 30ff 	mov.w	r0, #4294967295
  400360:	4770      	bx	lr
	...

00400364 <gfx_mono_set_framebuffer>:
	gfx_mono_set_framebuffer(framebuffer);
\endcode
 */
void gfx_mono_set_framebuffer(uint8_t *framebuffer)
{
	fbpointer = framebuffer;
  400364:	4b01      	ldr	r3, [pc, #4]	; (40036c <gfx_mono_set_framebuffer+0x8>)
  400366:	6018      	str	r0, [r3, #0]
  400368:	4770      	bx	lr
  40036a:	bf00      	nop
  40036c:	204009f0 	.word	0x204009f0

00400370 <gfx_mono_framebuffer_put_byte>:
\endcode
 */
void gfx_mono_framebuffer_put_byte(gfx_coord_t page, gfx_coord_t column,
		uint8_t data)
{
	*(fbpointer + (page * GFX_MONO_LCD_WIDTH) + column) = data;
  400370:	4b02      	ldr	r3, [pc, #8]	; (40037c <gfx_mono_framebuffer_put_byte+0xc>)
  400372:	681b      	ldr	r3, [r3, #0]
  400374:	eb03 10c0 	add.w	r0, r3, r0, lsl #7
  400378:	5442      	strb	r2, [r0, r1]
  40037a:	4770      	bx	lr
  40037c:	204009f0 	.word	0x204009f0

00400380 <gfx_mono_framebuffer_get_byte>:
	data = gfx_mono_framebuffer_get_byte(0, 0);
\endcode
 */
uint8_t gfx_mono_framebuffer_get_byte(gfx_coord_t page, gfx_coord_t column)
{
	return *(fbpointer + (page * GFX_MONO_LCD_WIDTH) + column);
  400380:	4b02      	ldr	r3, [pc, #8]	; (40038c <gfx_mono_framebuffer_get_byte+0xc>)
  400382:	681b      	ldr	r3, [r3, #0]
  400384:	eb03 10c0 	add.w	r0, r3, r0, lsl #7
}
  400388:	5c40      	ldrb	r0, [r0, r1]
  40038a:	4770      	bx	lr
  40038c:	204009f0 	.word	0x204009f0

00400390 <gfx_mono_generic_draw_horizontal_line>:
 * \param[in]  length     Length of the line in pixels.
 * \param[in]  color      Pixel operation of the line.
 */
void gfx_mono_generic_draw_horizontal_line(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t length, enum gfx_mono_color color)
{
  400390:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	uint8_t page;
	uint8_t pixelmask;
	uint8_t temp;

	/* Clip line length if too long */
	if (x + length > GFX_MONO_LCD_WIDTH) {
  400394:	1884      	adds	r4, r0, r2
  400396:	2c80      	cmp	r4, #128	; 0x80
  400398:	dd02      	ble.n	4003a0 <gfx_mono_generic_draw_horizontal_line+0x10>
		length = GFX_MONO_LCD_WIDTH - x;
  40039a:	f1c0 0480 	rsb	r4, r0, #128	; 0x80
  40039e:	b2e2      	uxtb	r2, r4
	}

	page = y / 8;
	pixelmask = (1 << (y - (page * 8)));

	if (length == 0) {
  4003a0:	b322      	cbz	r2, 4003ec <gfx_mono_generic_draw_horizontal_line+0x5c>
	page = y / 8;
  4003a2:	08cd      	lsrs	r5, r1, #3
	pixelmask = (1 << (y - (page * 8)));
  4003a4:	eba1 01c5 	sub.w	r1, r1, r5, lsl #3
  4003a8:	2601      	movs	r6, #1
  4003aa:	fa06 f101 	lsl.w	r1, r6, r1
  4003ae:	b2ce      	uxtb	r6, r1
		/* Nothing to do. Move along. */
		return;
	}

	switch (color) {
  4003b0:	2b01      	cmp	r3, #1
  4003b2:	d01d      	beq.n	4003f0 <gfx_mono_generic_draw_horizontal_line+0x60>
  4003b4:	2b00      	cmp	r3, #0
  4003b6:	d035      	beq.n	400424 <gfx_mono_generic_draw_horizontal_line+0x94>
  4003b8:	2b02      	cmp	r3, #2
  4003ba:	d117      	bne.n	4003ec <gfx_mono_generic_draw_horizontal_line+0x5c>
  4003bc:	3801      	subs	r0, #1
  4003be:	b2c7      	uxtb	r7, r0
  4003c0:	19d4      	adds	r4, r2, r7
  4003c2:	b2e4      	uxtb	r4, r4
		}
		break;

	case GFX_PIXEL_XOR:
		while (length-- > 0) {
			temp = gfx_mono_get_byte(page, x + length);
  4003c4:	f8df a090 	ldr.w	sl, [pc, #144]	; 400458 <gfx_mono_generic_draw_horizontal_line+0xc8>
			temp ^= pixelmask;
			gfx_mono_put_byte(page, x + length, temp);
  4003c8:	f04f 0900 	mov.w	r9, #0
  4003cc:	f8df 808c 	ldr.w	r8, [pc, #140]	; 40045c <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  4003d0:	4621      	mov	r1, r4
  4003d2:	4628      	mov	r0, r5
  4003d4:	47d0      	blx	sl
			temp ^= pixelmask;
  4003d6:	ea86 0200 	eor.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  4003da:	464b      	mov	r3, r9
  4003dc:	b2d2      	uxtb	r2, r2
  4003de:	4621      	mov	r1, r4
  4003e0:	4628      	mov	r0, r5
  4003e2:	47c0      	blx	r8
  4003e4:	3c01      	subs	r4, #1
  4003e6:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  4003e8:	42bc      	cmp	r4, r7
  4003ea:	d1f1      	bne.n	4003d0 <gfx_mono_generic_draw_horizontal_line+0x40>
  4003ec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4003f0:	3801      	subs	r0, #1
  4003f2:	b2c7      	uxtb	r7, r0
  4003f4:	19d4      	adds	r4, r2, r7
  4003f6:	b2e4      	uxtb	r4, r4
			temp = gfx_mono_get_byte(page, x + length);
  4003f8:	f8df a05c 	ldr.w	sl, [pc, #92]	; 400458 <gfx_mono_generic_draw_horizontal_line+0xc8>
			gfx_mono_put_byte(page, x + length, temp);
  4003fc:	f04f 0900 	mov.w	r9, #0
  400400:	f8df 8058 	ldr.w	r8, [pc, #88]	; 40045c <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  400404:	4621      	mov	r1, r4
  400406:	4628      	mov	r0, r5
  400408:	47d0      	blx	sl
			temp |= pixelmask;
  40040a:	ea46 0200 	orr.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  40040e:	464b      	mov	r3, r9
  400410:	b2d2      	uxtb	r2, r2
  400412:	4621      	mov	r1, r4
  400414:	4628      	mov	r0, r5
  400416:	47c0      	blx	r8
  400418:	3c01      	subs	r4, #1
  40041a:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  40041c:	42bc      	cmp	r4, r7
  40041e:	d1f1      	bne.n	400404 <gfx_mono_generic_draw_horizontal_line+0x74>
  400420:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  400424:	3801      	subs	r0, #1
  400426:	b2c7      	uxtb	r7, r0
  400428:	19d4      	adds	r4, r2, r7
  40042a:	b2e4      	uxtb	r4, r4
			temp = gfx_mono_get_byte(page, x + length);
  40042c:	f8df 8028 	ldr.w	r8, [pc, #40]	; 400458 <gfx_mono_generic_draw_horizontal_line+0xc8>
			temp &= ~pixelmask;
  400430:	43ce      	mvns	r6, r1
			gfx_mono_put_byte(page, x + length, temp);
  400432:	f8df 9028 	ldr.w	r9, [pc, #40]	; 40045c <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  400436:	4621      	mov	r1, r4
  400438:	4628      	mov	r0, r5
  40043a:	47c0      	blx	r8
			temp &= ~pixelmask;
  40043c:	ea06 0200 	and.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  400440:	2300      	movs	r3, #0
  400442:	b2d2      	uxtb	r2, r2
  400444:	4621      	mov	r1, r4
  400446:	4628      	mov	r0, r5
  400448:	47c8      	blx	r9
  40044a:	3c01      	subs	r4, #1
  40044c:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  40044e:	42bc      	cmp	r4, r7
  400450:	d1f1      	bne.n	400436 <gfx_mono_generic_draw_horizontal_line+0xa6>
  400452:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  400456:	bf00      	nop
  400458:	00400691 	.word	0x00400691
  40045c:	0040058d 	.word	0x0040058d

00400460 <gfx_mono_generic_draw_filled_rect>:
 * \param[in]  color       Pixel operation of the line
 */
void gfx_mono_generic_draw_filled_rect(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t width, gfx_coord_t height,
		enum gfx_mono_color color)
{
  400460:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  400464:	f89d 7020 	ldrb.w	r7, [sp, #32]
	if (height == 0) {
  400468:	b18b      	cbz	r3, 40048e <gfx_mono_generic_draw_filled_rect+0x2e>
  40046a:	461c      	mov	r4, r3
  40046c:	4690      	mov	r8, r2
  40046e:	4606      	mov	r6, r0
  400470:	1e4d      	subs	r5, r1, #1
  400472:	b2ed      	uxtb	r5, r5
  400474:	442c      	add	r4, r5
  400476:	b2e4      	uxtb	r4, r4
		/* Nothing to do. Move along. */
		return;
	}

	while (height-- > 0) {
		gfx_mono_draw_horizontal_line(x, y + height, width, color);
  400478:	f8df 9018 	ldr.w	r9, [pc, #24]	; 400494 <gfx_mono_generic_draw_filled_rect+0x34>
  40047c:	463b      	mov	r3, r7
  40047e:	4642      	mov	r2, r8
  400480:	4621      	mov	r1, r4
  400482:	4630      	mov	r0, r6
  400484:	47c8      	blx	r9
  400486:	3c01      	subs	r4, #1
  400488:	b2e4      	uxtb	r4, r4
	while (height-- > 0) {
  40048a:	42ac      	cmp	r4, r5
  40048c:	d1f6      	bne.n	40047c <gfx_mono_generic_draw_filled_rect+0x1c>
  40048e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400492:	bf00      	nop
  400494:	00400391 	.word	0x00400391

00400498 <gfx_mono_draw_char>:
 * \param[in] y        Y coordinate on screen.
 * \param[in] font     Font to draw character in
 */
void gfx_mono_draw_char(const char c, const gfx_coord_t x, const gfx_coord_t y,
		const struct font *font)
{
  400498:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40049c:	b083      	sub	sp, #12
  40049e:	4604      	mov	r4, r0
  4004a0:	4688      	mov	r8, r1
  4004a2:	4691      	mov	r9, r2
  4004a4:	469b      	mov	fp, r3
	gfx_mono_draw_filled_rect(x, y, font->width, font->height,
  4004a6:	7a5b      	ldrb	r3, [r3, #9]
  4004a8:	f89b 2008 	ldrb.w	r2, [fp, #8]
  4004ac:	2100      	movs	r1, #0
  4004ae:	9100      	str	r1, [sp, #0]
  4004b0:	4649      	mov	r1, r9
  4004b2:	4640      	mov	r0, r8
  4004b4:	4d21      	ldr	r5, [pc, #132]	; (40053c <gfx_mono_draw_char+0xa4>)
  4004b6:	47a8      	blx	r5
			GFX_PIXEL_CLR);

	switch (font->type) {
  4004b8:	f89b 3000 	ldrb.w	r3, [fp]
  4004bc:	b113      	cbz	r3, 4004c4 <gfx_mono_draw_char+0x2c>
	default:
		/* Unsupported mode, call assert */
		Assert(false);
		break;
	}
}
  4004be:	b003      	add	sp, #12
  4004c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	char_row_size = font->width / CONFIG_FONT_PIXELS_PER_BYTE;
  4004c4:	f89b 2008 	ldrb.w	r2, [fp, #8]
  4004c8:	08d3      	lsrs	r3, r2, #3
	if (font->width % CONFIG_FONT_PIXELS_PER_BYTE) {
  4004ca:	f012 0f07 	tst.w	r2, #7
		char_row_size++;
  4004ce:	bf18      	it	ne
  4004d0:	3301      	addne	r3, #1
	glyph_data_offset = char_row_size * font->height *
  4004d2:	f89b a009 	ldrb.w	sl, [fp, #9]
			((uint8_t)ch - font->first_char);
  4004d6:	f89b 700a 	ldrb.w	r7, [fp, #10]
  4004da:	1be7      	subs	r7, r4, r7
	glyph_data_offset = char_row_size * font->height *
  4004dc:	fb17 f70a 	smulbb	r7, r7, sl
  4004e0:	fb17 f703 	smulbb	r7, r7, r3
	glyph_data = font->data.progmem + glyph_data_offset;
  4004e4:	f8db 3004 	ldr.w	r3, [fp, #4]
  4004e8:	fa13 f787 	uxtah	r7, r3, r7
  4004ec:	e01f      	b.n	40052e <gfx_mono_draw_char+0x96>
			glyph_byte <<= 1;
  4004ee:	0064      	lsls	r4, r4, #1
  4004f0:	b2e4      	uxtb	r4, r4
  4004f2:	3501      	adds	r5, #1
		for (i = 0; i < pixelsToDraw; i++) {
  4004f4:	b2eb      	uxtb	r3, r5
  4004f6:	429e      	cmp	r6, r3
  4004f8:	d910      	bls.n	40051c <gfx_mono_draw_char+0x84>
  4004fa:	b2eb      	uxtb	r3, r5
  4004fc:	eb08 0003 	add.w	r0, r8, r3
  400500:	b2c0      	uxtb	r0, r0
			if (i % CONFIG_FONT_PIXELS_PER_BYTE == 0) {
  400502:	f013 0f07 	tst.w	r3, #7
				glyph_byte = PROGMEM_READ_BYTE(glyph_data);
  400506:	bf08      	it	eq
  400508:	f817 4b01 	ldrbeq.w	r4, [r7], #1
			if ((glyph_byte & 0x80)) {
  40050c:	f014 0f80 	tst.w	r4, #128	; 0x80
  400510:	d0ed      	beq.n	4004ee <gfx_mono_draw_char+0x56>
				gfx_mono_draw_pixel(inc_x, inc_y,
  400512:	2201      	movs	r2, #1
  400514:	4649      	mov	r1, r9
  400516:	4b0a      	ldr	r3, [pc, #40]	; (400540 <gfx_mono_draw_char+0xa8>)
  400518:	4798      	blx	r3
  40051a:	e7e8      	b.n	4004ee <gfx_mono_draw_char+0x56>
		inc_y += 1;
  40051c:	f109 0901 	add.w	r9, r9, #1
  400520:	fa5f f989 	uxtb.w	r9, r9
		rows_left--;
  400524:	f10a 3aff 	add.w	sl, sl, #4294967295
	} while (rows_left > 0);
  400528:	f01a 0aff 	ands.w	sl, sl, #255	; 0xff
  40052c:	d0c7      	beq.n	4004be <gfx_mono_draw_char+0x26>
		uint8_t pixelsToDraw = font->width;
  40052e:	f89b 6008 	ldrb.w	r6, [fp, #8]
		for (i = 0; i < pixelsToDraw; i++) {
  400532:	2e00      	cmp	r6, #0
  400534:	d0f2      	beq.n	40051c <gfx_mono_draw_char+0x84>
  400536:	2500      	movs	r5, #0
  400538:	462c      	mov	r4, r5
  40053a:	e7de      	b.n	4004fa <gfx_mono_draw_char+0x62>
  40053c:	00400461 	.word	0x00400461
  400540:	0040062d 	.word	0x0040062d

00400544 <gfx_mono_draw_string>:
 * \param[in] y         Y coordinate on screen.
 * \param[in] font      Font to draw string in
 */
void gfx_mono_draw_string(const char *str, gfx_coord_t x, gfx_coord_t y,
		const struct font *font)
{
  400544:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  400548:	4604      	mov	r4, r0
  40054a:	4690      	mov	r8, r2
  40054c:	461d      	mov	r5, r3
  40054e:	4689      	mov	r9, r1
			x = start_of_string_position_x;
			y += font->height + 1;
		} else if (*str == '\r') {
			/* Skip '\r' characters. */
		} else {
			gfx_mono_draw_char(*str, x, y, font);
  400550:	4f0d      	ldr	r7, [pc, #52]	; (400588 <gfx_mono_draw_string+0x44>)
			x = start_of_string_position_x;
  400552:	460e      	mov	r6, r1
  400554:	e008      	b.n	400568 <gfx_mono_draw_string+0x24>
			y += font->height + 1;
  400556:	7a6a      	ldrb	r2, [r5, #9]
  400558:	3201      	adds	r2, #1
  40055a:	4442      	add	r2, r8
  40055c:	fa5f f882 	uxtb.w	r8, r2
			x = start_of_string_position_x;
  400560:	46b1      	mov	r9, r6
			x += font->width;
		}
	} while (*(++str));
  400562:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  400566:	b16b      	cbz	r3, 400584 <gfx_mono_draw_string+0x40>
		if (*str == '\n') {
  400568:	7820      	ldrb	r0, [r4, #0]
  40056a:	280a      	cmp	r0, #10
  40056c:	d0f3      	beq.n	400556 <gfx_mono_draw_string+0x12>
		} else if (*str == '\r') {
  40056e:	280d      	cmp	r0, #13
  400570:	d0f7      	beq.n	400562 <gfx_mono_draw_string+0x1e>
			gfx_mono_draw_char(*str, x, y, font);
  400572:	462b      	mov	r3, r5
  400574:	4642      	mov	r2, r8
  400576:	4649      	mov	r1, r9
  400578:	47b8      	blx	r7
			x += font->width;
  40057a:	7a2b      	ldrb	r3, [r5, #8]
  40057c:	4499      	add	r9, r3
  40057e:	fa5f f989 	uxtb.w	r9, r9
  400582:	e7ee      	b.n	400562 <gfx_mono_draw_string+0x1e>
}
  400584:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400588:	00400499 	.word	0x00400499

0040058c <gfx_mono_ssd1306_put_byte>:
	gfx_mono_ssd1306_put_byte(0, 0, 0xFF, false);
\endcode
  */
 void gfx_mono_ssd1306_put_byte(gfx_coord_t page, gfx_coord_t column,
		uint8_t data, bool force)
{
  40058c:	b570      	push	{r4, r5, r6, lr}
  40058e:	4604      	mov	r4, r0
  400590:	460d      	mov	r5, r1
  400592:	4616      	mov	r6, r2
#ifdef CONFIG_SSD1306_FRAMEBUFFER
	if (!force && data == gfx_mono_framebuffer_get_byte(page, column)) {
  400594:	b91b      	cbnz	r3, 40059e <gfx_mono_ssd1306_put_byte+0x12>
  400596:	4b0d      	ldr	r3, [pc, #52]	; (4005cc <gfx_mono_ssd1306_put_byte+0x40>)
  400598:	4798      	blx	r3
  40059a:	42b0      	cmp	r0, r6
  40059c:	d015      	beq.n	4005ca <gfx_mono_ssd1306_put_byte+0x3e>
		return;
	}
	gfx_mono_framebuffer_put_byte(page, column, data);
  40059e:	4632      	mov	r2, r6
  4005a0:	4629      	mov	r1, r5
  4005a2:	4620      	mov	r0, r4
  4005a4:	4b0a      	ldr	r3, [pc, #40]	; (4005d0 <gfx_mono_ssd1306_put_byte+0x44>)
  4005a6:	4798      	blx	r3
 * \param address the page address
 */
static inline void ssd1306_set_page_address(uint8_t address)
{
	// Make sure that the address is 4 bits (only 8 pages)
	address &= 0x0F;
  4005a8:	f004 000f 	and.w	r0, r4, #15
	ssd1306_write_command(SSD1306_CMD_SET_PAGE_START_ADDRESS(address));
  4005ac:	f040 00b0 	orr.w	r0, r0, #176	; 0xb0
  4005b0:	4c08      	ldr	r4, [pc, #32]	; (4005d4 <gfx_mono_ssd1306_put_byte+0x48>)
  4005b2:	47a0      	blx	r4
 */
static inline void ssd1306_set_column_address(uint8_t address)
{
	// Make sure the address is 7 bits
	address &= 0x7F;
	ssd1306_write_command(SSD1306_CMD_COL_ADD_SET_MSB(address >> 4));
  4005b4:	f3c5 1002 	ubfx	r0, r5, #4, #3
  4005b8:	f040 0010 	orr.w	r0, r0, #16
  4005bc:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_COL_ADD_SET_LSB(address & 0x0F));
  4005be:	f005 000f 	and.w	r0, r5, #15
  4005c2:	47a0      	blx	r4
#endif

	ssd1306_set_page_address(page);
	ssd1306_set_column_address(column);

	ssd1306_write_data(data);
  4005c4:	4630      	mov	r0, r6
  4005c6:	4b04      	ldr	r3, [pc, #16]	; (4005d8 <gfx_mono_ssd1306_put_byte+0x4c>)
  4005c8:	4798      	blx	r3
  4005ca:	bd70      	pop	{r4, r5, r6, pc}
  4005cc:	00400381 	.word	0x00400381
  4005d0:	00400371 	.word	0x00400371
  4005d4:	0040069d 	.word	0x0040069d
  4005d8:	004008bd 	.word	0x004008bd

004005dc <gfx_mono_ssd1306_init>:
{
  4005dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	gfx_mono_set_framebuffer(framebuffer);
  4005e0:	480d      	ldr	r0, [pc, #52]	; (400618 <gfx_mono_ssd1306_init+0x3c>)
  4005e2:	4b0e      	ldr	r3, [pc, #56]	; (40061c <gfx_mono_ssd1306_init+0x40>)
  4005e4:	4798      	blx	r3
	ssd1306_init();
  4005e6:	4b0e      	ldr	r3, [pc, #56]	; (400620 <gfx_mono_ssd1306_init+0x44>)
  4005e8:	4798      	blx	r3
 */
static inline void ssd1306_set_display_start_line_address(uint8_t address)
{
	// Make sure address is 6 bits
	address &= 0x3F;
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_START_LINE(address));
  4005ea:	2040      	movs	r0, #64	; 0x40
  4005ec:	4b0d      	ldr	r3, [pc, #52]	; (400624 <gfx_mono_ssd1306_init+0x48>)
  4005ee:	4798      	blx	r3
	for (page = 0; page < GFX_MONO_LCD_PAGES; page++) {
  4005f0:	2500      	movs	r5, #0
			gfx_mono_ssd1306_put_byte(page, column, 0x00, true);
  4005f2:	f04f 0801 	mov.w	r8, #1
  4005f6:	462f      	mov	r7, r5
  4005f8:	4e0b      	ldr	r6, [pc, #44]	; (400628 <gfx_mono_ssd1306_init+0x4c>)
{
  4005fa:	2400      	movs	r4, #0
			gfx_mono_ssd1306_put_byte(page, column, 0x00, true);
  4005fc:	4643      	mov	r3, r8
  4005fe:	463a      	mov	r2, r7
  400600:	b2e1      	uxtb	r1, r4
  400602:	4628      	mov	r0, r5
  400604:	47b0      	blx	r6
  400606:	3401      	adds	r4, #1
		for (column = 0; column < GFX_MONO_LCD_WIDTH; column++) {
  400608:	2c80      	cmp	r4, #128	; 0x80
  40060a:	d1f7      	bne.n	4005fc <gfx_mono_ssd1306_init+0x20>
	for (page = 0; page < GFX_MONO_LCD_PAGES; page++) {
  40060c:	3501      	adds	r5, #1
  40060e:	b2ed      	uxtb	r5, r5
  400610:	2d04      	cmp	r5, #4
  400612:	d1f2      	bne.n	4005fa <gfx_mono_ssd1306_init+0x1e>
  400614:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400618:	204009f4 	.word	0x204009f4
  40061c:	00400365 	.word	0x00400365
  400620:	004006dd 	.word	0x004006dd
  400624:	0040069d 	.word	0x0040069d
  400628:	0040058d 	.word	0x0040058d

0040062c <gfx_mono_ssd1306_draw_pixel>:
	if ((x > GFX_MONO_LCD_WIDTH - 1) || (y > GFX_MONO_LCD_HEIGHT - 1)) {
  40062c:	09c3      	lsrs	r3, r0, #7
  40062e:	d12a      	bne.n	400686 <gfx_mono_ssd1306_draw_pixel+0x5a>
  400630:	291f      	cmp	r1, #31
  400632:	d828      	bhi.n	400686 <gfx_mono_ssd1306_draw_pixel+0x5a>
{
  400634:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400638:	4614      	mov	r4, r2
  40063a:	4605      	mov	r5, r0
	page = y / GFX_MONO_LCD_PIXELS_PER_BYTE;
  40063c:	08ce      	lsrs	r6, r1, #3
	pixel_mask = (1 << (y - (page * 8)));
  40063e:	eba1 01c6 	sub.w	r1, r1, r6, lsl #3
  400642:	2201      	movs	r2, #1
  400644:	fa02 f701 	lsl.w	r7, r2, r1
  400648:	fa5f f887 	uxtb.w	r8, r7
\endcode
 */
uint8_t gfx_mono_ssd1306_get_byte(gfx_coord_t page, gfx_coord_t column)
{
#ifdef CONFIG_SSD1306_FRAMEBUFFER
	return gfx_mono_framebuffer_get_byte(page, column);
  40064c:	4601      	mov	r1, r0
  40064e:	4630      	mov	r0, r6
  400650:	4b0d      	ldr	r3, [pc, #52]	; (400688 <gfx_mono_ssd1306_draw_pixel+0x5c>)
  400652:	4798      	blx	r3
  400654:	4602      	mov	r2, r0
	switch (color) {
  400656:	2c01      	cmp	r4, #1
  400658:	d009      	beq.n	40066e <gfx_mono_ssd1306_draw_pixel+0x42>
  40065a:	b164      	cbz	r4, 400676 <gfx_mono_ssd1306_draw_pixel+0x4a>
  40065c:	2c02      	cmp	r4, #2
  40065e:	d00e      	beq.n	40067e <gfx_mono_ssd1306_draw_pixel+0x52>
	gfx_mono_put_byte(page, x, pixel_value);
  400660:	2300      	movs	r3, #0
  400662:	4629      	mov	r1, r5
  400664:	4630      	mov	r0, r6
  400666:	4c09      	ldr	r4, [pc, #36]	; (40068c <gfx_mono_ssd1306_draw_pixel+0x60>)
  400668:	47a0      	blx	r4
  40066a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		pixel_value |= pixel_mask;
  40066e:	ea48 0200 	orr.w	r2, r8, r0
  400672:	b2d2      	uxtb	r2, r2
		break;
  400674:	e7f4      	b.n	400660 <gfx_mono_ssd1306_draw_pixel+0x34>
		pixel_value &= ~pixel_mask;
  400676:	ea20 0207 	bic.w	r2, r0, r7
  40067a:	b2d2      	uxtb	r2, r2
		break;
  40067c:	e7f0      	b.n	400660 <gfx_mono_ssd1306_draw_pixel+0x34>
		pixel_value ^= pixel_mask;
  40067e:	ea88 0200 	eor.w	r2, r8, r0
  400682:	b2d2      	uxtb	r2, r2
		break;
  400684:	e7ec      	b.n	400660 <gfx_mono_ssd1306_draw_pixel+0x34>
  400686:	4770      	bx	lr
  400688:	00400381 	.word	0x00400381
  40068c:	0040058d 	.word	0x0040058d

00400690 <gfx_mono_ssd1306_get_byte>:
{
  400690:	b508      	push	{r3, lr}
	return gfx_mono_framebuffer_get_byte(page, column);
  400692:	4b01      	ldr	r3, [pc, #4]	; (400698 <gfx_mono_ssd1306_get_byte+0x8>)
  400694:	4798      	blx	r3
	ssd1306_set_column_address(column);

	return ssd1306_read_data();

#endif
}
  400696:	bd08      	pop	{r3, pc}
  400698:	00400381 	.word	0x00400381

0040069c <ssd1306_write_command>:
 * data write function is called based on the selected interface.
 *
 * \param command the command to write
 */
void ssd1306_write_command(uint8_t command)
{
  40069c:	b538      	push	{r3, r4, r5, lr}
  40069e:	4605      	mov	r5, r0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  4006a0:	2208      	movs	r2, #8
  4006a2:	4b09      	ldr	r3, [pc, #36]	; (4006c8 <ssd1306_write_command+0x2c>)
  4006a4:	635a      	str	r2, [r3, #52]	; 0x34
	ioport_set_pin_level(SSD1306_DC_PIN, false);
	
	spi_set_peripheral_chip_select_value(SPI0, 1);
  4006a6:	4c09      	ldr	r4, [pc, #36]	; (4006cc <ssd1306_write_command+0x30>)
  4006a8:	2101      	movs	r1, #1
  4006aa:	4620      	mov	r0, r4
  4006ac:	4b08      	ldr	r3, [pc, #32]	; (4006d0 <ssd1306_write_command+0x34>)
  4006ae:	4798      	blx	r3
	spi_write(SPI0, command, 1, 1);
  4006b0:	2301      	movs	r3, #1
  4006b2:	461a      	mov	r2, r3
  4006b4:	4629      	mov	r1, r5
  4006b6:	4620      	mov	r0, r4
  4006b8:	4c06      	ldr	r4, [pc, #24]	; (4006d4 <ssd1306_write_command+0x38>)
  4006ba:	47a0      	blx	r4
	delay_us(10);
  4006bc:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  4006c0:	4b05      	ldr	r3, [pc, #20]	; (4006d8 <ssd1306_write_command+0x3c>)
  4006c2:	4798      	blx	r3
  4006c4:	bd38      	pop	{r3, r4, r5, pc}
  4006c6:	bf00      	nop
  4006c8:	400e1000 	.word	0x400e1000
  4006cc:	40008000 	.word	0x40008000
  4006d0:	00400245 	.word	0x00400245
  4006d4:	0040025b 	.word	0x0040025b
  4006d8:	20400001 	.word	0x20400001

004006dc <ssd1306_init>:
{
  4006dc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  4006e0:	4d66      	ldr	r5, [pc, #408]	; (40087c <ssd1306_init+0x1a0>)
  4006e2:	f44f 3600 	mov.w	r6, #131072	; 0x20000
  4006e6:	612e      	str	r6, [r5, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  4006e8:	f8c5 60a0 	str.w	r6, [r5, #160]	; 0xa0
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  4006ec:	4b64      	ldr	r3, [pc, #400]	; (400880 <ssd1306_init+0x1a4>)
  4006ee:	2708      	movs	r7, #8
  4006f0:	611f      	str	r7, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  4006f2:	f8c3 70a0 	str.w	r7, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  4006f6:	666e      	str	r6, [r5, #100]	; 0x64
		base->PIO_PPDDR = mask;
  4006f8:	f8c5 6090 	str.w	r6, [r5, #144]	; 0x90
		base->PIO_MDDR = mask;
  4006fc:	656e      	str	r6, [r5, #84]	; 0x54
		base->PIO_IFDR = mask;
  4006fe:	626e      	str	r6, [r5, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  400700:	f8c5 6080 	str.w	r6, [r5, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  400704:	6f2a      	ldr	r2, [r5, #112]	; 0x70
  400706:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
  40070a:	672a      	str	r2, [r5, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  40070c:	6f6a      	ldr	r2, [r5, #116]	; 0x74
  40070e:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
  400712:	676a      	str	r2, [r5, #116]	; 0x74
		base->PIO_PUER = mask;
  400714:	665f      	str	r7, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  400716:	f8c3 7090 	str.w	r7, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  40071a:	655f      	str	r7, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  40071c:	625f      	str	r7, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  40071e:	f8c3 7080 	str.w	r7, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  400722:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  400724:	f022 0208 	bic.w	r2, r2, #8
  400728:	671a      	str	r2, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  40072a:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  40072c:	f022 0208 	bic.w	r2, r2, #8
  400730:	675a      	str	r2, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PER = mask;
  400732:	601f      	str	r7, [r3, #0]
  400734:	602e      	str	r6, [r5, #0]
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400736:	631f      	str	r7, [r3, #48]	; 0x30
  400738:	632e      	str	r6, [r5, #48]	; 0x30
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CLK_MASK, PIO_DEFAULT);
  40073a:	f8df 817c 	ldr.w	r8, [pc, #380]	; 4008b8 <ssd1306_init+0x1dc>
  40073e:	2300      	movs	r3, #0
  400740:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  400744:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400748:	4640      	mov	r0, r8
  40074a:	4c4e      	ldr	r4, [pc, #312]	; (400884 <ssd1306_init+0x1a8>)
  40074c:	47a0      	blx	r4
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_MOSI_MASK, PIO_DEFAULT);
  40074e:	2300      	movs	r3, #0
  400750:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  400754:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400758:	4640      	mov	r0, r8
  40075a:	47a0      	blx	r4
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CS_MASK, PIO_DEFAULT);
  40075c:	2300      	movs	r3, #0
  40075e:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  400762:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400766:	4640      	mov	r0, r8
  400768:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CLK_MASK, PIO_DEFAULT);
  40076a:	2300      	movs	r3, #0
  40076c:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  400770:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400774:	4640      	mov	r0, r8
  400776:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_MOSI_MASK, PIO_DEFAULT);
  400778:	2300      	movs	r3, #0
  40077a:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  40077e:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400782:	4640      	mov	r0, r8
  400784:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CS_MASK, PIO_DEFAULT);
  400786:	2300      	movs	r3, #0
  400788:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  40078c:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400790:	4640      	mov	r0, r8
  400792:	47a0      	blx	r4
	p_spi->SPI_CR = SPI_CR_SPIDIS;
  400794:	4c3c      	ldr	r4, [pc, #240]	; (400888 <ssd1306_init+0x1ac>)
  400796:	f04f 0902 	mov.w	r9, #2
  40079a:	f8c4 9000 	str.w	r9, [r4]
	p_spi->SPI_CR = SPI_CR_SWRST;
  40079e:	f04f 0880 	mov.w	r8, #128	; 0x80
  4007a2:	f8c4 8000 	str.w	r8, [r4]
	p_spi->SPI_MR |= SPI_MR_MSTR;
  4007a6:	6863      	ldr	r3, [r4, #4]
  4007a8:	f043 0301 	orr.w	r3, r3, #1
  4007ac:	6063      	str	r3, [r4, #4]
		spi_configure_cs_behavior(SPI0, 1, SPI_CS_KEEP_LOW);
  4007ae:	463a      	mov	r2, r7
  4007b0:	2101      	movs	r1, #1
  4007b2:	4620      	mov	r0, r4
  4007b4:	4b35      	ldr	r3, [pc, #212]	; (40088c <ssd1306_init+0x1b0>)
  4007b6:	4798      	blx	r3
		spi_set_clock_polarity(SPI0, 1, 0);
  4007b8:	2200      	movs	r2, #0
  4007ba:	2101      	movs	r1, #1
  4007bc:	4620      	mov	r0, r4
  4007be:	4b34      	ldr	r3, [pc, #208]	; (400890 <ssd1306_init+0x1b4>)
  4007c0:	4798      	blx	r3
		spi_set_clock_phase(SPI0, 1, 0);
  4007c2:	2200      	movs	r2, #0
  4007c4:	2101      	movs	r1, #1
  4007c6:	4620      	mov	r0, r4
  4007c8:	4b32      	ldr	r3, [pc, #200]	; (400894 <ssd1306_init+0x1b8>)
  4007ca:	4798      	blx	r3
	p_spi->SPI_MR &= (~SPI_MR_PS);
  4007cc:	6863      	ldr	r3, [r4, #4]
  4007ce:	f023 0302 	bic.w	r3, r3, #2
  4007d2:	6063      	str	r3, [r4, #4]
		spi_set_bits_per_transfer(SPI0, 1, SPI_CSR_BITS_8_BIT);
  4007d4:	2200      	movs	r2, #0
  4007d6:	2101      	movs	r1, #1
  4007d8:	4620      	mov	r0, r4
  4007da:	4b2f      	ldr	r3, [pc, #188]	; (400898 <ssd1306_init+0x1bc>)
  4007dc:	4798      	blx	r3
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable_loopback(Spi *p_spi)
{
	p_spi->SPI_MR &= (~SPI_MR_LLB);
  4007de:	6863      	ldr	r3, [r4, #4]
  4007e0:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  4007e4:	6063      	str	r3, [r4, #4]
	p_spi->SPI_MR |= SPI_MR_MODFDIS;
  4007e6:	6863      	ldr	r3, [r4, #4]
  4007e8:	f043 0310 	orr.w	r3, r3, #16
  4007ec:	6063      	str	r3, [r4, #4]
		int div = spi_calc_baudrate_div(2000000, sysclk_get_peripheral_hz());
  4007ee:	492b      	ldr	r1, [pc, #172]	; (40089c <ssd1306_init+0x1c0>)
  4007f0:	482b      	ldr	r0, [pc, #172]	; (4008a0 <ssd1306_init+0x1c4>)
  4007f2:	4b2c      	ldr	r3, [pc, #176]	; (4008a4 <ssd1306_init+0x1c8>)
  4007f4:	4798      	blx	r3
		spi_set_baudrate_div(SPI0,1, div);
  4007f6:	b2c2      	uxtb	r2, r0
  4007f8:	2101      	movs	r1, #1
  4007fa:	4620      	mov	r0, r4
  4007fc:	4b2a      	ldr	r3, [pc, #168]	; (4008a8 <ssd1306_init+0x1cc>)
  4007fe:	4798      	blx	r3
		spi_enable_clock(SPI0);
  400800:	4620      	mov	r0, r4
  400802:	4b2a      	ldr	r3, [pc, #168]	; (4008ac <ssd1306_init+0x1d0>)
  400804:	4798      	blx	r3
	p_spi->SPI_CR = SPI_CR_SPIEN;
  400806:	2301      	movs	r3, #1
  400808:	6023      	str	r3, [r4, #0]
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  40080a:	636e      	str	r6, [r5, #52]	; 0x34
	delay_cycles(delay_10us); // At lest 10us
  40080c:	f640 30b8 	movw	r0, #3000	; 0xbb8
  400810:	4c27      	ldr	r4, [pc, #156]	; (4008b0 <ssd1306_init+0x1d4>)
  400812:	47a0      	blx	r4
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400814:	632e      	str	r6, [r5, #48]	; 0x30
	delay_cycles(delay_10us); // At lest 10us
  400816:	f640 30b8 	movw	r0, #3000	; 0xbb8
  40081a:	47a0      	blx	r4
  40081c:	632e      	str	r6, [r5, #48]	; 0x30
	ssd1306_write_command(SSD1306_CMD_SET_MULTIPLEX_RATIO);
  40081e:	20a8      	movs	r0, #168	; 0xa8
  400820:	4c24      	ldr	r4, [pc, #144]	; (4008b4 <ssd1306_init+0x1d8>)
  400822:	47a0      	blx	r4
	ssd1306_write_command(0x1F);
  400824:	201f      	movs	r0, #31
  400826:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_OFFSET);
  400828:	20d3      	movs	r0, #211	; 0xd3
  40082a:	47a0      	blx	r4
	ssd1306_write_command(0x00);
  40082c:	2000      	movs	r0, #0
  40082e:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_START_LINE(0x00));
  400830:	2040      	movs	r0, #64	; 0x40
  400832:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_SEGMENT_RE_MAP_COL127_SEG0);
  400834:	20a1      	movs	r0, #161	; 0xa1
  400836:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_COM_OUTPUT_SCAN_DOWN);
  400838:	20c8      	movs	r0, #200	; 0xc8
  40083a:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_COM_PINS);
  40083c:	20da      	movs	r0, #218	; 0xda
  40083e:	47a0      	blx	r4
	ssd1306_write_command(0x02);
  400840:	4648      	mov	r0, r9
  400842:	47a0      	blx	r4
 *
 * \retval contrast the contrast value written to the OLED controller
 */
static inline uint8_t ssd1306_set_contrast(uint8_t contrast)
{
	ssd1306_write_command(SSD1306_CMD_SET_CONTRAST_CONTROL_FOR_BANK0);
  400844:	2081      	movs	r0, #129	; 0x81
  400846:	47a0      	blx	r4
	ssd1306_write_command(contrast);
  400848:	208f      	movs	r0, #143	; 0x8f
  40084a:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_ENTIRE_DISPLAY_AND_GDDRAM_ON);
  40084c:	20a4      	movs	r0, #164	; 0xa4
  40084e:	47a0      	blx	r4
 * This function will disable invert on all pixels on the OLED
 *
 */
static inline void ssd1306_display_invert_disable(void)
{
	ssd1306_write_command(SSD1306_CMD_SET_NORMAL_DISPLAY);
  400850:	20a6      	movs	r0, #166	; 0xa6
  400852:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_CLOCK_DIVIDE_RATIO);
  400854:	20d5      	movs	r0, #213	; 0xd5
  400856:	47a0      	blx	r4
	ssd1306_write_command(0x80);
  400858:	4640      	mov	r0, r8
  40085a:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_CHARGE_PUMP_SETTING);
  40085c:	208d      	movs	r0, #141	; 0x8d
  40085e:	47a0      	blx	r4
	ssd1306_write_command(0x14);
  400860:	2014      	movs	r0, #20
  400862:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_VCOMH_DESELECT_LEVEL);
  400864:	20db      	movs	r0, #219	; 0xdb
  400866:	47a0      	blx	r4
	ssd1306_write_command(0x40); // Default => 0x20 (0.77*VCC)
  400868:	2040      	movs	r0, #64	; 0x40
  40086a:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_PRE_CHARGE_PERIOD);
  40086c:	20d9      	movs	r0, #217	; 0xd9
  40086e:	47a0      	blx	r4
	ssd1306_write_command(0xF1);
  400870:	20f1      	movs	r0, #241	; 0xf1
  400872:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_ON);
  400874:	20af      	movs	r0, #175	; 0xaf
  400876:	47a0      	blx	r4
  400878:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40087c:	400e1200 	.word	0x400e1200
  400880:	400e1000 	.word	0x400e1000
  400884:	00400bd9 	.word	0x00400bd9
  400888:	40008000 	.word	0x40008000
  40088c:	004002cb 	.word	0x004002cb
  400890:	0040028f 	.word	0x0040028f
  400894:	004002ad 	.word	0x004002ad
  400898:	00400311 	.word	0x00400311
  40089c:	08f0d180 	.word	0x08f0d180
  4008a0:	001e8480 	.word	0x001e8480
  4008a4:	00400325 	.word	0x00400325
  4008a8:	0040033b 	.word	0x0040033b
  4008ac:	00400219 	.word	0x00400219
  4008b0:	20400001 	.word	0x20400001
  4008b4:	0040069d 	.word	0x0040069d
  4008b8:	400e1400 	.word	0x400e1400

004008bc <ssd1306_write_data>:
 * data write function is called based on the selected interface.
 *
 * \param data the data to write
 */
void ssd1306_write_data(uint8_t data)
{
  4008bc:	b538      	push	{r3, r4, r5, lr}
  4008be:	4605      	mov	r5, r0
  4008c0:	2208      	movs	r2, #8
  4008c2:	4b09      	ldr	r3, [pc, #36]	; (4008e8 <ssd1306_write_data+0x2c>)
  4008c4:	631a      	str	r2, [r3, #48]	; 0x30
	ioport_set_pin_level(SSD1306_DC_PIN, true);
	
	spi_set_peripheral_chip_select_value(SPI0, 1);
  4008c6:	4c09      	ldr	r4, [pc, #36]	; (4008ec <ssd1306_write_data+0x30>)
  4008c8:	2101      	movs	r1, #1
  4008ca:	4620      	mov	r0, r4
  4008cc:	4b08      	ldr	r3, [pc, #32]	; (4008f0 <ssd1306_write_data+0x34>)
  4008ce:	4798      	blx	r3
	spi_write(SPI0, data, 1, 1);
  4008d0:	2301      	movs	r3, #1
  4008d2:	461a      	mov	r2, r3
  4008d4:	4629      	mov	r1, r5
  4008d6:	4620      	mov	r0, r4
  4008d8:	4c06      	ldr	r4, [pc, #24]	; (4008f4 <ssd1306_write_data+0x38>)
  4008da:	47a0      	blx	r4
	delay_us(10);
  4008dc:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  4008e0:	4b05      	ldr	r3, [pc, #20]	; (4008f8 <ssd1306_write_data+0x3c>)
  4008e2:	4798      	blx	r3
  4008e4:	bd38      	pop	{r3, r4, r5, pc}
  4008e6:	bf00      	nop
  4008e8:	400e1000 	.word	0x400e1000
  4008ec:	40008000 	.word	0x40008000
  4008f0:	00400245 	.word	0x00400245
  4008f4:	0040025b 	.word	0x0040025b
  4008f8:	20400001 	.word	0x20400001

004008fc <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  4008fc:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  4008fe:	4810      	ldr	r0, [pc, #64]	; (400940 <sysclk_init+0x44>)
  400900:	4b10      	ldr	r3, [pc, #64]	; (400944 <sysclk_init+0x48>)
  400902:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  400904:	213e      	movs	r1, #62	; 0x3e
  400906:	2000      	movs	r0, #0
  400908:	4b0f      	ldr	r3, [pc, #60]	; (400948 <sysclk_init+0x4c>)
  40090a:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  40090c:	4c0f      	ldr	r4, [pc, #60]	; (40094c <sysclk_init+0x50>)
  40090e:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  400910:	2800      	cmp	r0, #0
  400912:	d0fc      	beq.n	40090e <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  400914:	4b0e      	ldr	r3, [pc, #56]	; (400950 <sysclk_init+0x54>)
  400916:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  400918:	4a0e      	ldr	r2, [pc, #56]	; (400954 <sysclk_init+0x58>)
  40091a:	4b0f      	ldr	r3, [pc, #60]	; (400958 <sysclk_init+0x5c>)
  40091c:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
	return pmc_is_locked_pllack();
  40091e:	4c0f      	ldr	r4, [pc, #60]	; (40095c <sysclk_init+0x60>)
  400920:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  400922:	2800      	cmp	r0, #0
  400924:	d0fc      	beq.n	400920 <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
  400926:	2002      	movs	r0, #2
  400928:	4b0d      	ldr	r3, [pc, #52]	; (400960 <sysclk_init+0x64>)
  40092a:	4798      	blx	r3
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  40092c:	2000      	movs	r0, #0
  40092e:	4b0d      	ldr	r3, [pc, #52]	; (400964 <sysclk_init+0x68>)
  400930:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}
	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  400932:	4b0d      	ldr	r3, [pc, #52]	; (400968 <sysclk_init+0x6c>)
  400934:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  400936:	4802      	ldr	r0, [pc, #8]	; (400940 <sysclk_init+0x44>)
  400938:	4b02      	ldr	r3, [pc, #8]	; (400944 <sysclk_init+0x48>)
  40093a:	4798      	blx	r3
  40093c:	bd10      	pop	{r4, pc}
  40093e:	bf00      	nop
  400940:	11e1a300 	.word	0x11e1a300
  400944:	004013dd 	.word	0x004013dd
  400948:	00400e69 	.word	0x00400e69
  40094c:	00400ebd 	.word	0x00400ebd
  400950:	00400ecd 	.word	0x00400ecd
  400954:	20183f01 	.word	0x20183f01
  400958:	400e0600 	.word	0x400e0600
  40095c:	00400edd 	.word	0x00400edd
  400960:	00400dcd 	.word	0x00400dcd
  400964:	00400e05 	.word	0x00400e05
  400968:	004012d1 	.word	0x004012d1

0040096c <board_init>:
	__ISB();
}
#endif

void board_init(void)
{
  40096c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  40096e:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  400972:	4b48      	ldr	r3, [pc, #288]	; (400a94 <board_init+0x128>)
  400974:	605a      	str	r2, [r3, #4]
    This function acts as a special kind of Data Memory Barrier.
    It completes when all explicit memory accesses before this instruction complete.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DSB(void)
{
  __ASM volatile ("dsb");
  400976:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  40097a:	f3bf 8f6f 	isb	sy
__STATIC_INLINE void SCB_EnableICache(void)
{
  #if (__ICACHE_PRESENT == 1)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0;                       // invalidate I-Cache
  40097e:	4b46      	ldr	r3, [pc, #280]	; (400a98 <board_init+0x12c>)
  400980:	2200      	movs	r2, #0
  400982:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
    SCB->CCR |=  SCB_CCR_IC_Msk;            // enable I-Cache
  400986:	695a      	ldr	r2, [r3, #20]
  400988:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
  40098c:	615a      	str	r2, [r3, #20]
  __ASM volatile ("dsb");
  40098e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400992:	f3bf 8f6f 	isb	sy
{
  #if (__DCACHE_PRESENT == 1)
    uint32_t ccsidr, sshift, wshift, sw;
    uint32_t sets, ways;

    ccsidr  = SCB->CCSIDR;
  400996:	f8d3 7080 	ldr.w	r7, [r3, #128]	; 0x80
    sets    = CCSIDR_SETS(ccsidr);
  40099a:	f3c7 364e 	ubfx	r6, r7, #13, #15
    sshift  = CCSIDR_LSSHIFT(ccsidr) + 4;
  40099e:	f007 0007 	and.w	r0, r7, #7
  4009a2:	3004      	adds	r0, #4
    ways    = CCSIDR_WAYS(ccsidr);
  4009a4:	f3c7 07c9 	ubfx	r7, r7, #3, #10
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint8_t __CLZ(uint32_t value)
{
  uint32_t result;

  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
  4009a8:	fab7 fe87 	clz	lr, r7
    wshift  = __CLZ(ways) & 0x1f;
  4009ac:	f00e 0e1f 	and.w	lr, lr, #31
  __ASM volatile ("dsb");
  4009b0:	f3bf 8f4f 	dsb	sy
  4009b4:	f04f 34ff 	mov.w	r4, #4294967295
  4009b8:	fa04 fc00 	lsl.w	ip, r4, r0
  4009bc:	fa06 f000 	lsl.w	r0, r6, r0
  4009c0:	fa04 f40e 	lsl.w	r4, r4, lr
  4009c4:	fa07 fe0e 	lsl.w	lr, r7, lr

    do {                                    // invalidate D-Cache
         int32_t tmpways = ways;
         do {
              sw = ((tmpways << wshift) | (sets << sshift));
              SCB->DCISW = sw;
  4009c8:	461d      	mov	r5, r3
         int32_t tmpways = ways;
  4009ca:	463a      	mov	r2, r7
  4009cc:	4673      	mov	r3, lr
              sw = ((tmpways << wshift) | (sets << sshift));
  4009ce:	ea40 0103 	orr.w	r1, r0, r3
              SCB->DCISW = sw;
  4009d2:	f8c5 1260 	str.w	r1, [r5, #608]	; 0x260
            } while(tmpways--);
  4009d6:	3a01      	subs	r2, #1
  4009d8:	4423      	add	r3, r4
  4009da:	f1b2 3fff 	cmp.w	r2, #4294967295
  4009de:	d1f6      	bne.n	4009ce <board_init+0x62>
        } while(sets--);
  4009e0:	3e01      	subs	r6, #1
  4009e2:	4460      	add	r0, ip
  4009e4:	f1b6 3fff 	cmp.w	r6, #4294967295
  4009e8:	d1ef      	bne.n	4009ca <board_init+0x5e>
  4009ea:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  SCB_CCR_DC_Msk;            // enable D-Cache
  4009ee:	4b2a      	ldr	r3, [pc, #168]	; (400a98 <board_init+0x12c>)
  4009f0:	695a      	ldr	r2, [r3, #20]
  4009f2:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
  4009f6:	615a      	str	r2, [r3, #20]
  4009f8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  4009fc:	f3bf 8f6f 	isb	sy
		*dst++ = *src++;
	}
#endif
#else
	/* TCM Configuration */
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400a00:	4a26      	ldr	r2, [pc, #152]	; (400a9c <board_init+0x130>)
  400a02:	4927      	ldr	r1, [pc, #156]	; (400aa0 <board_init+0x134>)
  400a04:	6051      	str	r1, [r2, #4]
					| EEFC_FCR_FARG(8));
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400a06:	f5a1 7180 	sub.w	r1, r1, #256	; 0x100
  400a0a:	6051      	str	r1, [r2, #4]
  __ASM volatile ("dsb");
  400a0c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400a10:	f3bf 8f6f 	isb	sy
	SCB->ITCMCR &= ~(uint32_t)(1UL);
  400a14:	f8d3 2290 	ldr.w	r2, [r3, #656]	; 0x290
  400a18:	f022 0201 	bic.w	r2, r2, #1
  400a1c:	f8c3 2290 	str.w	r2, [r3, #656]	; 0x290
	SCB->DTCMCR &= ~(uint32_t)SCB_DTCMCR_EN_Msk;
  400a20:	f8d3 2294 	ldr.w	r2, [r3, #660]	; 0x294
  400a24:	f022 0201 	bic.w	r2, r2, #1
  400a28:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
  __ASM volatile ("dsb");
  400a2c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400a30:	f3bf 8f6f 	isb	sy
  400a34:	200a      	movs	r0, #10
  400a36:	4c1b      	ldr	r4, [pc, #108]	; (400aa4 <board_init+0x138>)
  400a38:	47a0      	blx	r4
  400a3a:	200b      	movs	r0, #11
  400a3c:	47a0      	blx	r4
  400a3e:	200c      	movs	r0, #12
  400a40:	47a0      	blx	r4
  400a42:	2010      	movs	r0, #16
  400a44:	47a0      	blx	r4
  400a46:	2011      	movs	r0, #17
  400a48:	47a0      	blx	r4
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400a4a:	4b17      	ldr	r3, [pc, #92]	; (400aa8 <board_init+0x13c>)
  400a4c:	f44f 7280 	mov.w	r2, #256	; 0x100
  400a50:	611a      	str	r2, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400a52:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400a56:	631a      	str	r2, [r3, #48]	; 0x30
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  400a58:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
  400a5c:	f44f 6200 	mov.w	r2, #2048	; 0x800
  400a60:	615a      	str	r2, [r3, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400a62:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  400a66:	665a      	str	r2, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  400a68:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  400a6c:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFER = mask;
  400a6e:	621a      	str	r2, [r3, #32]
		base->PIO_IFSCER = mask;
  400a70:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
		base->PIO_ABCDSR[0] &= ~mask;
  400a74:	6f19      	ldr	r1, [r3, #112]	; 0x70
  400a76:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  400a7a:	6719      	str	r1, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400a7c:	6f59      	ldr	r1, [r3, #116]	; 0x74
  400a7e:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  400a82:	6759      	str	r1, [r3, #116]	; 0x74
	case IOPORT_SENSE_FALLING:
		base->PIO_ESR = mask;
		base->PIO_FELLSR = mask;
		break;
	case IOPORT_SENSE_RISING:
		base->PIO_ESR = mask;
  400a84:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
		base->PIO_REHLSR = mask;
  400a88:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
		break;
	default:
		base->PIO_AIMDR = mask;
		return;
	}
	base->PIO_AIMER = mask;
  400a8c:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
  400a90:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400a92:	bf00      	nop
  400a94:	400e1850 	.word	0x400e1850
  400a98:	e000ed00 	.word	0xe000ed00
  400a9c:	400e0c00 	.word	0x400e0c00
  400aa0:	5a00080c 	.word	0x5a00080c
  400aa4:	00400eed 	.word	0x00400eed
  400aa8:	400e1200 	.word	0x400e1200

00400aac <pio_set_debounce_filter>:
void pio_set_debounce_filter(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_cut_off)
{
#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	/* Set Debouncing, 0 bit field no effect */
	p_pio->PIO_IFSCER = ul_mask;
  400aac:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
	/*
	 * The debouncing filter can filter a pulse of less than 1/2 Period of a
	 * programmable Divided Slow Clock:
	 * Tdiv_slclk = ((DIV+1)*2).Tslow_clock
	 */
	p_pio->PIO_SCDR = PIO_SCDR_DIV((FREQ_SLOW_CLOCK_EXT /
  400ab0:	0053      	lsls	r3, r2, #1
  400ab2:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  400ab6:	fbb2 f2f3 	udiv	r2, r2, r3
  400aba:	3a01      	subs	r2, #1
  400abc:	f3c2 020d 	ubfx	r2, r2, #0, #14
  400ac0:	f8c0 208c 	str.w	r2, [r0, #140]	; 0x8c
  400ac4:	4770      	bx	lr

00400ac6 <pio_set>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_set(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_SODR = ul_mask;
  400ac6:	6301      	str	r1, [r0, #48]	; 0x30
  400ac8:	4770      	bx	lr

00400aca <pio_clear>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_clear(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_CODR = ul_mask;
  400aca:	6341      	str	r1, [r0, #52]	; 0x34
  400acc:	4770      	bx	lr

00400ace <pio_get>:
uint32_t pio_get(Pio *p_pio, const pio_type_t ul_type,
		const uint32_t ul_mask)
{
	uint32_t ul_reg;

	if ((ul_type == PIO_OUTPUT_0) || (ul_type == PIO_OUTPUT_1)) {
  400ace:	f021 6100 	bic.w	r1, r1, #134217728	; 0x8000000
  400ad2:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400ad6:	d105      	bne.n	400ae4 <pio_get+0x16>
		ul_reg = p_pio->PIO_ODSR;
  400ad8:	6b83      	ldr	r3, [r0, #56]	; 0x38
	} else {
		ul_reg = p_pio->PIO_PDSR;
	}

	if ((ul_reg & ul_mask) == 0) {
  400ada:	4213      	tst	r3, r2
		return 0;
	} else {
		return 1;
	}
}
  400adc:	bf14      	ite	ne
  400ade:	2001      	movne	r0, #1
  400ae0:	2000      	moveq	r0, #0
  400ae2:	4770      	bx	lr
		ul_reg = p_pio->PIO_PDSR;
  400ae4:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
  400ae6:	e7f8      	b.n	400ada <pio_get+0xc>

00400ae8 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  400ae8:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  400aea:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400aee:	d03a      	beq.n	400b66 <pio_set_peripheral+0x7e>
  400af0:	d813      	bhi.n	400b1a <pio_set_peripheral+0x32>
  400af2:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400af6:	d025      	beq.n	400b44 <pio_set_peripheral+0x5c>
  400af8:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400afc:	d10a      	bne.n	400b14 <pio_set_peripheral+0x2c>

		ul_sr = p_pio->PIO_ABCDSR[1];
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
		break;
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  400afe:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400b00:	4313      	orrs	r3, r2
  400b02:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  400b04:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400b06:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400b08:	400b      	ands	r3, r1
  400b0a:	ea23 0302 	bic.w	r3, r3, r2
  400b0e:	6743      	str	r3, [r0, #116]	; 0x74
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  400b10:	6042      	str	r2, [r0, #4]
  400b12:	4770      	bx	lr
	switch (ul_type) {
  400b14:	2900      	cmp	r1, #0
  400b16:	d1fb      	bne.n	400b10 <pio_set_peripheral+0x28>
  400b18:	4770      	bx	lr
  400b1a:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  400b1e:	d021      	beq.n	400b64 <pio_set_peripheral+0x7c>
  400b20:	d809      	bhi.n	400b36 <pio_set_peripheral+0x4e>
  400b22:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  400b26:	d1f3      	bne.n	400b10 <pio_set_peripheral+0x28>
		ul_sr = p_pio->PIO_ABCDSR[0];
  400b28:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400b2a:	4313      	orrs	r3, r2
  400b2c:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400b2e:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400b30:	4313      	orrs	r3, r2
  400b32:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400b34:	e7ec      	b.n	400b10 <pio_set_peripheral+0x28>
	switch (ul_type) {
  400b36:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400b3a:	d013      	beq.n	400b64 <pio_set_peripheral+0x7c>
  400b3c:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400b40:	d010      	beq.n	400b64 <pio_set_peripheral+0x7c>
  400b42:	e7e5      	b.n	400b10 <pio_set_peripheral+0x28>
{
  400b44:	b410      	push	{r4}
		ul_sr = p_pio->PIO_ABCDSR[0];
  400b46:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400b48:	6f04      	ldr	r4, [r0, #112]	; 0x70
  400b4a:	43d3      	mvns	r3, r2
  400b4c:	4021      	ands	r1, r4
  400b4e:	461c      	mov	r4, r3
  400b50:	4019      	ands	r1, r3
  400b52:	6701      	str	r1, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400b54:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400b56:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400b58:	400b      	ands	r3, r1
  400b5a:	4023      	ands	r3, r4
  400b5c:	6743      	str	r3, [r0, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  400b5e:	6042      	str	r2, [r0, #4]
}
  400b60:	f85d 4b04 	ldr.w	r4, [sp], #4
  400b64:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABCDSR[0];
  400b66:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400b68:	6f01      	ldr	r1, [r0, #112]	; 0x70
  400b6a:	400b      	ands	r3, r1
  400b6c:	ea23 0302 	bic.w	r3, r3, r2
  400b70:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400b72:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400b74:	4313      	orrs	r3, r2
  400b76:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400b78:	e7ca      	b.n	400b10 <pio_set_peripheral+0x28>

00400b7a <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  400b7a:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400b7c:	f012 0f01 	tst.w	r2, #1
  400b80:	d10d      	bne.n	400b9e <pio_set_input+0x24>
		p_pio->PIO_PUDR = ul_mask;
  400b82:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  400b84:	f012 0f0a 	tst.w	r2, #10
  400b88:	d00b      	beq.n	400ba2 <pio_set_input+0x28>
		p_pio->PIO_IFER = ul_mask;
  400b8a:	6201      	str	r1, [r0, #32]
	if (ul_attribute & PIO_DEGLITCH) {
  400b8c:	f012 0f02 	tst.w	r2, #2
  400b90:	d109      	bne.n	400ba6 <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
  400b92:	f012 0f08 	tst.w	r2, #8
  400b96:	d008      	beq.n	400baa <pio_set_input+0x30>
			p_pio->PIO_IFSCER = ul_mask;
  400b98:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
  400b9c:	e005      	b.n	400baa <pio_set_input+0x30>
		p_pio->PIO_PUER = ul_mask;
  400b9e:	6641      	str	r1, [r0, #100]	; 0x64
  400ba0:	e7f0      	b.n	400b84 <pio_set_input+0xa>
		p_pio->PIO_IFDR = ul_mask;
  400ba2:	6241      	str	r1, [r0, #36]	; 0x24
  400ba4:	e7f2      	b.n	400b8c <pio_set_input+0x12>
		p_pio->PIO_IFSCDR = ul_mask;
  400ba6:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
	p_pio->PIO_ODR = ul_mask;
  400baa:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  400bac:	6001      	str	r1, [r0, #0]
  400bae:	4770      	bx	lr

00400bb0 <pio_set_output>:
{
  400bb0:	b410      	push	{r4}
  400bb2:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
  400bb4:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400bb6:	b94c      	cbnz	r4, 400bcc <pio_set_output+0x1c>
		p_pio->PIO_PUDR = ul_mask;
  400bb8:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
  400bba:	b14b      	cbz	r3, 400bd0 <pio_set_output+0x20>
		p_pio->PIO_MDER = ul_mask;
  400bbc:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
  400bbe:	b94a      	cbnz	r2, 400bd4 <pio_set_output+0x24>
		p_pio->PIO_CODR = ul_mask;
  400bc0:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  400bc2:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  400bc4:	6001      	str	r1, [r0, #0]
}
  400bc6:	f85d 4b04 	ldr.w	r4, [sp], #4
  400bca:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
  400bcc:	6641      	str	r1, [r0, #100]	; 0x64
  400bce:	e7f4      	b.n	400bba <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
  400bd0:	6541      	str	r1, [r0, #84]	; 0x54
  400bd2:	e7f4      	b.n	400bbe <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
  400bd4:	6301      	str	r1, [r0, #48]	; 0x30
  400bd6:	e7f4      	b.n	400bc2 <pio_set_output+0x12>

00400bd8 <pio_configure>:
{
  400bd8:	b570      	push	{r4, r5, r6, lr}
  400bda:	b082      	sub	sp, #8
  400bdc:	4605      	mov	r5, r0
  400bde:	4616      	mov	r6, r2
  400be0:	461c      	mov	r4, r3
	switch (ul_type) {
  400be2:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  400be6:	d014      	beq.n	400c12 <pio_configure+0x3a>
  400be8:	d90a      	bls.n	400c00 <pio_configure+0x28>
  400bea:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400bee:	d024      	beq.n	400c3a <pio_configure+0x62>
  400bf0:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400bf4:	d021      	beq.n	400c3a <pio_configure+0x62>
  400bf6:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  400bfa:	d017      	beq.n	400c2c <pio_configure+0x54>
		return 0;
  400bfc:	2000      	movs	r0, #0
  400bfe:	e01a      	b.n	400c36 <pio_configure+0x5e>
	switch (ul_type) {
  400c00:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400c04:	d005      	beq.n	400c12 <pio_configure+0x3a>
  400c06:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400c0a:	d002      	beq.n	400c12 <pio_configure+0x3a>
  400c0c:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400c10:	d1f4      	bne.n	400bfc <pio_configure+0x24>
		pio_set_peripheral(p_pio, ul_type, ul_mask);
  400c12:	4632      	mov	r2, r6
  400c14:	4628      	mov	r0, r5
  400c16:	4b11      	ldr	r3, [pc, #68]	; (400c5c <pio_configure+0x84>)
  400c18:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400c1a:	f014 0f01 	tst.w	r4, #1
  400c1e:	d102      	bne.n	400c26 <pio_configure+0x4e>
		p_pio->PIO_PUDR = ul_mask;
  400c20:	662e      	str	r6, [r5, #96]	; 0x60
	return 1;
  400c22:	2001      	movs	r0, #1
  400c24:	e007      	b.n	400c36 <pio_configure+0x5e>
		p_pio->PIO_PUER = ul_mask;
  400c26:	666e      	str	r6, [r5, #100]	; 0x64
	return 1;
  400c28:	2001      	movs	r0, #1
  400c2a:	e004      	b.n	400c36 <pio_configure+0x5e>
		pio_set_input(p_pio, ul_mask, ul_attribute);
  400c2c:	461a      	mov	r2, r3
  400c2e:	4631      	mov	r1, r6
  400c30:	4b0b      	ldr	r3, [pc, #44]	; (400c60 <pio_configure+0x88>)
  400c32:	4798      	blx	r3
	return 1;
  400c34:	2001      	movs	r0, #1
}
  400c36:	b002      	add	sp, #8
  400c38:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_output(p_pio, ul_mask, (ul_type == PIO_OUTPUT_1),
  400c3a:	f004 0301 	and.w	r3, r4, #1
  400c3e:	9300      	str	r3, [sp, #0]
  400c40:	f3c4 0380 	ubfx	r3, r4, #2, #1
  400c44:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400c48:	bf14      	ite	ne
  400c4a:	2200      	movne	r2, #0
  400c4c:	2201      	moveq	r2, #1
  400c4e:	4631      	mov	r1, r6
  400c50:	4628      	mov	r0, r5
  400c52:	4c04      	ldr	r4, [pc, #16]	; (400c64 <pio_configure+0x8c>)
  400c54:	47a0      	blx	r4
	return 1;
  400c56:	2001      	movs	r0, #1
		break;
  400c58:	e7ed      	b.n	400c36 <pio_configure+0x5e>
  400c5a:	bf00      	nop
  400c5c:	00400ae9 	.word	0x00400ae9
  400c60:	00400b7b 	.word	0x00400b7b
  400c64:	00400bb1 	.word	0x00400bb1

00400c68 <pio_configure_interrupt>:
	if (ul_attr & PIO_IT_AIME) {
  400c68:	f012 0f10 	tst.w	r2, #16
  400c6c:	d012      	beq.n	400c94 <pio_configure_interrupt+0x2c>
		p_pio->PIO_AIMER = ul_mask;
  400c6e:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0
		if (ul_attr & PIO_IT_RE_OR_HL) {
  400c72:	f012 0f20 	tst.w	r2, #32
  400c76:	d007      	beq.n	400c88 <pio_configure_interrupt+0x20>
			p_pio->PIO_REHLSR = ul_mask;
  400c78:	f8c0 10d4 	str.w	r1, [r0, #212]	; 0xd4
		if (ul_attr & PIO_IT_EDGE) {
  400c7c:	f012 0f40 	tst.w	r2, #64	; 0x40
  400c80:	d005      	beq.n	400c8e <pio_configure_interrupt+0x26>
			p_pio->PIO_ESR = ul_mask;
  400c82:	f8c0 10c0 	str.w	r1, [r0, #192]	; 0xc0
  400c86:	4770      	bx	lr
			p_pio->PIO_FELLSR = ul_mask;
  400c88:	f8c0 10d0 	str.w	r1, [r0, #208]	; 0xd0
  400c8c:	e7f6      	b.n	400c7c <pio_configure_interrupt+0x14>
			p_pio->PIO_LSR = ul_mask;
  400c8e:	f8c0 10c4 	str.w	r1, [r0, #196]	; 0xc4
  400c92:	4770      	bx	lr
		p_pio->PIO_AIMDR = ul_mask;
  400c94:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
  400c98:	4770      	bx	lr

00400c9a <pio_enable_interrupt>:
	p_pio->PIO_IER = ul_mask;
  400c9a:	6401      	str	r1, [r0, #64]	; 0x40
  400c9c:	4770      	bx	lr

00400c9e <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  400c9e:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  400ca0:	4770      	bx	lr

00400ca2 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  400ca2:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  400ca4:	4770      	bx	lr
	...

00400ca8 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  400ca8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400cac:	4604      	mov	r4, r0
  400cae:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  400cb0:	4b0e      	ldr	r3, [pc, #56]	; (400cec <pio_handler_process+0x44>)
  400cb2:	4798      	blx	r3
  400cb4:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  400cb6:	4620      	mov	r0, r4
  400cb8:	4b0d      	ldr	r3, [pc, #52]	; (400cf0 <pio_handler_process+0x48>)
  400cba:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  400cbc:	4005      	ands	r5, r0
  400cbe:	d013      	beq.n	400ce8 <pio_handler_process+0x40>
  400cc0:	4c0c      	ldr	r4, [pc, #48]	; (400cf4 <pio_handler_process+0x4c>)
  400cc2:	f104 0660 	add.w	r6, r4, #96	; 0x60
  400cc6:	e003      	b.n	400cd0 <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  400cc8:	42b4      	cmp	r4, r6
  400cca:	d00d      	beq.n	400ce8 <pio_handler_process+0x40>
  400ccc:	3410      	adds	r4, #16
		while (status != 0) {
  400cce:	b15d      	cbz	r5, 400ce8 <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  400cd0:	6820      	ldr	r0, [r4, #0]
  400cd2:	4540      	cmp	r0, r8
  400cd4:	d1f8      	bne.n	400cc8 <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  400cd6:	6861      	ldr	r1, [r4, #4]
  400cd8:	4229      	tst	r1, r5
  400cda:	d0f5      	beq.n	400cc8 <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  400cdc:	68e3      	ldr	r3, [r4, #12]
  400cde:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  400ce0:	6863      	ldr	r3, [r4, #4]
  400ce2:	ea25 0503 	bic.w	r5, r5, r3
  400ce6:	e7ef      	b.n	400cc8 <pio_handler_process+0x20>
  400ce8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400cec:	00400c9f 	.word	0x00400c9f
  400cf0:	00400ca3 	.word	0x00400ca3
  400cf4:	20400bf4 	.word	0x20400bf4

00400cf8 <pio_handler_set>:
 *
 * \return 0 if successful, 1 if the maximum number of sources has been defined.
 */
uint32_t pio_handler_set(Pio *p_pio, uint32_t ul_id, uint32_t ul_mask,
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
  400cf8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint8_t i;
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
  400cfa:	4c18      	ldr	r4, [pc, #96]	; (400d5c <pio_handler_set+0x64>)
  400cfc:	6826      	ldr	r6, [r4, #0]
  400cfe:	2e06      	cmp	r6, #6
  400d00:	d82a      	bhi.n	400d58 <pio_handler_set+0x60>
  400d02:	f04f 0c00 	mov.w	ip, #0
  400d06:	4664      	mov	r4, ip
		return 1;

    /* Check interrupt for this pin, if already defined, redefine it. */
	for (i = 0; i <= gs_ul_nb_sources; i++) {
		pSource = &(gs_interrupt_sources[i]);
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  400d08:	4f15      	ldr	r7, [pc, #84]	; (400d60 <pio_handler_set+0x68>)
  400d0a:	e004      	b.n	400d16 <pio_handler_set+0x1e>
	for (i = 0; i <= gs_ul_nb_sources; i++) {
  400d0c:	3401      	adds	r4, #1
  400d0e:	b2e4      	uxtb	r4, r4
  400d10:	46a4      	mov	ip, r4
  400d12:	42a6      	cmp	r6, r4
  400d14:	d309      	bcc.n	400d2a <pio_handler_set+0x32>
		pSource = &(gs_interrupt_sources[i]);
  400d16:	46a6      	mov	lr, r4
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  400d18:	0125      	lsls	r5, r4, #4
  400d1a:	597d      	ldr	r5, [r7, r5]
  400d1c:	428d      	cmp	r5, r1
  400d1e:	d1f5      	bne.n	400d0c <pio_handler_set+0x14>
  400d20:	eb07 1504 	add.w	r5, r7, r4, lsl #4
  400d24:	686d      	ldr	r5, [r5, #4]
  400d26:	4295      	cmp	r5, r2
  400d28:	d1f0      	bne.n	400d0c <pio_handler_set+0x14>
			break;
		}
	}

	/* Define new source */
	pSource->id = ul_id;
  400d2a:	4d0d      	ldr	r5, [pc, #52]	; (400d60 <pio_handler_set+0x68>)
  400d2c:	ea4f 1e0e 	mov.w	lr, lr, lsl #4
  400d30:	eb05 040e 	add.w	r4, r5, lr
  400d34:	f845 100e 	str.w	r1, [r5, lr]
	pSource->mask = ul_mask;
  400d38:	6062      	str	r2, [r4, #4]
	pSource->attr = ul_attr;
  400d3a:	60a3      	str	r3, [r4, #8]
	pSource->handler = p_handler;
  400d3c:	9906      	ldr	r1, [sp, #24]
  400d3e:	60e1      	str	r1, [r4, #12]
	if (i == gs_ul_nb_sources + 1) {
  400d40:	3601      	adds	r6, #1
  400d42:	4566      	cmp	r6, ip
  400d44:	d005      	beq.n	400d52 <pio_handler_set+0x5a>
  400d46:	4611      	mov	r1, r2
		gs_ul_nb_sources++;
	}

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
  400d48:	461a      	mov	r2, r3
  400d4a:	4b06      	ldr	r3, [pc, #24]	; (400d64 <pio_handler_set+0x6c>)
  400d4c:	4798      	blx	r3

	return 0;
  400d4e:	2000      	movs	r0, #0
  400d50:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		gs_ul_nb_sources++;
  400d52:	4902      	ldr	r1, [pc, #8]	; (400d5c <pio_handler_set+0x64>)
  400d54:	600e      	str	r6, [r1, #0]
  400d56:	e7f6      	b.n	400d46 <pio_handler_set+0x4e>
		return 1;
  400d58:	2001      	movs	r0, #1
}
  400d5a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400d5c:	20400c64 	.word	0x20400c64
  400d60:	20400bf4 	.word	0x20400bf4
  400d64:	00400c69 	.word	0x00400c69

00400d68 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  400d68:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  400d6a:	210a      	movs	r1, #10
  400d6c:	4801      	ldr	r0, [pc, #4]	; (400d74 <PIOA_Handler+0xc>)
  400d6e:	4b02      	ldr	r3, [pc, #8]	; (400d78 <PIOA_Handler+0x10>)
  400d70:	4798      	blx	r3
  400d72:	bd08      	pop	{r3, pc}
  400d74:	400e0e00 	.word	0x400e0e00
  400d78:	00400ca9 	.word	0x00400ca9

00400d7c <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400d7c:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  400d7e:	210b      	movs	r1, #11
  400d80:	4801      	ldr	r0, [pc, #4]	; (400d88 <PIOB_Handler+0xc>)
  400d82:	4b02      	ldr	r3, [pc, #8]	; (400d8c <PIOB_Handler+0x10>)
  400d84:	4798      	blx	r3
  400d86:	bd08      	pop	{r3, pc}
  400d88:	400e1000 	.word	0x400e1000
  400d8c:	00400ca9 	.word	0x00400ca9

00400d90 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  400d90:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
  400d92:	210c      	movs	r1, #12
  400d94:	4801      	ldr	r0, [pc, #4]	; (400d9c <PIOC_Handler+0xc>)
  400d96:	4b02      	ldr	r3, [pc, #8]	; (400da0 <PIOC_Handler+0x10>)
  400d98:	4798      	blx	r3
  400d9a:	bd08      	pop	{r3, pc}
  400d9c:	400e1200 	.word	0x400e1200
  400da0:	00400ca9 	.word	0x00400ca9

00400da4 <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
  400da4:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
  400da6:	2110      	movs	r1, #16
  400da8:	4801      	ldr	r0, [pc, #4]	; (400db0 <PIOD_Handler+0xc>)
  400daa:	4b02      	ldr	r3, [pc, #8]	; (400db4 <PIOD_Handler+0x10>)
  400dac:	4798      	blx	r3
  400dae:	bd08      	pop	{r3, pc}
  400db0:	400e1400 	.word	0x400e1400
  400db4:	00400ca9 	.word	0x00400ca9

00400db8 <PIOE_Handler>:
/**
 * \brief Parallel IO Controller E interrupt handler.
 * Redefined PIOE interrupt handler for NVIC interrupt table.
 */
void PIOE_Handler(void)
{
  400db8:	b508      	push	{r3, lr}
	pio_handler_process(PIOE, ID_PIOE);
  400dba:	2111      	movs	r1, #17
  400dbc:	4801      	ldr	r0, [pc, #4]	; (400dc4 <PIOE_Handler+0xc>)
  400dbe:	4b02      	ldr	r3, [pc, #8]	; (400dc8 <PIOE_Handler+0x10>)
  400dc0:	4798      	blx	r3
  400dc2:	bd08      	pop	{r3, pc}
  400dc4:	400e1600 	.word	0x400e1600
  400dc8:	00400ca9 	.word	0x00400ca9

00400dcc <pmc_mck_set_division>:
 *
 * \param ul_div Division value.
 */
void pmc_mck_set_division(uint32_t ul_div)
{
	switch (ul_div) {
  400dcc:	2803      	cmp	r0, #3
  400dce:	d011      	beq.n	400df4 <pmc_mck_set_division+0x28>
  400dd0:	2804      	cmp	r0, #4
  400dd2:	d012      	beq.n	400dfa <pmc_mck_set_division+0x2e>
		case 1:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
  400dd4:	2802      	cmp	r0, #2
  400dd6:	bf0c      	ite	eq
  400dd8:	f44f 7180 	moveq.w	r1, #256	; 0x100
  400ddc:	2100      	movne	r1, #0
		default:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
			break;
	}
	PMC->PMC_MCKR =
			(PMC->PMC_MCKR & (~PMC_MCKR_MDIV_Msk)) | ul_div;
  400dde:	4a08      	ldr	r2, [pc, #32]	; (400e00 <pmc_mck_set_division+0x34>)
  400de0:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400de2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  400de6:	430b      	orrs	r3, r1
	PMC->PMC_MCKR =
  400de8:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  400dea:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400dec:	f013 0f08 	tst.w	r3, #8
  400df0:	d0fb      	beq.n	400dea <pmc_mck_set_division+0x1e>
}
  400df2:	4770      	bx	lr
			ul_div = PMC_MCKR_MDIV_PCK_DIV3;
  400df4:	f44f 7140 	mov.w	r1, #768	; 0x300
			break;
  400df8:	e7f1      	b.n	400dde <pmc_mck_set_division+0x12>
			ul_div = PMC_MCKR_MDIV_PCK_DIV4;
  400dfa:	f44f 7100 	mov.w	r1, #512	; 0x200
			break;
  400dfe:	e7ee      	b.n	400dde <pmc_mck_set_division+0x12>
  400e00:	400e0600 	.word	0x400e0600

00400e04 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  400e04:	4a17      	ldr	r2, [pc, #92]	; (400e64 <pmc_switch_mck_to_pllack+0x60>)
  400e06:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400e08:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  400e0c:	4318      	orrs	r0, r3
  400e0e:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400e10:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400e12:	f013 0f08 	tst.w	r3, #8
  400e16:	d10a      	bne.n	400e2e <pmc_switch_mck_to_pllack+0x2a>
  400e18:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  400e1c:	4911      	ldr	r1, [pc, #68]	; (400e64 <pmc_switch_mck_to_pllack+0x60>)
  400e1e:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400e20:	f012 0f08 	tst.w	r2, #8
  400e24:	d103      	bne.n	400e2e <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400e26:	3b01      	subs	r3, #1
  400e28:	d1f9      	bne.n	400e1e <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  400e2a:	2001      	movs	r0, #1
  400e2c:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  400e2e:	4a0d      	ldr	r2, [pc, #52]	; (400e64 <pmc_switch_mck_to_pllack+0x60>)
  400e30:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400e32:	f023 0303 	bic.w	r3, r3, #3
  400e36:	f043 0302 	orr.w	r3, r3, #2
  400e3a:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400e3c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400e3e:	f013 0f08 	tst.w	r3, #8
  400e42:	d10a      	bne.n	400e5a <pmc_switch_mck_to_pllack+0x56>
  400e44:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  400e48:	4906      	ldr	r1, [pc, #24]	; (400e64 <pmc_switch_mck_to_pllack+0x60>)
  400e4a:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400e4c:	f012 0f08 	tst.w	r2, #8
  400e50:	d105      	bne.n	400e5e <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400e52:	3b01      	subs	r3, #1
  400e54:	d1f9      	bne.n	400e4a <pmc_switch_mck_to_pllack+0x46>
			return 1;
  400e56:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  400e58:	4770      	bx	lr
	return 0;
  400e5a:	2000      	movs	r0, #0
  400e5c:	4770      	bx	lr
  400e5e:	2000      	movs	r0, #0
  400e60:	4770      	bx	lr
  400e62:	bf00      	nop
  400e64:	400e0600 	.word	0x400e0600

00400e68 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  400e68:	b9a0      	cbnz	r0, 400e94 <pmc_switch_mainck_to_xtal+0x2c>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400e6a:	480e      	ldr	r0, [pc, #56]	; (400ea4 <pmc_switch_mainck_to_xtal+0x3c>)
  400e6c:	6a03      	ldr	r3, [r0, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  400e6e:	0209      	lsls	r1, r1, #8
  400e70:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  400e72:	4a0d      	ldr	r2, [pc, #52]	; (400ea8 <pmc_switch_mainck_to_xtal+0x40>)
  400e74:	401a      	ands	r2, r3
  400e76:	4b0d      	ldr	r3, [pc, #52]	; (400eac <pmc_switch_mainck_to_xtal+0x44>)
  400e78:	4313      	orrs	r3, r2
  400e7a:	4319      	orrs	r1, r3
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400e7c:	6201      	str	r1, [r0, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  400e7e:	4602      	mov	r2, r0
  400e80:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400e82:	f013 0f01 	tst.w	r3, #1
  400e86:	d0fb      	beq.n	400e80 <pmc_switch_mainck_to_xtal+0x18>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  400e88:	4a06      	ldr	r2, [pc, #24]	; (400ea4 <pmc_switch_mainck_to_xtal+0x3c>)
  400e8a:	6a11      	ldr	r1, [r2, #32]
  400e8c:	4b08      	ldr	r3, [pc, #32]	; (400eb0 <pmc_switch_mainck_to_xtal+0x48>)
  400e8e:	430b      	orrs	r3, r1
  400e90:	6213      	str	r3, [r2, #32]
  400e92:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400e94:	4903      	ldr	r1, [pc, #12]	; (400ea4 <pmc_switch_mainck_to_xtal+0x3c>)
  400e96:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  400e98:	4a06      	ldr	r2, [pc, #24]	; (400eb4 <pmc_switch_mainck_to_xtal+0x4c>)
  400e9a:	401a      	ands	r2, r3
  400e9c:	4b06      	ldr	r3, [pc, #24]	; (400eb8 <pmc_switch_mainck_to_xtal+0x50>)
  400e9e:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400ea0:	620b      	str	r3, [r1, #32]
  400ea2:	4770      	bx	lr
  400ea4:	400e0600 	.word	0x400e0600
  400ea8:	ffc8fffc 	.word	0xffc8fffc
  400eac:	00370001 	.word	0x00370001
  400eb0:	01370000 	.word	0x01370000
  400eb4:	fec8fffc 	.word	0xfec8fffc
  400eb8:	01370002 	.word	0x01370002

00400ebc <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  400ebc:	4b02      	ldr	r3, [pc, #8]	; (400ec8 <pmc_osc_is_ready_mainck+0xc>)
  400ebe:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400ec0:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  400ec4:	4770      	bx	lr
  400ec6:	bf00      	nop
  400ec8:	400e0600 	.word	0x400e0600

00400ecc <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  400ecc:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  400ed0:	4b01      	ldr	r3, [pc, #4]	; (400ed8 <pmc_disable_pllack+0xc>)
  400ed2:	629a      	str	r2, [r3, #40]	; 0x28
  400ed4:	4770      	bx	lr
  400ed6:	bf00      	nop
  400ed8:	400e0600 	.word	0x400e0600

00400edc <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  400edc:	4b02      	ldr	r3, [pc, #8]	; (400ee8 <pmc_is_locked_pllack+0xc>)
  400ede:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400ee0:	f000 0002 	and.w	r0, r0, #2
  400ee4:	4770      	bx	lr
  400ee6:	bf00      	nop
  400ee8:	400e0600 	.word	0x400e0600

00400eec <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  400eec:	283f      	cmp	r0, #63	; 0x3f
  400eee:	d81e      	bhi.n	400f2e <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
  400ef0:	281f      	cmp	r0, #31
  400ef2:	d80c      	bhi.n	400f0e <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  400ef4:	4b11      	ldr	r3, [pc, #68]	; (400f3c <pmc_enable_periph_clk+0x50>)
  400ef6:	699a      	ldr	r2, [r3, #24]
  400ef8:	2301      	movs	r3, #1
  400efa:	4083      	lsls	r3, r0
  400efc:	4393      	bics	r3, r2
  400efe:	d018      	beq.n	400f32 <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
  400f00:	2301      	movs	r3, #1
  400f02:	fa03 f000 	lsl.w	r0, r3, r0
  400f06:	4b0d      	ldr	r3, [pc, #52]	; (400f3c <pmc_enable_periph_clk+0x50>)
  400f08:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  400f0a:	2000      	movs	r0, #0
  400f0c:	4770      	bx	lr
		ul_id -= 32;
  400f0e:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  400f10:	4b0a      	ldr	r3, [pc, #40]	; (400f3c <pmc_enable_periph_clk+0x50>)
  400f12:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  400f16:	2301      	movs	r3, #1
  400f18:	4083      	lsls	r3, r0
  400f1a:	4393      	bics	r3, r2
  400f1c:	d00b      	beq.n	400f36 <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
  400f1e:	2301      	movs	r3, #1
  400f20:	fa03 f000 	lsl.w	r0, r3, r0
  400f24:	4b05      	ldr	r3, [pc, #20]	; (400f3c <pmc_enable_periph_clk+0x50>)
  400f26:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
  400f2a:	2000      	movs	r0, #0
  400f2c:	4770      	bx	lr
		return 1;
  400f2e:	2001      	movs	r0, #1
  400f30:	4770      	bx	lr
	return 0;
  400f32:	2000      	movs	r0, #0
  400f34:	4770      	bx	lr
  400f36:	2000      	movs	r0, #0
}
  400f38:	4770      	bx	lr
  400f3a:	bf00      	nop
  400f3c:	400e0600 	.word	0x400e0600

00400f40 <pmc_set_flash_in_wait_mode>:
 *
 * \param ul_flash_state PMC_WAIT_MODE_FLASH_STANDBY flash in standby mode,
 * PMC_WAIT_MODE_FLASH_DEEP_POWERDOWN flash in deep power down mode.
 */
void pmc_set_flash_in_wait_mode(uint32_t ul_flash_state)
{
  400f40:	4770      	bx	lr
	...

00400f44 <pmc_enable_waitmode>:
void pmc_enable_waitmode(void)
{
	uint32_t i;

	/* Flash in wait mode */
	i = PMC->PMC_FSMR;
  400f44:	4a10      	ldr	r2, [pc, #64]	; (400f88 <pmc_enable_waitmode+0x44>)
  400f46:	6f13      	ldr	r3, [r2, #112]	; 0x70
	i &= ~PMC_FSMR_FLPM_Msk;
  400f48:	f423 03c0 	bic.w	r3, r3, #6291456	; 0x600000
#if !(SAMV71 || SAMV70 || SAME70 || SAMS70)
	i |= ul_flash_in_wait_mode;
#else
	i |= PMC_WAIT_MODE_FLASH_IDLE;
  400f4c:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
#endif
	PMC->PMC_FSMR = i;
  400f50:	6713      	str	r3, [r2, #112]	; 0x70

	/* Set the WAITMODE bit = 1 */
	PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_WAITMODE;
  400f52:	6a11      	ldr	r1, [r2, #32]
  400f54:	4b0d      	ldr	r3, [pc, #52]	; (400f8c <pmc_enable_waitmode+0x48>)
  400f56:	430b      	orrs	r3, r1
  400f58:	6213      	str	r3, [r2, #32]

	/* Waiting for Master Clock Ready MCKRDY = 1 */
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  400f5a:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400f5c:	f013 0f08 	tst.w	r3, #8
  400f60:	d0fb      	beq.n	400f5a <pmc_enable_waitmode+0x16>
  400f62:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
  __ASM volatile ("nop");
  400f66:	bf00      	nop

	/* Waiting for MOSCRCEN bit cleared is strongly recommended
	 * to ensure that the core will not execute undesired instructions
	 */
	for (i = 0; i < 500; i++) {
  400f68:	3b01      	subs	r3, #1
  400f6a:	d1fc      	bne.n	400f66 <pmc_enable_waitmode+0x22>
		__NOP();
	}
	while (!(PMC->CKGR_MOR & CKGR_MOR_MOSCRCEN));
  400f6c:	4a06      	ldr	r2, [pc, #24]	; (400f88 <pmc_enable_waitmode+0x44>)
  400f6e:	6a13      	ldr	r3, [r2, #32]
  400f70:	f013 0f08 	tst.w	r3, #8
  400f74:	d0fb      	beq.n	400f6e <pmc_enable_waitmode+0x2a>

#if (!SAMG)
	/* Restore Flash in idle mode */
	i = PMC->PMC_FSMR;
  400f76:	4a04      	ldr	r2, [pc, #16]	; (400f88 <pmc_enable_waitmode+0x44>)
  400f78:	6f13      	ldr	r3, [r2, #112]	; 0x70
	i &= ~PMC_FSMR_FLPM_Msk;
  400f7a:	f423 03c0 	bic.w	r3, r3, #6291456	; 0x600000
	i |= PMC_WAIT_MODE_FLASH_IDLE;
  400f7e:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
	PMC->PMC_FSMR = i;
  400f82:	6713      	str	r3, [r2, #112]	; 0x70
  400f84:	4770      	bx	lr
  400f86:	bf00      	nop
  400f88:	400e0600 	.word	0x400e0600
  400f8c:	00370004 	.word	0x00370004

00400f90 <pmc_sleep>:
static volatile bool b_is_sleep_clock_used = false;
/** Callback invoked once when clocks are restored */
static pmc_callback_wakeup_clocks_restored_t callback_clocks_restored = NULL;

void pmc_sleep(int sleep_mode)
{
  400f90:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	switch (sleep_mode) {
  400f94:	1e43      	subs	r3, r0, #1
  400f96:	2b04      	cmp	r3, #4
  400f98:	f200 8107 	bhi.w	4011aa <pmc_sleep+0x21a>
  400f9c:	e8df f013 	tbh	[pc, r3, lsl #1]
  400fa0:	00050005 	.word	0x00050005
  400fa4:	00150015 	.word	0x00150015
  400fa8:	00f6      	.short	0x00f6
	case SAM_PM_SMODE_SLEEP_WFI:
	case SAM_PM_SMODE_SLEEP_WFE:
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG || SAMV71 || SAMV70 || SAMS70 || SAME70)
		SCB->SCR &= (uint32_t)~SCR_SLEEPDEEP;
  400faa:	4a81      	ldr	r2, [pc, #516]	; (4011b0 <pmc_sleep+0x220>)
  400fac:	6913      	ldr	r3, [r2, #16]
  400fae:	f023 0304 	bic.w	r3, r3, #4
  400fb2:	6113      	str	r3, [r2, #16]
		cpu_irq_enable();
  400fb4:	2201      	movs	r2, #1
  400fb6:	4b7f      	ldr	r3, [pc, #508]	; (4011b4 <pmc_sleep+0x224>)
  400fb8:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb");
  400fba:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
  400fbe:	b662      	cpsie	i
  __ASM volatile ("dsb");
  400fc0:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("wfi");
  400fc4:	bf30      	wfi
  400fc6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400fca:	4604      	mov	r4, r0
#if defined(EFC1)
		uint32_t fmr1;
#endif
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG || SAMV71 || SAMV70 || SAMS70 || SAME70)
		(sleep_mode == SAM_PM_SMODE_WAIT_FAST) ?
				pmc_set_flash_in_wait_mode(PMC_FSMR_FLPM_FLASH_STANDBY) :
  400fcc:	2803      	cmp	r0, #3
  400fce:	bf0c      	ite	eq
  400fd0:	2000      	moveq	r0, #0
				pmc_set_flash_in_wait_mode(PMC_FSMR_FLPM_FLASH_DEEP_POWERDOWN);
  400fd2:	f44f 1000 	movne.w	r0, #2097152	; 0x200000
  400fd6:	4b78      	ldr	r3, [pc, #480]	; (4011b8 <pmc_sleep+0x228>)
  400fd8:	4798      	blx	r3
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
  400fda:	b672      	cpsid	i
  __ASM volatile ("dmb");
  400fdc:	f3bf 8f5f 	dmb	sy
#endif
		cpu_irq_disable();
  400fe0:	2200      	movs	r2, #0
  400fe2:	4b74      	ldr	r3, [pc, #464]	; (4011b4 <pmc_sleep+0x224>)
  400fe4:	701a      	strb	r2, [r3, #0]
		b_is_sleep_clock_used = true;
  400fe6:	2201      	movs	r2, #1
  400fe8:	4b74      	ldr	r3, [pc, #464]	; (4011bc <pmc_sleep+0x22c>)
  400fea:	701a      	strb	r2, [r3, #0]
	uint32_t mor  = PMC->CKGR_MOR;
  400fec:	4b74      	ldr	r3, [pc, #464]	; (4011c0 <pmc_sleep+0x230>)
  400fee:	6a1f      	ldr	r7, [r3, #32]
	uint32_t mckr = PMC->PMC_MCKR;
  400ff0:	6b1d      	ldr	r5, [r3, #48]	; 0x30
	uint32_t fmr  = EFC0->EEFC_FMR;
  400ff2:	4a74      	ldr	r2, [pc, #464]	; (4011c4 <pmc_sleep+0x234>)
  400ff4:	f8d2 8000 	ldr.w	r8, [r2]
		*p_pll0_setting = PMC->CKGR_PLLAR;
  400ff8:	6a9e      	ldr	r6, [r3, #40]	; 0x28
	PMC->CKGR_MOR = CKGR_MOR_KEY_PASSWD | mor | CKGR_MOR_MOSCRCEN;
  400ffa:	4a73      	ldr	r2, [pc, #460]	; (4011c8 <pmc_sleep+0x238>)
  400ffc:	433a      	orrs	r2, r7
  400ffe:	621a      	str	r2, [r3, #32]
	if ((mckr & PMC_MCKR_CSS_Msk) > PMC_MCKR_CSS_MAIN_CLK) {
  401000:	f005 0903 	and.w	r9, r5, #3
  401004:	f1b9 0f01 	cmp.w	r9, #1
  401008:	f240 8089 	bls.w	40111e <pmc_sleep+0x18e>
		mckr = (mckr & (~PMC_MCKR_CSS_Msk)) | PMC_MCKR_CSS_MAIN_CLK;
  40100c:	f025 0103 	bic.w	r1, r5, #3
  401010:	f041 0101 	orr.w	r1, r1, #1
		PMC->PMC_MCKR = mckr;
  401014:	6319      	str	r1, [r3, #48]	; 0x30
		while(!(PMC->PMC_SR & PMC_SR_MCKRDY));
  401016:	461a      	mov	r2, r3
  401018:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40101a:	f013 0f08 	tst.w	r3, #8
  40101e:	d0fb      	beq.n	401018 <pmc_sleep+0x88>
	if (mckr & PMC_MCKR_PRES_Msk) {
  401020:	f011 0f70 	tst.w	r1, #112	; 0x70
  401024:	d008      	beq.n	401038 <pmc_sleep+0xa8>
		mckr = (mckr & (~PMC_MCKR_PRES_Msk));
  401026:	f021 0170 	bic.w	r1, r1, #112	; 0x70
		PMC->PMC_MCKR = mckr;
  40102a:	4b65      	ldr	r3, [pc, #404]	; (4011c0 <pmc_sleep+0x230>)
  40102c:	6319      	str	r1, [r3, #48]	; 0x30
		while(!(PMC->PMC_SR & PMC_SR_MCKRDY));
  40102e:	461a      	mov	r2, r3
  401030:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401032:	f013 0f08 	tst.w	r3, #8
  401036:	d0fb      	beq.n	401030 <pmc_sleep+0xa0>
	pmc_disable_pllack();
  401038:	4b64      	ldr	r3, [pc, #400]	; (4011cc <pmc_sleep+0x23c>)
  40103a:	4798      	blx	r3
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));
  40103c:	4a60      	ldr	r2, [pc, #384]	; (4011c0 <pmc_sleep+0x230>)
  40103e:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401040:	f413 3f00 	tst.w	r3, #131072	; 0x20000
  401044:	d0fb      	beq.n	40103e <pmc_sleep+0xae>
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCSEL) |
  401046:	4a5e      	ldr	r2, [pc, #376]	; (4011c0 <pmc_sleep+0x230>)
  401048:	6a11      	ldr	r1, [r2, #32]
  40104a:	4b61      	ldr	r3, [pc, #388]	; (4011d0 <pmc_sleep+0x240>)
  40104c:	400b      	ands	r3, r1
  40104e:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  401052:	6213      	str	r3, [r2, #32]
	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS));
  401054:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401056:	f413 3f80 	tst.w	r3, #65536	; 0x10000
  40105a:	d0fb      	beq.n	401054 <pmc_sleep+0xc4>
	EFC0->EEFC_FMR = fmr & (~EEFC_FMR_FWS_Msk);
  40105c:	f428 6370 	bic.w	r3, r8, #3840	; 0xf00
  401060:	4a58      	ldr	r2, [pc, #352]	; (4011c4 <pmc_sleep+0x234>)
  401062:	6013      	str	r3, [r2, #0]
	if (disable_xtal) {
  401064:	2c04      	cmp	r4, #4
  401066:	d05c      	beq.n	401122 <pmc_sleep+0x192>
				&fmr1,
#endif
				(sleep_mode == SAM_PM_SMODE_WAIT));

		/* Enter wait mode */
		cpu_irq_enable();
  401068:	4c52      	ldr	r4, [pc, #328]	; (4011b4 <pmc_sleep+0x224>)
  40106a:	2301      	movs	r3, #1
  40106c:	7023      	strb	r3, [r4, #0]
  40106e:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  401072:	b662      	cpsie	i

		pmc_enable_waitmode();
  401074:	4b57      	ldr	r3, [pc, #348]	; (4011d4 <pmc_sleep+0x244>)
  401076:	4798      	blx	r3
  __ASM volatile ("cpsid i" : : : "memory");
  401078:	b672      	cpsid	i
  40107a:	f3bf 8f5f 	dmb	sy

		cpu_irq_disable();
  40107e:	2300      	movs	r3, #0
  401080:	7023      	strb	r3, [r4, #0]
	if (CKGR_MOR_MOSCXTBY == (osc_setting & CKGR_MOR_MOSCXTBY)) {
  401082:	f017 0f02 	tst.w	r7, #2
  401086:	d055      	beq.n	401134 <pmc_sleep+0x1a4>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  401088:	4a4d      	ldr	r2, [pc, #308]	; (4011c0 <pmc_sleep+0x230>)
  40108a:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  40108c:	4952      	ldr	r1, [pc, #328]	; (4011d8 <pmc_sleep+0x248>)
  40108e:	4019      	ands	r1, r3
  401090:	4b52      	ldr	r3, [pc, #328]	; (4011dc <pmc_sleep+0x24c>)
  401092:	430b      	orrs	r3, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  401094:	6213      	str	r3, [r2, #32]
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  401096:	6a11      	ldr	r1, [r2, #32]
				| CKGR_MOR_KEY_PASSWD;
  401098:	4b51      	ldr	r3, [pc, #324]	; (4011e0 <pmc_sleep+0x250>)
  40109a:	400b      	ands	r3, r1
  40109c:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  4010a0:	6213      	str	r3, [r2, #32]
	if (pll0_setting & CKGR_PLLAR_MULA_Msk) {
  4010a2:	4b50      	ldr	r3, [pc, #320]	; (4011e4 <pmc_sleep+0x254>)
  4010a4:	4033      	ands	r3, r6
  4010a6:	2b00      	cmp	r3, #0
  4010a8:	d06e      	beq.n	401188 <pmc_sleep+0x1f8>
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | pll0_setting;
  4010aa:	f046 5600 	orr.w	r6, r6, #536870912	; 0x20000000
  4010ae:	4b44      	ldr	r3, [pc, #272]	; (4011c0 <pmc_sleep+0x230>)
  4010b0:	629e      	str	r6, [r3, #40]	; 0x28
		pll_sr |= PMC_SR_LOCKA;
  4010b2:	2102      	movs	r1, #2
	switch(mck_setting & PMC_MCKR_CSS_Msk) {
  4010b4:	f1b9 0f02 	cmp.w	r9, #2
  4010b8:	d104      	bne.n	4010c4 <pmc_sleep+0x134>
		while (!(PMC->PMC_SR & PMC_SR_LOCKA));
  4010ba:	4a41      	ldr	r2, [pc, #260]	; (4011c0 <pmc_sleep+0x230>)
  4010bc:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4010be:	f013 0f02 	tst.w	r3, #2
  4010c2:	d0fb      	beq.n	4010bc <pmc_sleep+0x12c>
	mckr = PMC->PMC_MCKR;
  4010c4:	4a3e      	ldr	r2, [pc, #248]	; (4011c0 <pmc_sleep+0x230>)
  4010c6:	6b13      	ldr	r3, [r2, #48]	; 0x30
	PMC->PMC_MCKR = (mckr & ~PMC_MCKR_PRES_Msk)
  4010c8:	f023 0370 	bic.w	r3, r3, #112	; 0x70
		| (mck_setting & PMC_MCKR_PRES_Msk);
  4010cc:	f005 0070 	and.w	r0, r5, #112	; 0x70
  4010d0:	4303      	orrs	r3, r0
	PMC->PMC_MCKR = (mckr & ~PMC_MCKR_PRES_Msk)
  4010d2:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  4010d4:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4010d6:	f013 0f08 	tst.w	r3, #8
  4010da:	d0fb      	beq.n	4010d4 <pmc_sleep+0x144>
	EFC0->EEFC_FMR = fmr_setting;
  4010dc:	4b39      	ldr	r3, [pc, #228]	; (4011c4 <pmc_sleep+0x234>)
  4010de:	f8c3 8000 	str.w	r8, [r3]
	PMC->PMC_MCKR = mck_setting;
  4010e2:	f5a3 63c0 	sub.w	r3, r3, #1536	; 0x600
  4010e6:	631d      	str	r5, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  4010e8:	461a      	mov	r2, r3
  4010ea:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4010ec:	f013 0f08 	tst.w	r3, #8
  4010f0:	d0fb      	beq.n	4010ea <pmc_sleep+0x15a>
	while (!(PMC->PMC_SR & pll_sr));
  4010f2:	4a33      	ldr	r2, [pc, #204]	; (4011c0 <pmc_sleep+0x230>)
  4010f4:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4010f6:	420b      	tst	r3, r1
  4010f8:	d0fc      	beq.n	4010f4 <pmc_sleep+0x164>

#if (SAM4C || SAM4CM || SAM4CP)
		/* Restore the sub-system 1 */
		PMC->PMC_SCER = cpclk_backup | PMC_SCER_CPKEY_PASSWD;
#endif
		b_is_sleep_clock_used = false;
  4010fa:	2200      	movs	r2, #0
  4010fc:	4b2f      	ldr	r3, [pc, #188]	; (4011bc <pmc_sleep+0x22c>)
  4010fe:	701a      	strb	r2, [r3, #0]
		if (callback_clocks_restored) {
  401100:	4b39      	ldr	r3, [pc, #228]	; (4011e8 <pmc_sleep+0x258>)
  401102:	681b      	ldr	r3, [r3, #0]
  401104:	b11b      	cbz	r3, 40110e <pmc_sleep+0x17e>
			callback_clocks_restored();
  401106:	4798      	blx	r3
			callback_clocks_restored = NULL;
  401108:	2200      	movs	r2, #0
  40110a:	4b37      	ldr	r3, [pc, #220]	; (4011e8 <pmc_sleep+0x258>)
  40110c:	601a      	str	r2, [r3, #0]
		}
		cpu_irq_enable();
  40110e:	2201      	movs	r2, #1
  401110:	4b28      	ldr	r3, [pc, #160]	; (4011b4 <pmc_sleep+0x224>)
  401112:	701a      	strb	r2, [r3, #0]
  401114:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  401118:	b662      	cpsie	i
  40111a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	uint32_t mckr = PMC->PMC_MCKR;
  40111e:	4629      	mov	r1, r5
  401120:	e77e      	b.n	401020 <pmc_sleep+0x90>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  401122:	f5a2 62c0 	sub.w	r2, r2, #1536	; 0x600
  401126:	6a11      	ldr	r1, [r2, #32]
  401128:	4b30      	ldr	r3, [pc, #192]	; (4011ec <pmc_sleep+0x25c>)
  40112a:	400b      	ands	r3, r1
  40112c:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  401130:	6213      	str	r3, [r2, #32]
  401132:	e799      	b.n	401068 <pmc_sleep+0xd8>
	} else if (CKGR_MOR_MOSCXTEN == (osc_setting & CKGR_MOR_MOSCXTEN)) {
  401134:	f017 0f01 	tst.w	r7, #1
  401138:	d0b3      	beq.n	4010a2 <pmc_sleep+0x112>
		if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCXTEN)) {
  40113a:	4b21      	ldr	r3, [pc, #132]	; (4011c0 <pmc_sleep+0x230>)
  40113c:	6a1b      	ldr	r3, [r3, #32]
  40113e:	f013 0f01 	tst.w	r3, #1
  401142:	d10b      	bne.n	40115c <pmc_sleep+0x1cc>
			PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  401144:	491e      	ldr	r1, [pc, #120]	; (4011c0 <pmc_sleep+0x230>)
  401146:	6a0b      	ldr	r3, [r1, #32]
					CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN;
  401148:	4a29      	ldr	r2, [pc, #164]	; (4011f0 <pmc_sleep+0x260>)
  40114a:	401a      	ands	r2, r3
  40114c:	4b29      	ldr	r3, [pc, #164]	; (4011f4 <pmc_sleep+0x264>)
  40114e:	4313      	orrs	r3, r2
			PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  401150:	620b      	str	r3, [r1, #32]
			while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  401152:	460a      	mov	r2, r1
  401154:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401156:	f013 0f01 	tst.w	r3, #1
  40115a:	d0fb      	beq.n	401154 <pmc_sleep+0x1c4>
		if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
  40115c:	4b18      	ldr	r3, [pc, #96]	; (4011c0 <pmc_sleep+0x230>)
  40115e:	6a1b      	ldr	r3, [r3, #32]
  401160:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  401164:	d108      	bne.n	401178 <pmc_sleep+0x1e8>
			PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  401166:	4a16      	ldr	r2, [pc, #88]	; (4011c0 <pmc_sleep+0x230>)
  401168:	6a11      	ldr	r1, [r2, #32]
  40116a:	4b23      	ldr	r3, [pc, #140]	; (4011f8 <pmc_sleep+0x268>)
  40116c:	430b      	orrs	r3, r1
  40116e:	6213      	str	r3, [r2, #32]
			while (!(PMC->PMC_SR & PMC_SR_MOSCSELS));
  401170:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401172:	f413 3f80 	tst.w	r3, #65536	; 0x10000
  401176:	d0fb      	beq.n	401170 <pmc_sleep+0x1e0>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  401178:	4a11      	ldr	r2, [pc, #68]	; (4011c0 <pmc_sleep+0x230>)
  40117a:	6a11      	ldr	r1, [r2, #32]
					| CKGR_MOR_KEY_PASSWD;
  40117c:	4b18      	ldr	r3, [pc, #96]	; (4011e0 <pmc_sleep+0x250>)
  40117e:	400b      	ands	r3, r1
  401180:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  401184:	6213      	str	r3, [r2, #32]
  401186:	e78c      	b.n	4010a2 <pmc_sleep+0x112>
	uint32_t pll_sr = 0;
  401188:	2100      	movs	r1, #0
  40118a:	e793      	b.n	4010b4 <pmc_sleep+0x124>

		break;
	}
#if (!(SAMG51 || SAMG53 || SAMG54))
	case SAM_PM_SMODE_BACKUP:
		SCB->SCR |= SCR_SLEEPDEEP;
  40118c:	4a08      	ldr	r2, [pc, #32]	; (4011b0 <pmc_sleep+0x220>)
  40118e:	6913      	ldr	r3, [r2, #16]
  401190:	f043 0304 	orr.w	r3, r3, #4
  401194:	6113      	str	r3, [r2, #16]
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG55 || SAMV71 || SAMV70 || SAMS70 || SAME70)
		SUPC->SUPC_CR = SUPC_CR_KEY_PASSWD | SUPC_CR_VROFF_STOP_VREG;
  401196:	4a19      	ldr	r2, [pc, #100]	; (4011fc <pmc_sleep+0x26c>)
  401198:	4b19      	ldr	r3, [pc, #100]	; (401200 <pmc_sleep+0x270>)
  40119a:	601a      	str	r2, [r3, #0]
		cpu_irq_enable();
  40119c:	2201      	movs	r2, #1
  40119e:	4b05      	ldr	r3, [pc, #20]	; (4011b4 <pmc_sleep+0x224>)
  4011a0:	701a      	strb	r2, [r3, #0]
  4011a2:	f3bf 8f5f 	dmb	sy
  4011a6:	b662      	cpsie	i
  __ASM volatile ("wfi");
  4011a8:	bf30      	wfi
  4011aa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4011ae:	bf00      	nop
  4011b0:	e000ed00 	.word	0xe000ed00
  4011b4:	20400018 	.word	0x20400018
  4011b8:	00400f41 	.word	0x00400f41
  4011bc:	20400c68 	.word	0x20400c68
  4011c0:	400e0600 	.word	0x400e0600
  4011c4:	400e0c00 	.word	0x400e0c00
  4011c8:	00370008 	.word	0x00370008
  4011cc:	00400ecd 	.word	0x00400ecd
  4011d0:	fec8ffff 	.word	0xfec8ffff
  4011d4:	00400f45 	.word	0x00400f45
  4011d8:	fec8fffc 	.word	0xfec8fffc
  4011dc:	01370002 	.word	0x01370002
  4011e0:	ffc8ff87 	.word	0xffc8ff87
  4011e4:	07ff0000 	.word	0x07ff0000
  4011e8:	20400c6c 	.word	0x20400c6c
  4011ec:	ffc8fffe 	.word	0xffc8fffe
  4011f0:	ffc8fffc 	.word	0xffc8fffc
  4011f4:	00370001 	.word	0x00370001
  4011f8:	01370000 	.word	0x01370000
  4011fc:	a5000004 	.word	0xa5000004
  401200:	400e1810 	.word	0x400e1810

00401204 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  401204:	e7fe      	b.n	401204 <Dummy_Handler>
	...

00401208 <Reset_Handler>:
{
  401208:	b500      	push	{lr}
  40120a:	b083      	sub	sp, #12
        if (pSrc != pDest) {
  40120c:	4b25      	ldr	r3, [pc, #148]	; (4012a4 <Reset_Handler+0x9c>)
  40120e:	4a26      	ldr	r2, [pc, #152]	; (4012a8 <Reset_Handler+0xa0>)
  401210:	429a      	cmp	r2, r3
  401212:	d010      	beq.n	401236 <Reset_Handler+0x2e>
                for (; pDest < &_erelocate;) {
  401214:	4b25      	ldr	r3, [pc, #148]	; (4012ac <Reset_Handler+0xa4>)
  401216:	4a23      	ldr	r2, [pc, #140]	; (4012a4 <Reset_Handler+0x9c>)
  401218:	429a      	cmp	r2, r3
  40121a:	d20c      	bcs.n	401236 <Reset_Handler+0x2e>
  40121c:	3b01      	subs	r3, #1
  40121e:	1a9b      	subs	r3, r3, r2
  401220:	f023 0303 	bic.w	r3, r3, #3
  401224:	3304      	adds	r3, #4
  401226:	4413      	add	r3, r2
  401228:	491f      	ldr	r1, [pc, #124]	; (4012a8 <Reset_Handler+0xa0>)
                        *pDest++ = *pSrc++;
  40122a:	f851 0b04 	ldr.w	r0, [r1], #4
  40122e:	f842 0b04 	str.w	r0, [r2], #4
                for (; pDest < &_erelocate;) {
  401232:	429a      	cmp	r2, r3
  401234:	d1f9      	bne.n	40122a <Reset_Handler+0x22>
        for (pDest = &_szero; pDest < &_ezero;) {
  401236:	4b1e      	ldr	r3, [pc, #120]	; (4012b0 <Reset_Handler+0xa8>)
  401238:	4a1e      	ldr	r2, [pc, #120]	; (4012b4 <Reset_Handler+0xac>)
  40123a:	429a      	cmp	r2, r3
  40123c:	d20a      	bcs.n	401254 <Reset_Handler+0x4c>
  40123e:	3b01      	subs	r3, #1
  401240:	1a9b      	subs	r3, r3, r2
  401242:	f023 0303 	bic.w	r3, r3, #3
  401246:	3304      	adds	r3, #4
  401248:	4413      	add	r3, r2
                *pDest++ = 0;
  40124a:	2100      	movs	r1, #0
  40124c:	f842 1b04 	str.w	r1, [r2], #4
        for (pDest = &_szero; pDest < &_ezero;) {
  401250:	4293      	cmp	r3, r2
  401252:	d1fb      	bne.n	40124c <Reset_Handler+0x44>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  401254:	4a18      	ldr	r2, [pc, #96]	; (4012b8 <Reset_Handler+0xb0>)
  401256:	4b19      	ldr	r3, [pc, #100]	; (4012bc <Reset_Handler+0xb4>)
  401258:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  40125c:	6093      	str	r3, [r2, #8]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  40125e:	f3ef 8310 	mrs	r3, PRIMASK
static volatile uint32_t cpu_irq_critical_section_counter;
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = cpu_irq_is_enabled();
  401262:	fab3 f383 	clz	r3, r3
  401266:	095b      	lsrs	r3, r3, #5
  401268:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  40126a:	b672      	cpsid	i
  __ASM volatile ("dmb");
  40126c:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  401270:	2200      	movs	r2, #0
  401272:	4b13      	ldr	r3, [pc, #76]	; (4012c0 <Reset_Handler+0xb8>)
  401274:	701a      	strb	r2, [r3, #0]
	return flags;
  401276:	9901      	ldr	r1, [sp, #4]
 */
__always_inline static void fpu_enable(void)
{
	irqflags_t flags;
	flags = cpu_irq_save();
	REG_CPACR |=  (0xFu << 20);
  401278:	4a12      	ldr	r2, [pc, #72]	; (4012c4 <Reset_Handler+0xbc>)
  40127a:	6813      	ldr	r3, [r2, #0]
  40127c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
  401280:	6013      	str	r3, [r2, #0]
  __ASM volatile ("dsb");
  401282:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  401286:	f3bf 8f6f 	isb	sy
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
  40128a:	b129      	cbz	r1, 401298 <Reset_Handler+0x90>
		cpu_irq_enable();
  40128c:	2201      	movs	r2, #1
  40128e:	4b0c      	ldr	r3, [pc, #48]	; (4012c0 <Reset_Handler+0xb8>)
  401290:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb");
  401292:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  401296:	b662      	cpsie	i
        __libc_init_array();
  401298:	4b0b      	ldr	r3, [pc, #44]	; (4012c8 <Reset_Handler+0xc0>)
  40129a:	4798      	blx	r3
        main();
  40129c:	4b0b      	ldr	r3, [pc, #44]	; (4012cc <Reset_Handler+0xc4>)
  40129e:	4798      	blx	r3
  4012a0:	e7fe      	b.n	4012a0 <Reset_Handler+0x98>
  4012a2:	bf00      	nop
  4012a4:	20400000 	.word	0x20400000
  4012a8:	00406ed4 	.word	0x00406ed4
  4012ac:	204009d0 	.word	0x204009d0
  4012b0:	20400cd8 	.word	0x20400cd8
  4012b4:	204009d0 	.word	0x204009d0
  4012b8:	e000ed00 	.word	0xe000ed00
  4012bc:	00400000 	.word	0x00400000
  4012c0:	20400018 	.word	0x20400018
  4012c4:	e000ed88 	.word	0xe000ed88
  4012c8:	00402011 	.word	0x00402011
  4012cc:	004016d9 	.word	0x004016d9

004012d0 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate( void )
{
  /* Determine clock frequency according to clock register values */
  switch (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk)
  4012d0:	4b3b      	ldr	r3, [pc, #236]	; (4013c0 <SystemCoreClockUpdate+0xf0>)
  4012d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4012d4:	f003 0303 	and.w	r3, r3, #3
  4012d8:	2b01      	cmp	r3, #1
  4012da:	d01d      	beq.n	401318 <SystemCoreClockUpdate+0x48>
  4012dc:	b183      	cbz	r3, 401300 <SystemCoreClockUpdate+0x30>
  4012de:	2b02      	cmp	r3, #2
  4012e0:	d036      	beq.n	401350 <SystemCoreClockUpdate+0x80>

    default:
    break;
  }

  if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 )
  4012e2:	4b37      	ldr	r3, [pc, #220]	; (4013c0 <SystemCoreClockUpdate+0xf0>)
  4012e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4012e6:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4012ea:	2b70      	cmp	r3, #112	; 0x70
  4012ec:	d05f      	beq.n	4013ae <SystemCoreClockUpdate+0xde>
  {
    SystemCoreClock /= 3U;
  }
  else
  {
    SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  4012ee:	4b34      	ldr	r3, [pc, #208]	; (4013c0 <SystemCoreClockUpdate+0xf0>)
  4012f0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4012f2:	4934      	ldr	r1, [pc, #208]	; (4013c4 <SystemCoreClockUpdate+0xf4>)
  4012f4:	f3c2 1202 	ubfx	r2, r2, #4, #3
  4012f8:	680b      	ldr	r3, [r1, #0]
  4012fa:	40d3      	lsrs	r3, r2
  4012fc:	600b      	str	r3, [r1, #0]
  4012fe:	4770      	bx	lr
      if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL )
  401300:	4b31      	ldr	r3, [pc, #196]	; (4013c8 <SystemCoreClockUpdate+0xf8>)
  401302:	695b      	ldr	r3, [r3, #20]
  401304:	f013 0f80 	tst.w	r3, #128	; 0x80
        SystemCoreClock = CHIP_FREQ_XTAL_32K;
  401308:	bf14      	ite	ne
  40130a:	f44f 4200 	movne.w	r2, #32768	; 0x8000
        SystemCoreClock = CHIP_FREQ_SLCK_RC;
  40130e:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  401312:	4b2c      	ldr	r3, [pc, #176]	; (4013c4 <SystemCoreClockUpdate+0xf4>)
  401314:	601a      	str	r2, [r3, #0]
  401316:	e7e4      	b.n	4012e2 <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  401318:	4b29      	ldr	r3, [pc, #164]	; (4013c0 <SystemCoreClockUpdate+0xf0>)
  40131a:	6a1b      	ldr	r3, [r3, #32]
  40131c:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  401320:	d003      	beq.n	40132a <SystemCoreClockUpdate+0x5a>
        SystemCoreClock = CHIP_FREQ_XTAL_12M;
  401322:	4a2a      	ldr	r2, [pc, #168]	; (4013cc <SystemCoreClockUpdate+0xfc>)
  401324:	4b27      	ldr	r3, [pc, #156]	; (4013c4 <SystemCoreClockUpdate+0xf4>)
  401326:	601a      	str	r2, [r3, #0]
  401328:	e7db      	b.n	4012e2 <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  40132a:	4a29      	ldr	r2, [pc, #164]	; (4013d0 <SystemCoreClockUpdate+0x100>)
  40132c:	4b25      	ldr	r3, [pc, #148]	; (4013c4 <SystemCoreClockUpdate+0xf4>)
  40132e:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  401330:	4b23      	ldr	r3, [pc, #140]	; (4013c0 <SystemCoreClockUpdate+0xf0>)
  401332:	6a1b      	ldr	r3, [r3, #32]
  401334:	f003 0370 	and.w	r3, r3, #112	; 0x70
  401338:	2b10      	cmp	r3, #16
  40133a:	d005      	beq.n	401348 <SystemCoreClockUpdate+0x78>
  40133c:	2b20      	cmp	r3, #32
  40133e:	d1d0      	bne.n	4012e2 <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 3U;
  401340:	4a22      	ldr	r2, [pc, #136]	; (4013cc <SystemCoreClockUpdate+0xfc>)
  401342:	4b20      	ldr	r3, [pc, #128]	; (4013c4 <SystemCoreClockUpdate+0xf4>)
  401344:	601a      	str	r2, [r3, #0]
          break;
  401346:	e7cc      	b.n	4012e2 <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 2U;
  401348:	4a22      	ldr	r2, [pc, #136]	; (4013d4 <SystemCoreClockUpdate+0x104>)
  40134a:	4b1e      	ldr	r3, [pc, #120]	; (4013c4 <SystemCoreClockUpdate+0xf4>)
  40134c:	601a      	str	r2, [r3, #0]
          break;
  40134e:	e7c8      	b.n	4012e2 <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  401350:	4b1b      	ldr	r3, [pc, #108]	; (4013c0 <SystemCoreClockUpdate+0xf0>)
  401352:	6a1b      	ldr	r3, [r3, #32]
  401354:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  401358:	d016      	beq.n	401388 <SystemCoreClockUpdate+0xb8>
        SystemCoreClock = CHIP_FREQ_XTAL_12M ;
  40135a:	4a1c      	ldr	r2, [pc, #112]	; (4013cc <SystemCoreClockUpdate+0xfc>)
  40135c:	4b19      	ldr	r3, [pc, #100]	; (4013c4 <SystemCoreClockUpdate+0xf4>)
  40135e:	601a      	str	r2, [r3, #0]
      if ( (uint32_t) (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK )
  401360:	4b17      	ldr	r3, [pc, #92]	; (4013c0 <SystemCoreClockUpdate+0xf0>)
  401362:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401364:	f003 0303 	and.w	r3, r3, #3
  401368:	2b02      	cmp	r3, #2
  40136a:	d1ba      	bne.n	4012e2 <SystemCoreClockUpdate+0x12>
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  40136c:	4a14      	ldr	r2, [pc, #80]	; (4013c0 <SystemCoreClockUpdate+0xf0>)
  40136e:	6a91      	ldr	r1, [r2, #40]	; 0x28
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  401370:	6a92      	ldr	r2, [r2, #40]	; 0x28
  401372:	4814      	ldr	r0, [pc, #80]	; (4013c4 <SystemCoreClockUpdate+0xf4>)
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  401374:	f3c1 410a 	ubfx	r1, r1, #16, #11
  401378:	6803      	ldr	r3, [r0, #0]
  40137a:	fb01 3303 	mla	r3, r1, r3, r3
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  40137e:	b2d2      	uxtb	r2, r2
  401380:	fbb3 f3f2 	udiv	r3, r3, r2
  401384:	6003      	str	r3, [r0, #0]
  401386:	e7ac      	b.n	4012e2 <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  401388:	4a11      	ldr	r2, [pc, #68]	; (4013d0 <SystemCoreClockUpdate+0x100>)
  40138a:	4b0e      	ldr	r3, [pc, #56]	; (4013c4 <SystemCoreClockUpdate+0xf4>)
  40138c:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  40138e:	4b0c      	ldr	r3, [pc, #48]	; (4013c0 <SystemCoreClockUpdate+0xf0>)
  401390:	6a1b      	ldr	r3, [r3, #32]
  401392:	f003 0370 	and.w	r3, r3, #112	; 0x70
  401396:	2b10      	cmp	r3, #16
  401398:	d005      	beq.n	4013a6 <SystemCoreClockUpdate+0xd6>
  40139a:	2b20      	cmp	r3, #32
  40139c:	d1e0      	bne.n	401360 <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 3U;
  40139e:	4a0b      	ldr	r2, [pc, #44]	; (4013cc <SystemCoreClockUpdate+0xfc>)
  4013a0:	4b08      	ldr	r3, [pc, #32]	; (4013c4 <SystemCoreClockUpdate+0xf4>)
  4013a2:	601a      	str	r2, [r3, #0]
          break;
  4013a4:	e7dc      	b.n	401360 <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 2U;
  4013a6:	4a0b      	ldr	r2, [pc, #44]	; (4013d4 <SystemCoreClockUpdate+0x104>)
  4013a8:	4b06      	ldr	r3, [pc, #24]	; (4013c4 <SystemCoreClockUpdate+0xf4>)
  4013aa:	601a      	str	r2, [r3, #0]
          break;
  4013ac:	e7d8      	b.n	401360 <SystemCoreClockUpdate+0x90>
    SystemCoreClock /= 3U;
  4013ae:	4a05      	ldr	r2, [pc, #20]	; (4013c4 <SystemCoreClockUpdate+0xf4>)
  4013b0:	6813      	ldr	r3, [r2, #0]
  4013b2:	4909      	ldr	r1, [pc, #36]	; (4013d8 <SystemCoreClockUpdate+0x108>)
  4013b4:	fba1 1303 	umull	r1, r3, r1, r3
  4013b8:	085b      	lsrs	r3, r3, #1
  4013ba:	6013      	str	r3, [r2, #0]
  4013bc:	4770      	bx	lr
  4013be:	bf00      	nop
  4013c0:	400e0600 	.word	0x400e0600
  4013c4:	2040001c 	.word	0x2040001c
  4013c8:	400e1810 	.word	0x400e1810
  4013cc:	00b71b00 	.word	0x00b71b00
  4013d0:	003d0900 	.word	0x003d0900
  4013d4:	007a1200 	.word	0x007a1200
  4013d8:	aaaaaaab 	.word	0xaaaaaaab

004013dc <system_init_flash>:
 * Initialize flash.
 */
void system_init_flash( uint32_t ul_clk )
{
  /* Set FWS for embedded Flash access according to operating frequency */
  if ( ul_clk < CHIP_FREQ_FWS_0 )
  4013dc:	4b16      	ldr	r3, [pc, #88]	; (401438 <system_init_flash+0x5c>)
  4013de:	4298      	cmp	r0, r3
  4013e0:	d913      	bls.n	40140a <system_init_flash+0x2e>
  {
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  }
  else
  {
    if (ul_clk < CHIP_FREQ_FWS_1)
  4013e2:	4b16      	ldr	r3, [pc, #88]	; (40143c <system_init_flash+0x60>)
  4013e4:	4298      	cmp	r0, r3
  4013e6:	d915      	bls.n	401414 <system_init_flash+0x38>
    {
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
    }
    else
    {
      if (ul_clk < CHIP_FREQ_FWS_2)
  4013e8:	4b15      	ldr	r3, [pc, #84]	; (401440 <system_init_flash+0x64>)
  4013ea:	4298      	cmp	r0, r3
  4013ec:	d916      	bls.n	40141c <system_init_flash+0x40>
      {
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
      }
      else
      {
        if ( ul_clk < CHIP_FREQ_FWS_3 )
  4013ee:	4b15      	ldr	r3, [pc, #84]	; (401444 <system_init_flash+0x68>)
  4013f0:	4298      	cmp	r0, r3
  4013f2:	d917      	bls.n	401424 <system_init_flash+0x48>
        {
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
        }
        else
        {
          if ( ul_clk < CHIP_FREQ_FWS_4 )
  4013f4:	4b14      	ldr	r3, [pc, #80]	; (401448 <system_init_flash+0x6c>)
  4013f6:	4298      	cmp	r0, r3
  4013f8:	d918      	bls.n	40142c <system_init_flash+0x50>
          {
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
          }
          else
          {
            if ( ul_clk < CHIP_FREQ_FWS_5 )
  4013fa:	4b14      	ldr	r3, [pc, #80]	; (40144c <system_init_flash+0x70>)
  4013fc:	4298      	cmp	r0, r3
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  4013fe:	bf94      	ite	ls
  401400:	4a13      	ldrls	r2, [pc, #76]	; (401450 <system_init_flash+0x74>)
            }
            else
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(6)|EEFC_FMR_CLOE;
  401402:	4a14      	ldrhi	r2, [pc, #80]	; (401454 <system_init_flash+0x78>)
  401404:	4b14      	ldr	r3, [pc, #80]	; (401458 <system_init_flash+0x7c>)
  401406:	601a      	str	r2, [r3, #0]
  401408:	4770      	bx	lr
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  40140a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  40140e:	4b12      	ldr	r3, [pc, #72]	; (401458 <system_init_flash+0x7c>)
  401410:	601a      	str	r2, [r3, #0]
  401412:	4770      	bx	lr
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  401414:	4a11      	ldr	r2, [pc, #68]	; (40145c <system_init_flash+0x80>)
  401416:	4b10      	ldr	r3, [pc, #64]	; (401458 <system_init_flash+0x7c>)
  401418:	601a      	str	r2, [r3, #0]
  40141a:	4770      	bx	lr
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  40141c:	4a10      	ldr	r2, [pc, #64]	; (401460 <system_init_flash+0x84>)
  40141e:	4b0e      	ldr	r3, [pc, #56]	; (401458 <system_init_flash+0x7c>)
  401420:	601a      	str	r2, [r3, #0]
  401422:	4770      	bx	lr
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  401424:	4a0f      	ldr	r2, [pc, #60]	; (401464 <system_init_flash+0x88>)
  401426:	4b0c      	ldr	r3, [pc, #48]	; (401458 <system_init_flash+0x7c>)
  401428:	601a      	str	r2, [r3, #0]
  40142a:	4770      	bx	lr
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  40142c:	f04f 2204 	mov.w	r2, #67109888	; 0x4000400
  401430:	4b09      	ldr	r3, [pc, #36]	; (401458 <system_init_flash+0x7c>)
  401432:	601a      	str	r2, [r3, #0]
  401434:	4770      	bx	lr
  401436:	bf00      	nop
  401438:	015ef3bf 	.word	0x015ef3bf
  40143c:	02bde77f 	.word	0x02bde77f
  401440:	041cdb3f 	.word	0x041cdb3f
  401444:	057bceff 	.word	0x057bceff
  401448:	06dac2bf 	.word	0x06dac2bf
  40144c:	0839b67f 	.word	0x0839b67f
  401450:	04000500 	.word	0x04000500
  401454:	04000600 	.word	0x04000600
  401458:	400e0c00 	.word	0x400e0c00
  40145c:	04000100 	.word	0x04000100
  401460:	04000200 	.word	0x04000200
  401464:	04000300 	.word	0x04000300

00401468 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  401468:	4b0a      	ldr	r3, [pc, #40]	; (401494 <_sbrk+0x2c>)
  40146a:	681b      	ldr	r3, [r3, #0]
  40146c:	b153      	cbz	r3, 401484 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  40146e:	4b09      	ldr	r3, [pc, #36]	; (401494 <_sbrk+0x2c>)
  401470:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  401472:	181a      	adds	r2, r3, r0
  401474:	4908      	ldr	r1, [pc, #32]	; (401498 <_sbrk+0x30>)
  401476:	4291      	cmp	r1, r2
  401478:	db08      	blt.n	40148c <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  40147a:	4610      	mov	r0, r2
  40147c:	4a05      	ldr	r2, [pc, #20]	; (401494 <_sbrk+0x2c>)
  40147e:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  401480:	4618      	mov	r0, r3
  401482:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  401484:	4a05      	ldr	r2, [pc, #20]	; (40149c <_sbrk+0x34>)
  401486:	4b03      	ldr	r3, [pc, #12]	; (401494 <_sbrk+0x2c>)
  401488:	601a      	str	r2, [r3, #0]
  40148a:	e7f0      	b.n	40146e <_sbrk+0x6>
		return (caddr_t) -1;	
  40148c:	f04f 30ff 	mov.w	r0, #4294967295
}
  401490:	4770      	bx	lr
  401492:	bf00      	nop
  401494:	20400c70 	.word	0x20400c70
  401498:	2045fffc 	.word	0x2045fffc
  40149c:	20402ed8 	.word	0x20402ed8

004014a0 <but_callback>:
static void RTT_init(float freqPrescale, uint32_t IrqNPulses, uint32_t rttIRQSource);
void init(void);

void but_callback(void)
{
	but_flag = 1;
  4014a0:	2201      	movs	r2, #1
  4014a2:	4b01      	ldr	r3, [pc, #4]	; (4014a8 <but_callback+0x8>)
  4014a4:	701a      	strb	r2, [r3, #0]
  4014a6:	4770      	bx	lr
  4014a8:	20400c74 	.word	0x20400c74

004014ac <echo_callback>:
}

void echo_callback(void)
{
  4014ac:	b510      	push	{r4, lr}
	if (pio_get(ECHO_PIO, PIO_INPUT, ECHO_PIO_IDX_MASK))
  4014ae:	2240      	movs	r2, #64	; 0x40
  4014b0:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  4014b4:	4814      	ldr	r0, [pc, #80]	; (401508 <echo_callback+0x5c>)
  4014b6:	4b15      	ldr	r3, [pc, #84]	; (40150c <echo_callback+0x60>)
  4014b8:	4798      	blx	r3
  4014ba:	b940      	cbnz	r0, 4014ce <echo_callback+0x22>
		RTT_init(FREQUENCY, 0, 0);
		echo_flag = 1;
	}
	else
	{
		echo_flag = 0;
  4014bc:	2200      	movs	r2, #0
  4014be:	4b14      	ldr	r3, [pc, #80]	; (401510 <echo_callback+0x64>)
  4014c0:	701a      	strb	r2, [r3, #0]
		rtt_time = rtt_read_timer_value(RTT);
  4014c2:	4814      	ldr	r0, [pc, #80]	; (401514 <echo_callback+0x68>)
  4014c4:	4b14      	ldr	r3, [pc, #80]	; (401518 <echo_callback+0x6c>)
  4014c6:	4798      	blx	r3
  4014c8:	4b14      	ldr	r3, [pc, #80]	; (40151c <echo_callback+0x70>)
  4014ca:	6018      	str	r0, [r3, #0]
  4014cc:	bd10      	pop	{r4, pc}

static void RTT_init(float freqPrescale, uint32_t IrqNPulses, uint32_t rttIRQSource)
{
	uint16_t pllPreScale = (int)(((float)32768) / freqPrescale);

	rtt_sel_source(RTT, false);
  4014ce:	4c11      	ldr	r4, [pc, #68]	; (401514 <echo_callback+0x68>)
  4014d0:	2100      	movs	r1, #0
  4014d2:	4620      	mov	r0, r4
  4014d4:	4b12      	ldr	r3, [pc, #72]	; (401520 <echo_callback+0x74>)
  4014d6:	4798      	blx	r3
	rtt_init(RTT, pllPreScale);
  4014d8:	2103      	movs	r1, #3
  4014da:	4620      	mov	r0, r4
  4014dc:	4b11      	ldr	r3, [pc, #68]	; (401524 <echo_callback+0x78>)
  4014de:	4798      	blx	r3
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
  4014e0:	4b11      	ldr	r3, [pc, #68]	; (401528 <echo_callback+0x7c>)
  4014e2:	2208      	movs	r2, #8
  4014e4:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  4014e8:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  4014ec:	2180      	movs	r1, #128	; 0x80
  4014ee:	f883 1303 	strb.w	r1, [r3, #771]	; 0x303
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  4014f2:	601a      	str	r2, [r3, #0]

	/* Enable RTT interrupt */
	if (rttIRQSource & (RTT_MR_RTTINCIEN | RTT_MR_ALMIEN))
		rtt_enable_interrupt(RTT, rttIRQSource);
	else
		rtt_disable_interrupt(RTT, RTT_MR_RTTINCIEN | RTT_MR_ALMIEN);
  4014f4:	f44f 3140 	mov.w	r1, #196608	; 0x30000
  4014f8:	4620      	mov	r0, r4
  4014fa:	4b0c      	ldr	r3, [pc, #48]	; (40152c <echo_callback+0x80>)
  4014fc:	4798      	blx	r3
		echo_flag = 1;
  4014fe:	2201      	movs	r2, #1
  401500:	4b03      	ldr	r3, [pc, #12]	; (401510 <echo_callback+0x64>)
  401502:	701a      	strb	r2, [r3, #0]
  401504:	bd10      	pop	{r4, pc}
  401506:	bf00      	nop
  401508:	400e0e00 	.word	0x400e0e00
  40150c:	00400acf 	.word	0x00400acf
  401510:	20400c75 	.word	0x20400c75
  401514:	400e1830 	.word	0x400e1830
  401518:	00400201 	.word	0x00400201
  40151c:	20400c78 	.word	0x20400c78
  401520:	004001c1 	.word	0x004001c1
  401524:	004001ad 	.word	0x004001ad
  401528:	e000e100 	.word	0xe000e100
  40152c:	004001ed 	.word	0x004001ed

00401530 <sensor_trigger>:
{
  401530:	b510      	push	{r4, lr}
	gfx_mono_draw_string("trig  ", 0, 16, &sysfont);
  401532:	4b0b      	ldr	r3, [pc, #44]	; (401560 <sensor_trigger+0x30>)
  401534:	2210      	movs	r2, #16
  401536:	2100      	movs	r1, #0
  401538:	480a      	ldr	r0, [pc, #40]	; (401564 <sensor_trigger+0x34>)
  40153a:	4c0b      	ldr	r4, [pc, #44]	; (401568 <sensor_trigger+0x38>)
  40153c:	47a0      	blx	r4
	pio_set(TRIG_PIO, TRIG_PIO_IDX_MASK);
  40153e:	4c0b      	ldr	r4, [pc, #44]	; (40156c <sensor_trigger+0x3c>)
  401540:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  401544:	4620      	mov	r0, r4
  401546:	4b0a      	ldr	r3, [pc, #40]	; (401570 <sensor_trigger+0x40>)
  401548:	4798      	blx	r3
	delay_us(10);
  40154a:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  40154e:	4b09      	ldr	r3, [pc, #36]	; (401574 <sensor_trigger+0x44>)
  401550:	4798      	blx	r3
	pio_clear(TRIG_PIO, TRIG_PIO_IDX_MASK);
  401552:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  401556:	4620      	mov	r0, r4
  401558:	4b07      	ldr	r3, [pc, #28]	; (401578 <sensor_trigger+0x48>)
  40155a:	4798      	blx	r3
  40155c:	bd10      	pop	{r4, pc}
  40155e:	bf00      	nop
  401560:	2040000c 	.word	0x2040000c
  401564:	00406c18 	.word	0x00406c18
  401568:	00400545 	.word	0x00400545
  40156c:	400e1400 	.word	0x400e1400
  401570:	00400ac7 	.word	0x00400ac7
  401574:	20400001 	.word	0x20400001
  401578:	00400acb 	.word	0x00400acb

0040157c <draw_distance>:
{
  40157c:	b570      	push	{r4, r5, r6, lr}
  40157e:	b086      	sub	sp, #24
  401580:	4606      	mov	r6, r0
	gfx_mono_draw_string("             ", 0, 16, &sysfont);
  401582:	4d0b      	ldr	r5, [pc, #44]	; (4015b0 <draw_distance+0x34>)
  401584:	462b      	mov	r3, r5
  401586:	2210      	movs	r2, #16
  401588:	2100      	movs	r1, #0
  40158a:	480a      	ldr	r0, [pc, #40]	; (4015b4 <draw_distance+0x38>)
  40158c:	4c0a      	ldr	r4, [pc, #40]	; (4015b8 <draw_distance+0x3c>)
  40158e:	47a0      	blx	r4
	sprintf(str, "%.1f cm", distance);
  401590:	4630      	mov	r0, r6
  401592:	4b0a      	ldr	r3, [pc, #40]	; (4015bc <draw_distance+0x40>)
  401594:	4798      	blx	r3
  401596:	4602      	mov	r2, r0
  401598:	460b      	mov	r3, r1
  40159a:	4909      	ldr	r1, [pc, #36]	; (4015c0 <draw_distance+0x44>)
  40159c:	a801      	add	r0, sp, #4
  40159e:	4e09      	ldr	r6, [pc, #36]	; (4015c4 <draw_distance+0x48>)
  4015a0:	47b0      	blx	r6
	gfx_mono_draw_string(str, 0, 16, &sysfont);
  4015a2:	462b      	mov	r3, r5
  4015a4:	2210      	movs	r2, #16
  4015a6:	2100      	movs	r1, #0
  4015a8:	a801      	add	r0, sp, #4
  4015aa:	47a0      	blx	r4
}
  4015ac:	b006      	add	sp, #24
  4015ae:	bd70      	pop	{r4, r5, r6, pc}
  4015b0:	2040000c 	.word	0x2040000c
  4015b4:	00406be8 	.word	0x00406be8
  4015b8:	00400545 	.word	0x00400545
  4015bc:	00401aa5 	.word	0x00401aa5
  4015c0:	00406bf8 	.word	0x00406bf8
  4015c4:	004020fd 	.word	0x004020fd

004015c8 <RTT_Handler>:
{
  4015c8:	b508      	push	{r3, lr}
	ul_status = rtt_get_status(RTT);
  4015ca:	4802      	ldr	r0, [pc, #8]	; (4015d4 <RTT_Handler+0xc>)
  4015cc:	4b02      	ldr	r3, [pc, #8]	; (4015d8 <RTT_Handler+0x10>)
  4015ce:	4798      	blx	r3
  4015d0:	bd08      	pop	{r3, pc}
  4015d2:	bf00      	nop
  4015d4:	400e1830 	.word	0x400e1830
  4015d8:	00400215 	.word	0x00400215

004015dc <init>:
}

void init(void)
{
  4015dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4015e0:	b083      	sub	sp, #12
	// setup
	board_init();
  4015e2:	4b2e      	ldr	r3, [pc, #184]	; (40169c <init+0xc0>)
  4015e4:	4798      	blx	r3
	sysclk_init();
  4015e6:	4b2e      	ldr	r3, [pc, #184]	; (4016a0 <init+0xc4>)
  4015e8:	4798      	blx	r3
	delay_init();
	gfx_mono_ssd1306_init();
  4015ea:	4b2e      	ldr	r3, [pc, #184]	; (4016a4 <init+0xc8>)
  4015ec:	4798      	blx	r3
	WDT->WDT_MR = WDT_MR_WDDIS;
  4015ee:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  4015f2:	4b2d      	ldr	r3, [pc, #180]	; (4016a8 <init+0xcc>)
  4015f4:	605a      	str	r2, [r3, #4]

	// init clocks
	pmc_enable_periph_clk(ID_PIOA);
  4015f6:	200a      	movs	r0, #10
  4015f8:	4c2c      	ldr	r4, [pc, #176]	; (4016ac <init+0xd0>)
  4015fa:	47a0      	blx	r4
	pmc_enable_periph_clk(ID_PIOD);
  4015fc:	2010      	movs	r0, #16
  4015fe:	47a0      	blx	r4

	// btn
	pio_configure(BUT_PIO, PIO_INPUT, BUT_PIO_IDX_MASK, PIO_PULLUP | PIO_DEBOUNCE);
  401600:	2309      	movs	r3, #9
  401602:	f44f 6200 	mov.w	r2, #2048	; 0x800
  401606:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  40160a:	4829      	ldr	r0, [pc, #164]	; (4016b0 <init+0xd4>)
  40160c:	4e29      	ldr	r6, [pc, #164]	; (4016b4 <init+0xd8>)
  40160e:	47b0      	blx	r6
	pio_set_debounce_filter(BUT_PIO, BUT_PIO_IDX_MASK, 60);
  401610:	223c      	movs	r2, #60	; 0x3c
  401612:	f44f 6100 	mov.w	r1, #2048	; 0x800
  401616:	4826      	ldr	r0, [pc, #152]	; (4016b0 <init+0xd4>)
  401618:	f8df b0ac 	ldr.w	fp, [pc, #172]	; 4016c8 <init+0xec>
  40161c:	47d8      	blx	fp
	pio_handler_set(BUT_PIO,
  40161e:	4b26      	ldr	r3, [pc, #152]	; (4016b8 <init+0xdc>)
  401620:	9300      	str	r3, [sp, #0]
  401622:	2350      	movs	r3, #80	; 0x50
  401624:	f44f 6200 	mov.w	r2, #2048	; 0x800
  401628:	210a      	movs	r1, #10
  40162a:	4821      	ldr	r0, [pc, #132]	; (4016b0 <init+0xd4>)
  40162c:	f8df a09c 	ldr.w	sl, [pc, #156]	; 4016cc <init+0xf0>
  401630:	47d0      	blx	sl
					BUT_PIO_ID,
					BUT_PIO_IDX_MASK,
					PIO_IT_FALL_EDGE,
					but_callback);
	pio_enable_interrupt(BUT_PIO, BUT_PIO_IDX_MASK);
  401632:	f44f 6100 	mov.w	r1, #2048	; 0x800
  401636:	481e      	ldr	r0, [pc, #120]	; (4016b0 <init+0xd4>)
  401638:	f8df 9094 	ldr.w	r9, [pc, #148]	; 4016d0 <init+0xf4>
  40163c:	47c8      	blx	r9
	pio_get_interrupt_status(BUT_PIO);
  40163e:	481c      	ldr	r0, [pc, #112]	; (4016b0 <init+0xd4>)
  401640:	f8df 8090 	ldr.w	r8, [pc, #144]	; 4016d4 <init+0xf8>
  401644:	47c0      	blx	r8
  401646:	4d1d      	ldr	r5, [pc, #116]	; (4016bc <init+0xe0>)
  401648:	f44f 6780 	mov.w	r7, #1024	; 0x400
  40164c:	602f      	str	r7, [r5, #0]
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  40164e:	2480      	movs	r4, #128	; 0x80
  401650:	f885 430a 	strb.w	r4, [r5, #778]	; 0x30a
	NVIC_EnableIRQ(BUT_PIO_ID);
	NVIC_SetPriority(BUT_PIO_ID, 4);

	// echo
	pio_configure(ECHO_PIO, PIO_INPUT, ECHO_PIO_IDX_MASK, PIO_DEFAULT);
  401654:	2300      	movs	r3, #0
  401656:	2240      	movs	r2, #64	; 0x40
  401658:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  40165c:	4814      	ldr	r0, [pc, #80]	; (4016b0 <init+0xd4>)
  40165e:	47b0      	blx	r6
	pio_set_debounce_filter(ECHO_PIO, ECHO_PIO_IDX_MASK, 60);
  401660:	223c      	movs	r2, #60	; 0x3c
  401662:	2140      	movs	r1, #64	; 0x40
  401664:	4812      	ldr	r0, [pc, #72]	; (4016b0 <init+0xd4>)
  401666:	47d8      	blx	fp
	pio_handler_set(ECHO_PIO,
  401668:	4b15      	ldr	r3, [pc, #84]	; (4016c0 <init+0xe4>)
  40166a:	9300      	str	r3, [sp, #0]
  40166c:	2340      	movs	r3, #64	; 0x40
  40166e:	461a      	mov	r2, r3
  401670:	210a      	movs	r1, #10
  401672:	480f      	ldr	r0, [pc, #60]	; (4016b0 <init+0xd4>)
  401674:	47d0      	blx	sl
					ECHO_PIO_ID,
					ECHO_PIO_IDX_MASK,
					PIO_IT_EDGE,
					echo_callback);
	pio_enable_interrupt(ECHO_PIO, ECHO_PIO_IDX_MASK);
  401676:	2140      	movs	r1, #64	; 0x40
  401678:	480d      	ldr	r0, [pc, #52]	; (4016b0 <init+0xd4>)
  40167a:	47c8      	blx	r9
	pio_get_interrupt_status(ECHO_PIO);
  40167c:	480c      	ldr	r0, [pc, #48]	; (4016b0 <init+0xd4>)
  40167e:	47c0      	blx	r8
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  401680:	602f      	str	r7, [r5, #0]
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  401682:	f885 430a 	strb.w	r4, [r5, #778]	; 0x30a
	NVIC_EnableIRQ(ECHO_PIO_ID);
	NVIC_SetPriority(ECHO_PIO_ID, 4);

	// trigger
	pio_configure(TRIG_PIO, PIO_OUTPUT_0, TRIG_PIO_IDX_MASK, PIO_DEFAULT);
  401686:	2300      	movs	r3, #0
  401688:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
  40168c:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
  401690:	480c      	ldr	r0, [pc, #48]	; (4016c4 <init+0xe8>)
  401692:	47b0      	blx	r6
}
  401694:	b003      	add	sp, #12
  401696:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40169a:	bf00      	nop
  40169c:	0040096d 	.word	0x0040096d
  4016a0:	004008fd 	.word	0x004008fd
  4016a4:	004005dd 	.word	0x004005dd
  4016a8:	400e1850 	.word	0x400e1850
  4016ac:	00400eed 	.word	0x00400eed
  4016b0:	400e0e00 	.word	0x400e0e00
  4016b4:	00400bd9 	.word	0x00400bd9
  4016b8:	004014a1 	.word	0x004014a1
  4016bc:	e000e100 	.word	0xe000e100
  4016c0:	004014ad 	.word	0x004014ad
  4016c4:	400e1400 	.word	0x400e1400
  4016c8:	00400aad 	.word	0x00400aad
  4016cc:	00400cf9 	.word	0x00400cf9
  4016d0:	00400c9b 	.word	0x00400c9b
  4016d4:	00400c9f 	.word	0x00400c9f

004016d8 <main>:

void main(void)
{
  4016d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  4016dc:	ed2d 8b02 	vpush	{d8}
	init();
  4016e0:	4b2b      	ldr	r3, [pc, #172]	; (401790 <main+0xb8>)
  4016e2:	4798      	blx	r3
	float dist;
	gfx_mono_draw_string("init", 0, 16, &sysfont);
  4016e4:	4b2b      	ldr	r3, [pc, #172]	; (401794 <main+0xbc>)
  4016e6:	2210      	movs	r2, #16
  4016e8:	2100      	movs	r1, #0
  4016ea:	482b      	ldr	r0, [pc, #172]	; (401798 <main+0xc0>)
  4016ec:	4c2b      	ldr	r4, [pc, #172]	; (40179c <main+0xc4>)
  4016ee:	47a0      	blx	r4

	while (1)
	{
		if (but_flag)
  4016f0:	4d2b      	ldr	r5, [pc, #172]	; (4017a0 <main+0xc8>)
		{
			but_flag = 0;
			gfx_mono_draw_string("btn  ", 0, 16, &sysfont);
  4016f2:	f8df a0a0 	ldr.w	sl, [pc, #160]	; 401794 <main+0xbc>
			sensor_trigger();
		}
		if (echo_flag)
		{

			dist = (SND_SPEED * rtt_time * 100) / (2 * FREQUENCY);
  4016f6:	f04f 0800 	mov.w	r8, #0
  4016fa:	f8df 90dc 	ldr.w	r9, [pc, #220]	; 4017d8 <main+0x100>
  4016fe:	2600      	movs	r6, #0
  401700:	4f28      	ldr	r7, [pc, #160]	; (4017a4 <main+0xcc>)
			if (dist > 400 || dist < 2)
  401702:	ed9f 8a29 	vldr	s16, [pc, #164]	; 4017a8 <main+0xd0>
  401706:	e012      	b.n	40172e <main+0x56>
			but_flag = 0;
  401708:	2100      	movs	r1, #0
  40170a:	7029      	strb	r1, [r5, #0]
			gfx_mono_draw_string("btn  ", 0, 16, &sysfont);
  40170c:	4653      	mov	r3, sl
  40170e:	2210      	movs	r2, #16
  401710:	4826      	ldr	r0, [pc, #152]	; (4017ac <main+0xd4>)
  401712:	4c22      	ldr	r4, [pc, #136]	; (40179c <main+0xc4>)
  401714:	47a0      	blx	r4
			sensor_trigger();
  401716:	4b26      	ldr	r3, [pc, #152]	; (4017b0 <main+0xd8>)
  401718:	4798      	blx	r3
  40171a:	e00b      	b.n	401734 <main+0x5c>
			{
				gfx_mono_draw_string("ERRO", 0, 16, &sysfont);
  40171c:	4653      	mov	r3, sl
  40171e:	2210      	movs	r2, #16
  401720:	2100      	movs	r1, #0
  401722:	4824      	ldr	r0, [pc, #144]	; (4017b4 <main+0xdc>)
  401724:	4c1d      	ldr	r4, [pc, #116]	; (40179c <main+0xc4>)
  401726:	47a0      	blx	r4
			{
				draw_distance(dist);
				// desenha dist e grafico
			}
		}
		pmc_sleep(SAM_PM_SMODE_SLEEP_WFI);
  401728:	2002      	movs	r0, #2
  40172a:	4b23      	ldr	r3, [pc, #140]	; (4017b8 <main+0xe0>)
  40172c:	4798      	blx	r3
		if (but_flag)
  40172e:	782b      	ldrb	r3, [r5, #0]
  401730:	2b00      	cmp	r3, #0
  401732:	d1e9      	bne.n	401708 <main+0x30>
		if (echo_flag)
  401734:	4b21      	ldr	r3, [pc, #132]	; (4017bc <main+0xe4>)
  401736:	781b      	ldrb	r3, [r3, #0]
  401738:	2b00      	cmp	r3, #0
  40173a:	d0f5      	beq.n	401728 <main+0x50>
			dist = (SND_SPEED * rtt_time * 100) / (2 * FREQUENCY);
  40173c:	4b20      	ldr	r3, [pc, #128]	; (4017c0 <main+0xe8>)
  40173e:	6818      	ldr	r0, [r3, #0]
  401740:	4b20      	ldr	r3, [pc, #128]	; (4017c4 <main+0xec>)
  401742:	4798      	blx	r3
  401744:	4c20      	ldr	r4, [pc, #128]	; (4017c8 <main+0xf0>)
  401746:	4642      	mov	r2, r8
  401748:	464b      	mov	r3, r9
  40174a:	47a0      	blx	r4
  40174c:	4632      	mov	r2, r6
  40174e:	463b      	mov	r3, r7
  401750:	47a0      	blx	r4
  401752:	a30d      	add	r3, pc, #52	; (adr r3, 401788 <main+0xb0>)
  401754:	e9d3 2300 	ldrd	r2, r3, [r3]
  401758:	4c1c      	ldr	r4, [pc, #112]	; (4017cc <main+0xf4>)
  40175a:	47a0      	blx	r4
  40175c:	4b1c      	ldr	r3, [pc, #112]	; (4017d0 <main+0xf8>)
  40175e:	4798      	blx	r3
  401760:	ee07 0a90 	vmov	s15, r0
			if (dist > 400 || dist < 2)
  401764:	eef4 7ac8 	vcmpe.f32	s15, s16
  401768:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  40176c:	dcd6      	bgt.n	40171c <main+0x44>
  40176e:	eeb0 7a00 	vmov.f32	s14, #0	; 0x40000000  2.0
  401772:	eef4 7ac7 	vcmpe.f32	s15, s14
  401776:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  40177a:	d4cf      	bmi.n	40171c <main+0x44>
				draw_distance(dist);
  40177c:	4b15      	ldr	r3, [pc, #84]	; (4017d4 <main+0xfc>)
  40177e:	4798      	blx	r3
  401780:	e7d2      	b.n	401728 <main+0x50>
  401782:	bf00      	nop
  401784:	f3af 8000 	nop.w
  401788:	469ee584 	.word	0x469ee584
  40178c:	40d0d658 	.word	0x40d0d658
  401790:	004015dd 	.word	0x004015dd
  401794:	2040000c 	.word	0x2040000c
  401798:	00406c00 	.word	0x00406c00
  40179c:	00400545 	.word	0x00400545
  4017a0:	20400c74 	.word	0x20400c74
  4017a4:	40590000 	.word	0x40590000
  4017a8:	43c80000 	.word	0x43c80000
  4017ac:	00406c08 	.word	0x00406c08
  4017b0:	00401531 	.word	0x00401531
  4017b4:	00406c10 	.word	0x00406c10
  4017b8:	00400f91 	.word	0x00400f91
  4017bc:	20400c75 	.word	0x20400c75
  4017c0:	20400c78 	.word	0x20400c78
  4017c4:	00401a61 	.word	0x00401a61
  4017c8:	00401b4d 	.word	0x00401b4d
  4017cc:	00401da1 	.word	0x00401da1
  4017d0:	00401f71 	.word	0x00401f71
  4017d4:	0040157d 	.word	0x0040157d
  4017d8:	40754000 	.word	0x40754000

004017dc <__aeabi_drsub>:
  4017dc:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  4017e0:	e002      	b.n	4017e8 <__adddf3>
  4017e2:	bf00      	nop

004017e4 <__aeabi_dsub>:
  4017e4:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

004017e8 <__adddf3>:
  4017e8:	b530      	push	{r4, r5, lr}
  4017ea:	ea4f 0441 	mov.w	r4, r1, lsl #1
  4017ee:	ea4f 0543 	mov.w	r5, r3, lsl #1
  4017f2:	ea94 0f05 	teq	r4, r5
  4017f6:	bf08      	it	eq
  4017f8:	ea90 0f02 	teqeq	r0, r2
  4017fc:	bf1f      	itttt	ne
  4017fe:	ea54 0c00 	orrsne.w	ip, r4, r0
  401802:	ea55 0c02 	orrsne.w	ip, r5, r2
  401806:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  40180a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  40180e:	f000 80e2 	beq.w	4019d6 <__adddf3+0x1ee>
  401812:	ea4f 5454 	mov.w	r4, r4, lsr #21
  401816:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  40181a:	bfb8      	it	lt
  40181c:	426d      	neglt	r5, r5
  40181e:	dd0c      	ble.n	40183a <__adddf3+0x52>
  401820:	442c      	add	r4, r5
  401822:	ea80 0202 	eor.w	r2, r0, r2
  401826:	ea81 0303 	eor.w	r3, r1, r3
  40182a:	ea82 0000 	eor.w	r0, r2, r0
  40182e:	ea83 0101 	eor.w	r1, r3, r1
  401832:	ea80 0202 	eor.w	r2, r0, r2
  401836:	ea81 0303 	eor.w	r3, r1, r3
  40183a:	2d36      	cmp	r5, #54	; 0x36
  40183c:	bf88      	it	hi
  40183e:	bd30      	pophi	{r4, r5, pc}
  401840:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  401844:	ea4f 3101 	mov.w	r1, r1, lsl #12
  401848:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  40184c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  401850:	d002      	beq.n	401858 <__adddf3+0x70>
  401852:	4240      	negs	r0, r0
  401854:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  401858:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  40185c:	ea4f 3303 	mov.w	r3, r3, lsl #12
  401860:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  401864:	d002      	beq.n	40186c <__adddf3+0x84>
  401866:	4252      	negs	r2, r2
  401868:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  40186c:	ea94 0f05 	teq	r4, r5
  401870:	f000 80a7 	beq.w	4019c2 <__adddf3+0x1da>
  401874:	f1a4 0401 	sub.w	r4, r4, #1
  401878:	f1d5 0e20 	rsbs	lr, r5, #32
  40187c:	db0d      	blt.n	40189a <__adddf3+0xb2>
  40187e:	fa02 fc0e 	lsl.w	ip, r2, lr
  401882:	fa22 f205 	lsr.w	r2, r2, r5
  401886:	1880      	adds	r0, r0, r2
  401888:	f141 0100 	adc.w	r1, r1, #0
  40188c:	fa03 f20e 	lsl.w	r2, r3, lr
  401890:	1880      	adds	r0, r0, r2
  401892:	fa43 f305 	asr.w	r3, r3, r5
  401896:	4159      	adcs	r1, r3
  401898:	e00e      	b.n	4018b8 <__adddf3+0xd0>
  40189a:	f1a5 0520 	sub.w	r5, r5, #32
  40189e:	f10e 0e20 	add.w	lr, lr, #32
  4018a2:	2a01      	cmp	r2, #1
  4018a4:	fa03 fc0e 	lsl.w	ip, r3, lr
  4018a8:	bf28      	it	cs
  4018aa:	f04c 0c02 	orrcs.w	ip, ip, #2
  4018ae:	fa43 f305 	asr.w	r3, r3, r5
  4018b2:	18c0      	adds	r0, r0, r3
  4018b4:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  4018b8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  4018bc:	d507      	bpl.n	4018ce <__adddf3+0xe6>
  4018be:	f04f 0e00 	mov.w	lr, #0
  4018c2:	f1dc 0c00 	rsbs	ip, ip, #0
  4018c6:	eb7e 0000 	sbcs.w	r0, lr, r0
  4018ca:	eb6e 0101 	sbc.w	r1, lr, r1
  4018ce:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  4018d2:	d31b      	bcc.n	40190c <__adddf3+0x124>
  4018d4:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  4018d8:	d30c      	bcc.n	4018f4 <__adddf3+0x10c>
  4018da:	0849      	lsrs	r1, r1, #1
  4018dc:	ea5f 0030 	movs.w	r0, r0, rrx
  4018e0:	ea4f 0c3c 	mov.w	ip, ip, rrx
  4018e4:	f104 0401 	add.w	r4, r4, #1
  4018e8:	ea4f 5244 	mov.w	r2, r4, lsl #21
  4018ec:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  4018f0:	f080 809a 	bcs.w	401a28 <__adddf3+0x240>
  4018f4:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  4018f8:	bf08      	it	eq
  4018fa:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  4018fe:	f150 0000 	adcs.w	r0, r0, #0
  401902:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  401906:	ea41 0105 	orr.w	r1, r1, r5
  40190a:	bd30      	pop	{r4, r5, pc}
  40190c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  401910:	4140      	adcs	r0, r0
  401912:	eb41 0101 	adc.w	r1, r1, r1
  401916:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  40191a:	f1a4 0401 	sub.w	r4, r4, #1
  40191e:	d1e9      	bne.n	4018f4 <__adddf3+0x10c>
  401920:	f091 0f00 	teq	r1, #0
  401924:	bf04      	itt	eq
  401926:	4601      	moveq	r1, r0
  401928:	2000      	moveq	r0, #0
  40192a:	fab1 f381 	clz	r3, r1
  40192e:	bf08      	it	eq
  401930:	3320      	addeq	r3, #32
  401932:	f1a3 030b 	sub.w	r3, r3, #11
  401936:	f1b3 0220 	subs.w	r2, r3, #32
  40193a:	da0c      	bge.n	401956 <__adddf3+0x16e>
  40193c:	320c      	adds	r2, #12
  40193e:	dd08      	ble.n	401952 <__adddf3+0x16a>
  401940:	f102 0c14 	add.w	ip, r2, #20
  401944:	f1c2 020c 	rsb	r2, r2, #12
  401948:	fa01 f00c 	lsl.w	r0, r1, ip
  40194c:	fa21 f102 	lsr.w	r1, r1, r2
  401950:	e00c      	b.n	40196c <__adddf3+0x184>
  401952:	f102 0214 	add.w	r2, r2, #20
  401956:	bfd8      	it	le
  401958:	f1c2 0c20 	rsble	ip, r2, #32
  40195c:	fa01 f102 	lsl.w	r1, r1, r2
  401960:	fa20 fc0c 	lsr.w	ip, r0, ip
  401964:	bfdc      	itt	le
  401966:	ea41 010c 	orrle.w	r1, r1, ip
  40196a:	4090      	lslle	r0, r2
  40196c:	1ae4      	subs	r4, r4, r3
  40196e:	bfa2      	ittt	ge
  401970:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  401974:	4329      	orrge	r1, r5
  401976:	bd30      	popge	{r4, r5, pc}
  401978:	ea6f 0404 	mvn.w	r4, r4
  40197c:	3c1f      	subs	r4, #31
  40197e:	da1c      	bge.n	4019ba <__adddf3+0x1d2>
  401980:	340c      	adds	r4, #12
  401982:	dc0e      	bgt.n	4019a2 <__adddf3+0x1ba>
  401984:	f104 0414 	add.w	r4, r4, #20
  401988:	f1c4 0220 	rsb	r2, r4, #32
  40198c:	fa20 f004 	lsr.w	r0, r0, r4
  401990:	fa01 f302 	lsl.w	r3, r1, r2
  401994:	ea40 0003 	orr.w	r0, r0, r3
  401998:	fa21 f304 	lsr.w	r3, r1, r4
  40199c:	ea45 0103 	orr.w	r1, r5, r3
  4019a0:	bd30      	pop	{r4, r5, pc}
  4019a2:	f1c4 040c 	rsb	r4, r4, #12
  4019a6:	f1c4 0220 	rsb	r2, r4, #32
  4019aa:	fa20 f002 	lsr.w	r0, r0, r2
  4019ae:	fa01 f304 	lsl.w	r3, r1, r4
  4019b2:	ea40 0003 	orr.w	r0, r0, r3
  4019b6:	4629      	mov	r1, r5
  4019b8:	bd30      	pop	{r4, r5, pc}
  4019ba:	fa21 f004 	lsr.w	r0, r1, r4
  4019be:	4629      	mov	r1, r5
  4019c0:	bd30      	pop	{r4, r5, pc}
  4019c2:	f094 0f00 	teq	r4, #0
  4019c6:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  4019ca:	bf06      	itte	eq
  4019cc:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  4019d0:	3401      	addeq	r4, #1
  4019d2:	3d01      	subne	r5, #1
  4019d4:	e74e      	b.n	401874 <__adddf3+0x8c>
  4019d6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  4019da:	bf18      	it	ne
  4019dc:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  4019e0:	d029      	beq.n	401a36 <__adddf3+0x24e>
  4019e2:	ea94 0f05 	teq	r4, r5
  4019e6:	bf08      	it	eq
  4019e8:	ea90 0f02 	teqeq	r0, r2
  4019ec:	d005      	beq.n	4019fa <__adddf3+0x212>
  4019ee:	ea54 0c00 	orrs.w	ip, r4, r0
  4019f2:	bf04      	itt	eq
  4019f4:	4619      	moveq	r1, r3
  4019f6:	4610      	moveq	r0, r2
  4019f8:	bd30      	pop	{r4, r5, pc}
  4019fa:	ea91 0f03 	teq	r1, r3
  4019fe:	bf1e      	ittt	ne
  401a00:	2100      	movne	r1, #0
  401a02:	2000      	movne	r0, #0
  401a04:	bd30      	popne	{r4, r5, pc}
  401a06:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  401a0a:	d105      	bne.n	401a18 <__adddf3+0x230>
  401a0c:	0040      	lsls	r0, r0, #1
  401a0e:	4149      	adcs	r1, r1
  401a10:	bf28      	it	cs
  401a12:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  401a16:	bd30      	pop	{r4, r5, pc}
  401a18:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  401a1c:	bf3c      	itt	cc
  401a1e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  401a22:	bd30      	popcc	{r4, r5, pc}
  401a24:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401a28:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  401a2c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  401a30:	f04f 0000 	mov.w	r0, #0
  401a34:	bd30      	pop	{r4, r5, pc}
  401a36:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  401a3a:	bf1a      	itte	ne
  401a3c:	4619      	movne	r1, r3
  401a3e:	4610      	movne	r0, r2
  401a40:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  401a44:	bf1c      	itt	ne
  401a46:	460b      	movne	r3, r1
  401a48:	4602      	movne	r2, r0
  401a4a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  401a4e:	bf06      	itte	eq
  401a50:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  401a54:	ea91 0f03 	teqeq	r1, r3
  401a58:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  401a5c:	bd30      	pop	{r4, r5, pc}
  401a5e:	bf00      	nop

00401a60 <__aeabi_ui2d>:
  401a60:	f090 0f00 	teq	r0, #0
  401a64:	bf04      	itt	eq
  401a66:	2100      	moveq	r1, #0
  401a68:	4770      	bxeq	lr
  401a6a:	b530      	push	{r4, r5, lr}
  401a6c:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401a70:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401a74:	f04f 0500 	mov.w	r5, #0
  401a78:	f04f 0100 	mov.w	r1, #0
  401a7c:	e750      	b.n	401920 <__adddf3+0x138>
  401a7e:	bf00      	nop

00401a80 <__aeabi_i2d>:
  401a80:	f090 0f00 	teq	r0, #0
  401a84:	bf04      	itt	eq
  401a86:	2100      	moveq	r1, #0
  401a88:	4770      	bxeq	lr
  401a8a:	b530      	push	{r4, r5, lr}
  401a8c:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401a90:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401a94:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  401a98:	bf48      	it	mi
  401a9a:	4240      	negmi	r0, r0
  401a9c:	f04f 0100 	mov.w	r1, #0
  401aa0:	e73e      	b.n	401920 <__adddf3+0x138>
  401aa2:	bf00      	nop

00401aa4 <__aeabi_f2d>:
  401aa4:	0042      	lsls	r2, r0, #1
  401aa6:	ea4f 01e2 	mov.w	r1, r2, asr #3
  401aaa:	ea4f 0131 	mov.w	r1, r1, rrx
  401aae:	ea4f 7002 	mov.w	r0, r2, lsl #28
  401ab2:	bf1f      	itttt	ne
  401ab4:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  401ab8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  401abc:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  401ac0:	4770      	bxne	lr
  401ac2:	f092 0f00 	teq	r2, #0
  401ac6:	bf14      	ite	ne
  401ac8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  401acc:	4770      	bxeq	lr
  401ace:	b530      	push	{r4, r5, lr}
  401ad0:	f44f 7460 	mov.w	r4, #896	; 0x380
  401ad4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401ad8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  401adc:	e720      	b.n	401920 <__adddf3+0x138>
  401ade:	bf00      	nop

00401ae0 <__aeabi_ul2d>:
  401ae0:	ea50 0201 	orrs.w	r2, r0, r1
  401ae4:	bf08      	it	eq
  401ae6:	4770      	bxeq	lr
  401ae8:	b530      	push	{r4, r5, lr}
  401aea:	f04f 0500 	mov.w	r5, #0
  401aee:	e00a      	b.n	401b06 <__aeabi_l2d+0x16>

00401af0 <__aeabi_l2d>:
  401af0:	ea50 0201 	orrs.w	r2, r0, r1
  401af4:	bf08      	it	eq
  401af6:	4770      	bxeq	lr
  401af8:	b530      	push	{r4, r5, lr}
  401afa:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  401afe:	d502      	bpl.n	401b06 <__aeabi_l2d+0x16>
  401b00:	4240      	negs	r0, r0
  401b02:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  401b06:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401b0a:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401b0e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  401b12:	f43f aedc 	beq.w	4018ce <__adddf3+0xe6>
  401b16:	f04f 0203 	mov.w	r2, #3
  401b1a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  401b1e:	bf18      	it	ne
  401b20:	3203      	addne	r2, #3
  401b22:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  401b26:	bf18      	it	ne
  401b28:	3203      	addne	r2, #3
  401b2a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  401b2e:	f1c2 0320 	rsb	r3, r2, #32
  401b32:	fa00 fc03 	lsl.w	ip, r0, r3
  401b36:	fa20 f002 	lsr.w	r0, r0, r2
  401b3a:	fa01 fe03 	lsl.w	lr, r1, r3
  401b3e:	ea40 000e 	orr.w	r0, r0, lr
  401b42:	fa21 f102 	lsr.w	r1, r1, r2
  401b46:	4414      	add	r4, r2
  401b48:	e6c1      	b.n	4018ce <__adddf3+0xe6>
  401b4a:	bf00      	nop

00401b4c <__aeabi_dmul>:
  401b4c:	b570      	push	{r4, r5, r6, lr}
  401b4e:	f04f 0cff 	mov.w	ip, #255	; 0xff
  401b52:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  401b56:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  401b5a:	bf1d      	ittte	ne
  401b5c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  401b60:	ea94 0f0c 	teqne	r4, ip
  401b64:	ea95 0f0c 	teqne	r5, ip
  401b68:	f000 f8de 	bleq	401d28 <__aeabi_dmul+0x1dc>
  401b6c:	442c      	add	r4, r5
  401b6e:	ea81 0603 	eor.w	r6, r1, r3
  401b72:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  401b76:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  401b7a:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  401b7e:	bf18      	it	ne
  401b80:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  401b84:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  401b88:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  401b8c:	d038      	beq.n	401c00 <__aeabi_dmul+0xb4>
  401b8e:	fba0 ce02 	umull	ip, lr, r0, r2
  401b92:	f04f 0500 	mov.w	r5, #0
  401b96:	fbe1 e502 	umlal	lr, r5, r1, r2
  401b9a:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  401b9e:	fbe0 e503 	umlal	lr, r5, r0, r3
  401ba2:	f04f 0600 	mov.w	r6, #0
  401ba6:	fbe1 5603 	umlal	r5, r6, r1, r3
  401baa:	f09c 0f00 	teq	ip, #0
  401bae:	bf18      	it	ne
  401bb0:	f04e 0e01 	orrne.w	lr, lr, #1
  401bb4:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  401bb8:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  401bbc:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  401bc0:	d204      	bcs.n	401bcc <__aeabi_dmul+0x80>
  401bc2:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  401bc6:	416d      	adcs	r5, r5
  401bc8:	eb46 0606 	adc.w	r6, r6, r6
  401bcc:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  401bd0:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  401bd4:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  401bd8:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  401bdc:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  401be0:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  401be4:	bf88      	it	hi
  401be6:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  401bea:	d81e      	bhi.n	401c2a <__aeabi_dmul+0xde>
  401bec:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  401bf0:	bf08      	it	eq
  401bf2:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  401bf6:	f150 0000 	adcs.w	r0, r0, #0
  401bfa:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  401bfe:	bd70      	pop	{r4, r5, r6, pc}
  401c00:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  401c04:	ea46 0101 	orr.w	r1, r6, r1
  401c08:	ea40 0002 	orr.w	r0, r0, r2
  401c0c:	ea81 0103 	eor.w	r1, r1, r3
  401c10:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  401c14:	bfc2      	ittt	gt
  401c16:	ebd4 050c 	rsbsgt	r5, r4, ip
  401c1a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  401c1e:	bd70      	popgt	{r4, r5, r6, pc}
  401c20:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  401c24:	f04f 0e00 	mov.w	lr, #0
  401c28:	3c01      	subs	r4, #1
  401c2a:	f300 80ab 	bgt.w	401d84 <__aeabi_dmul+0x238>
  401c2e:	f114 0f36 	cmn.w	r4, #54	; 0x36
  401c32:	bfde      	ittt	le
  401c34:	2000      	movle	r0, #0
  401c36:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  401c3a:	bd70      	pople	{r4, r5, r6, pc}
  401c3c:	f1c4 0400 	rsb	r4, r4, #0
  401c40:	3c20      	subs	r4, #32
  401c42:	da35      	bge.n	401cb0 <__aeabi_dmul+0x164>
  401c44:	340c      	adds	r4, #12
  401c46:	dc1b      	bgt.n	401c80 <__aeabi_dmul+0x134>
  401c48:	f104 0414 	add.w	r4, r4, #20
  401c4c:	f1c4 0520 	rsb	r5, r4, #32
  401c50:	fa00 f305 	lsl.w	r3, r0, r5
  401c54:	fa20 f004 	lsr.w	r0, r0, r4
  401c58:	fa01 f205 	lsl.w	r2, r1, r5
  401c5c:	ea40 0002 	orr.w	r0, r0, r2
  401c60:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  401c64:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  401c68:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  401c6c:	fa21 f604 	lsr.w	r6, r1, r4
  401c70:	eb42 0106 	adc.w	r1, r2, r6
  401c74:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401c78:	bf08      	it	eq
  401c7a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  401c7e:	bd70      	pop	{r4, r5, r6, pc}
  401c80:	f1c4 040c 	rsb	r4, r4, #12
  401c84:	f1c4 0520 	rsb	r5, r4, #32
  401c88:	fa00 f304 	lsl.w	r3, r0, r4
  401c8c:	fa20 f005 	lsr.w	r0, r0, r5
  401c90:	fa01 f204 	lsl.w	r2, r1, r4
  401c94:	ea40 0002 	orr.w	r0, r0, r2
  401c98:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401c9c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  401ca0:	f141 0100 	adc.w	r1, r1, #0
  401ca4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401ca8:	bf08      	it	eq
  401caa:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  401cae:	bd70      	pop	{r4, r5, r6, pc}
  401cb0:	f1c4 0520 	rsb	r5, r4, #32
  401cb4:	fa00 f205 	lsl.w	r2, r0, r5
  401cb8:	ea4e 0e02 	orr.w	lr, lr, r2
  401cbc:	fa20 f304 	lsr.w	r3, r0, r4
  401cc0:	fa01 f205 	lsl.w	r2, r1, r5
  401cc4:	ea43 0302 	orr.w	r3, r3, r2
  401cc8:	fa21 f004 	lsr.w	r0, r1, r4
  401ccc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401cd0:	fa21 f204 	lsr.w	r2, r1, r4
  401cd4:	ea20 0002 	bic.w	r0, r0, r2
  401cd8:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  401cdc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401ce0:	bf08      	it	eq
  401ce2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  401ce6:	bd70      	pop	{r4, r5, r6, pc}
  401ce8:	f094 0f00 	teq	r4, #0
  401cec:	d10f      	bne.n	401d0e <__aeabi_dmul+0x1c2>
  401cee:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  401cf2:	0040      	lsls	r0, r0, #1
  401cf4:	eb41 0101 	adc.w	r1, r1, r1
  401cf8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401cfc:	bf08      	it	eq
  401cfe:	3c01      	subeq	r4, #1
  401d00:	d0f7      	beq.n	401cf2 <__aeabi_dmul+0x1a6>
  401d02:	ea41 0106 	orr.w	r1, r1, r6
  401d06:	f095 0f00 	teq	r5, #0
  401d0a:	bf18      	it	ne
  401d0c:	4770      	bxne	lr
  401d0e:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  401d12:	0052      	lsls	r2, r2, #1
  401d14:	eb43 0303 	adc.w	r3, r3, r3
  401d18:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  401d1c:	bf08      	it	eq
  401d1e:	3d01      	subeq	r5, #1
  401d20:	d0f7      	beq.n	401d12 <__aeabi_dmul+0x1c6>
  401d22:	ea43 0306 	orr.w	r3, r3, r6
  401d26:	4770      	bx	lr
  401d28:	ea94 0f0c 	teq	r4, ip
  401d2c:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  401d30:	bf18      	it	ne
  401d32:	ea95 0f0c 	teqne	r5, ip
  401d36:	d00c      	beq.n	401d52 <__aeabi_dmul+0x206>
  401d38:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  401d3c:	bf18      	it	ne
  401d3e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  401d42:	d1d1      	bne.n	401ce8 <__aeabi_dmul+0x19c>
  401d44:	ea81 0103 	eor.w	r1, r1, r3
  401d48:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401d4c:	f04f 0000 	mov.w	r0, #0
  401d50:	bd70      	pop	{r4, r5, r6, pc}
  401d52:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  401d56:	bf06      	itte	eq
  401d58:	4610      	moveq	r0, r2
  401d5a:	4619      	moveq	r1, r3
  401d5c:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  401d60:	d019      	beq.n	401d96 <__aeabi_dmul+0x24a>
  401d62:	ea94 0f0c 	teq	r4, ip
  401d66:	d102      	bne.n	401d6e <__aeabi_dmul+0x222>
  401d68:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  401d6c:	d113      	bne.n	401d96 <__aeabi_dmul+0x24a>
  401d6e:	ea95 0f0c 	teq	r5, ip
  401d72:	d105      	bne.n	401d80 <__aeabi_dmul+0x234>
  401d74:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  401d78:	bf1c      	itt	ne
  401d7a:	4610      	movne	r0, r2
  401d7c:	4619      	movne	r1, r3
  401d7e:	d10a      	bne.n	401d96 <__aeabi_dmul+0x24a>
  401d80:	ea81 0103 	eor.w	r1, r1, r3
  401d84:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401d88:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  401d8c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  401d90:	f04f 0000 	mov.w	r0, #0
  401d94:	bd70      	pop	{r4, r5, r6, pc}
  401d96:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  401d9a:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  401d9e:	bd70      	pop	{r4, r5, r6, pc}

00401da0 <__aeabi_ddiv>:
  401da0:	b570      	push	{r4, r5, r6, lr}
  401da2:	f04f 0cff 	mov.w	ip, #255	; 0xff
  401da6:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  401daa:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  401dae:	bf1d      	ittte	ne
  401db0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  401db4:	ea94 0f0c 	teqne	r4, ip
  401db8:	ea95 0f0c 	teqne	r5, ip
  401dbc:	f000 f8a7 	bleq	401f0e <__aeabi_ddiv+0x16e>
  401dc0:	eba4 0405 	sub.w	r4, r4, r5
  401dc4:	ea81 0e03 	eor.w	lr, r1, r3
  401dc8:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  401dcc:	ea4f 3101 	mov.w	r1, r1, lsl #12
  401dd0:	f000 8088 	beq.w	401ee4 <__aeabi_ddiv+0x144>
  401dd4:	ea4f 3303 	mov.w	r3, r3, lsl #12
  401dd8:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  401ddc:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  401de0:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  401de4:	ea4f 2202 	mov.w	r2, r2, lsl #8
  401de8:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  401dec:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  401df0:	ea4f 2600 	mov.w	r6, r0, lsl #8
  401df4:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  401df8:	429d      	cmp	r5, r3
  401dfa:	bf08      	it	eq
  401dfc:	4296      	cmpeq	r6, r2
  401dfe:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  401e02:	f504 7440 	add.w	r4, r4, #768	; 0x300
  401e06:	d202      	bcs.n	401e0e <__aeabi_ddiv+0x6e>
  401e08:	085b      	lsrs	r3, r3, #1
  401e0a:	ea4f 0232 	mov.w	r2, r2, rrx
  401e0e:	1ab6      	subs	r6, r6, r2
  401e10:	eb65 0503 	sbc.w	r5, r5, r3
  401e14:	085b      	lsrs	r3, r3, #1
  401e16:	ea4f 0232 	mov.w	r2, r2, rrx
  401e1a:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  401e1e:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  401e22:	ebb6 0e02 	subs.w	lr, r6, r2
  401e26:	eb75 0e03 	sbcs.w	lr, r5, r3
  401e2a:	bf22      	ittt	cs
  401e2c:	1ab6      	subcs	r6, r6, r2
  401e2e:	4675      	movcs	r5, lr
  401e30:	ea40 000c 	orrcs.w	r0, r0, ip
  401e34:	085b      	lsrs	r3, r3, #1
  401e36:	ea4f 0232 	mov.w	r2, r2, rrx
  401e3a:	ebb6 0e02 	subs.w	lr, r6, r2
  401e3e:	eb75 0e03 	sbcs.w	lr, r5, r3
  401e42:	bf22      	ittt	cs
  401e44:	1ab6      	subcs	r6, r6, r2
  401e46:	4675      	movcs	r5, lr
  401e48:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  401e4c:	085b      	lsrs	r3, r3, #1
  401e4e:	ea4f 0232 	mov.w	r2, r2, rrx
  401e52:	ebb6 0e02 	subs.w	lr, r6, r2
  401e56:	eb75 0e03 	sbcs.w	lr, r5, r3
  401e5a:	bf22      	ittt	cs
  401e5c:	1ab6      	subcs	r6, r6, r2
  401e5e:	4675      	movcs	r5, lr
  401e60:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  401e64:	085b      	lsrs	r3, r3, #1
  401e66:	ea4f 0232 	mov.w	r2, r2, rrx
  401e6a:	ebb6 0e02 	subs.w	lr, r6, r2
  401e6e:	eb75 0e03 	sbcs.w	lr, r5, r3
  401e72:	bf22      	ittt	cs
  401e74:	1ab6      	subcs	r6, r6, r2
  401e76:	4675      	movcs	r5, lr
  401e78:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  401e7c:	ea55 0e06 	orrs.w	lr, r5, r6
  401e80:	d018      	beq.n	401eb4 <__aeabi_ddiv+0x114>
  401e82:	ea4f 1505 	mov.w	r5, r5, lsl #4
  401e86:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  401e8a:	ea4f 1606 	mov.w	r6, r6, lsl #4
  401e8e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  401e92:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  401e96:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  401e9a:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  401e9e:	d1c0      	bne.n	401e22 <__aeabi_ddiv+0x82>
  401ea0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401ea4:	d10b      	bne.n	401ebe <__aeabi_ddiv+0x11e>
  401ea6:	ea41 0100 	orr.w	r1, r1, r0
  401eaa:	f04f 0000 	mov.w	r0, #0
  401eae:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  401eb2:	e7b6      	b.n	401e22 <__aeabi_ddiv+0x82>
  401eb4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401eb8:	bf04      	itt	eq
  401eba:	4301      	orreq	r1, r0
  401ebc:	2000      	moveq	r0, #0
  401ebe:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  401ec2:	bf88      	it	hi
  401ec4:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  401ec8:	f63f aeaf 	bhi.w	401c2a <__aeabi_dmul+0xde>
  401ecc:	ebb5 0c03 	subs.w	ip, r5, r3
  401ed0:	bf04      	itt	eq
  401ed2:	ebb6 0c02 	subseq.w	ip, r6, r2
  401ed6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  401eda:	f150 0000 	adcs.w	r0, r0, #0
  401ede:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  401ee2:	bd70      	pop	{r4, r5, r6, pc}
  401ee4:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  401ee8:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  401eec:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  401ef0:	bfc2      	ittt	gt
  401ef2:	ebd4 050c 	rsbsgt	r5, r4, ip
  401ef6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  401efa:	bd70      	popgt	{r4, r5, r6, pc}
  401efc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  401f00:	f04f 0e00 	mov.w	lr, #0
  401f04:	3c01      	subs	r4, #1
  401f06:	e690      	b.n	401c2a <__aeabi_dmul+0xde>
  401f08:	ea45 0e06 	orr.w	lr, r5, r6
  401f0c:	e68d      	b.n	401c2a <__aeabi_dmul+0xde>
  401f0e:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  401f12:	ea94 0f0c 	teq	r4, ip
  401f16:	bf08      	it	eq
  401f18:	ea95 0f0c 	teqeq	r5, ip
  401f1c:	f43f af3b 	beq.w	401d96 <__aeabi_dmul+0x24a>
  401f20:	ea94 0f0c 	teq	r4, ip
  401f24:	d10a      	bne.n	401f3c <__aeabi_ddiv+0x19c>
  401f26:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  401f2a:	f47f af34 	bne.w	401d96 <__aeabi_dmul+0x24a>
  401f2e:	ea95 0f0c 	teq	r5, ip
  401f32:	f47f af25 	bne.w	401d80 <__aeabi_dmul+0x234>
  401f36:	4610      	mov	r0, r2
  401f38:	4619      	mov	r1, r3
  401f3a:	e72c      	b.n	401d96 <__aeabi_dmul+0x24a>
  401f3c:	ea95 0f0c 	teq	r5, ip
  401f40:	d106      	bne.n	401f50 <__aeabi_ddiv+0x1b0>
  401f42:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  401f46:	f43f aefd 	beq.w	401d44 <__aeabi_dmul+0x1f8>
  401f4a:	4610      	mov	r0, r2
  401f4c:	4619      	mov	r1, r3
  401f4e:	e722      	b.n	401d96 <__aeabi_dmul+0x24a>
  401f50:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  401f54:	bf18      	it	ne
  401f56:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  401f5a:	f47f aec5 	bne.w	401ce8 <__aeabi_dmul+0x19c>
  401f5e:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  401f62:	f47f af0d 	bne.w	401d80 <__aeabi_dmul+0x234>
  401f66:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  401f6a:	f47f aeeb 	bne.w	401d44 <__aeabi_dmul+0x1f8>
  401f6e:	e712      	b.n	401d96 <__aeabi_dmul+0x24a>

00401f70 <__aeabi_d2f>:
  401f70:	ea4f 0241 	mov.w	r2, r1, lsl #1
  401f74:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
  401f78:	bf24      	itt	cs
  401f7a:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
  401f7e:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
  401f82:	d90d      	bls.n	401fa0 <__aeabi_d2f+0x30>
  401f84:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
  401f88:	ea4f 02c0 	mov.w	r2, r0, lsl #3
  401f8c:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
  401f90:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
  401f94:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
  401f98:	bf08      	it	eq
  401f9a:	f020 0001 	biceq.w	r0, r0, #1
  401f9e:	4770      	bx	lr
  401fa0:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
  401fa4:	d121      	bne.n	401fea <__aeabi_d2f+0x7a>
  401fa6:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
  401faa:	bfbc      	itt	lt
  401fac:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
  401fb0:	4770      	bxlt	lr
  401fb2:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  401fb6:	ea4f 5252 	mov.w	r2, r2, lsr #21
  401fba:	f1c2 0218 	rsb	r2, r2, #24
  401fbe:	f1c2 0c20 	rsb	ip, r2, #32
  401fc2:	fa10 f30c 	lsls.w	r3, r0, ip
  401fc6:	fa20 f002 	lsr.w	r0, r0, r2
  401fca:	bf18      	it	ne
  401fcc:	f040 0001 	orrne.w	r0, r0, #1
  401fd0:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  401fd4:	ea4f 23d3 	mov.w	r3, r3, lsr #11
  401fd8:	fa03 fc0c 	lsl.w	ip, r3, ip
  401fdc:	ea40 000c 	orr.w	r0, r0, ip
  401fe0:	fa23 f302 	lsr.w	r3, r3, r2
  401fe4:	ea4f 0343 	mov.w	r3, r3, lsl #1
  401fe8:	e7cc      	b.n	401f84 <__aeabi_d2f+0x14>
  401fea:	ea7f 5362 	mvns.w	r3, r2, asr #21
  401fee:	d107      	bne.n	402000 <__aeabi_d2f+0x90>
  401ff0:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
  401ff4:	bf1e      	ittt	ne
  401ff6:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
  401ffa:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
  401ffe:	4770      	bxne	lr
  402000:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
  402004:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
  402008:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  40200c:	4770      	bx	lr
  40200e:	bf00      	nop

00402010 <__libc_init_array>:
  402010:	b570      	push	{r4, r5, r6, lr}
  402012:	4e0f      	ldr	r6, [pc, #60]	; (402050 <__libc_init_array+0x40>)
  402014:	4d0f      	ldr	r5, [pc, #60]	; (402054 <__libc_init_array+0x44>)
  402016:	1b76      	subs	r6, r6, r5
  402018:	10b6      	asrs	r6, r6, #2
  40201a:	bf18      	it	ne
  40201c:	2400      	movne	r4, #0
  40201e:	d005      	beq.n	40202c <__libc_init_array+0x1c>
  402020:	3401      	adds	r4, #1
  402022:	f855 3b04 	ldr.w	r3, [r5], #4
  402026:	4798      	blx	r3
  402028:	42a6      	cmp	r6, r4
  40202a:	d1f9      	bne.n	402020 <__libc_init_array+0x10>
  40202c:	4e0a      	ldr	r6, [pc, #40]	; (402058 <__libc_init_array+0x48>)
  40202e:	4d0b      	ldr	r5, [pc, #44]	; (40205c <__libc_init_array+0x4c>)
  402030:	1b76      	subs	r6, r6, r5
  402032:	f004 ff39 	bl	406ea8 <_init>
  402036:	10b6      	asrs	r6, r6, #2
  402038:	bf18      	it	ne
  40203a:	2400      	movne	r4, #0
  40203c:	d006      	beq.n	40204c <__libc_init_array+0x3c>
  40203e:	3401      	adds	r4, #1
  402040:	f855 3b04 	ldr.w	r3, [r5], #4
  402044:	4798      	blx	r3
  402046:	42a6      	cmp	r6, r4
  402048:	d1f9      	bne.n	40203e <__libc_init_array+0x2e>
  40204a:	bd70      	pop	{r4, r5, r6, pc}
  40204c:	bd70      	pop	{r4, r5, r6, pc}
  40204e:	bf00      	nop
  402050:	00406eb4 	.word	0x00406eb4
  402054:	00406eb4 	.word	0x00406eb4
  402058:	00406ebc 	.word	0x00406ebc
  40205c:	00406eb4 	.word	0x00406eb4

00402060 <memset>:
  402060:	b470      	push	{r4, r5, r6}
  402062:	0786      	lsls	r6, r0, #30
  402064:	d046      	beq.n	4020f4 <memset+0x94>
  402066:	1e54      	subs	r4, r2, #1
  402068:	2a00      	cmp	r2, #0
  40206a:	d041      	beq.n	4020f0 <memset+0x90>
  40206c:	b2ca      	uxtb	r2, r1
  40206e:	4603      	mov	r3, r0
  402070:	e002      	b.n	402078 <memset+0x18>
  402072:	f114 34ff 	adds.w	r4, r4, #4294967295
  402076:	d33b      	bcc.n	4020f0 <memset+0x90>
  402078:	f803 2b01 	strb.w	r2, [r3], #1
  40207c:	079d      	lsls	r5, r3, #30
  40207e:	d1f8      	bne.n	402072 <memset+0x12>
  402080:	2c03      	cmp	r4, #3
  402082:	d92e      	bls.n	4020e2 <memset+0x82>
  402084:	b2cd      	uxtb	r5, r1
  402086:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  40208a:	2c0f      	cmp	r4, #15
  40208c:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  402090:	d919      	bls.n	4020c6 <memset+0x66>
  402092:	f103 0210 	add.w	r2, r3, #16
  402096:	4626      	mov	r6, r4
  402098:	3e10      	subs	r6, #16
  40209a:	2e0f      	cmp	r6, #15
  40209c:	f842 5c10 	str.w	r5, [r2, #-16]
  4020a0:	f842 5c0c 	str.w	r5, [r2, #-12]
  4020a4:	f842 5c08 	str.w	r5, [r2, #-8]
  4020a8:	f842 5c04 	str.w	r5, [r2, #-4]
  4020ac:	f102 0210 	add.w	r2, r2, #16
  4020b0:	d8f2      	bhi.n	402098 <memset+0x38>
  4020b2:	f1a4 0210 	sub.w	r2, r4, #16
  4020b6:	f022 020f 	bic.w	r2, r2, #15
  4020ba:	f004 040f 	and.w	r4, r4, #15
  4020be:	3210      	adds	r2, #16
  4020c0:	2c03      	cmp	r4, #3
  4020c2:	4413      	add	r3, r2
  4020c4:	d90d      	bls.n	4020e2 <memset+0x82>
  4020c6:	461e      	mov	r6, r3
  4020c8:	4622      	mov	r2, r4
  4020ca:	3a04      	subs	r2, #4
  4020cc:	2a03      	cmp	r2, #3
  4020ce:	f846 5b04 	str.w	r5, [r6], #4
  4020d2:	d8fa      	bhi.n	4020ca <memset+0x6a>
  4020d4:	1f22      	subs	r2, r4, #4
  4020d6:	f022 0203 	bic.w	r2, r2, #3
  4020da:	3204      	adds	r2, #4
  4020dc:	4413      	add	r3, r2
  4020de:	f004 0403 	and.w	r4, r4, #3
  4020e2:	b12c      	cbz	r4, 4020f0 <memset+0x90>
  4020e4:	b2c9      	uxtb	r1, r1
  4020e6:	441c      	add	r4, r3
  4020e8:	f803 1b01 	strb.w	r1, [r3], #1
  4020ec:	429c      	cmp	r4, r3
  4020ee:	d1fb      	bne.n	4020e8 <memset+0x88>
  4020f0:	bc70      	pop	{r4, r5, r6}
  4020f2:	4770      	bx	lr
  4020f4:	4614      	mov	r4, r2
  4020f6:	4603      	mov	r3, r0
  4020f8:	e7c2      	b.n	402080 <memset+0x20>
  4020fa:	bf00      	nop

004020fc <sprintf>:
  4020fc:	b40e      	push	{r1, r2, r3}
  4020fe:	b5f0      	push	{r4, r5, r6, r7, lr}
  402100:	b09c      	sub	sp, #112	; 0x70
  402102:	ab21      	add	r3, sp, #132	; 0x84
  402104:	490f      	ldr	r1, [pc, #60]	; (402144 <sprintf+0x48>)
  402106:	f853 2b04 	ldr.w	r2, [r3], #4
  40210a:	9301      	str	r3, [sp, #4]
  40210c:	4605      	mov	r5, r0
  40210e:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
  402112:	6808      	ldr	r0, [r1, #0]
  402114:	9502      	str	r5, [sp, #8]
  402116:	f44f 7702 	mov.w	r7, #520	; 0x208
  40211a:	f64f 76ff 	movw	r6, #65535	; 0xffff
  40211e:	a902      	add	r1, sp, #8
  402120:	9506      	str	r5, [sp, #24]
  402122:	f8ad 7014 	strh.w	r7, [sp, #20]
  402126:	9404      	str	r4, [sp, #16]
  402128:	9407      	str	r4, [sp, #28]
  40212a:	f8ad 6016 	strh.w	r6, [sp, #22]
  40212e:	f000 f80b 	bl	402148 <_svfprintf_r>
  402132:	9b02      	ldr	r3, [sp, #8]
  402134:	2200      	movs	r2, #0
  402136:	701a      	strb	r2, [r3, #0]
  402138:	b01c      	add	sp, #112	; 0x70
  40213a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  40213e:	b003      	add	sp, #12
  402140:	4770      	bx	lr
  402142:	bf00      	nop
  402144:	20400020 	.word	0x20400020

00402148 <_svfprintf_r>:
  402148:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40214c:	b0c3      	sub	sp, #268	; 0x10c
  40214e:	460c      	mov	r4, r1
  402150:	910b      	str	r1, [sp, #44]	; 0x2c
  402152:	4692      	mov	sl, r2
  402154:	930f      	str	r3, [sp, #60]	; 0x3c
  402156:	900c      	str	r0, [sp, #48]	; 0x30
  402158:	f002 fa0e 	bl	404578 <_localeconv_r>
  40215c:	6803      	ldr	r3, [r0, #0]
  40215e:	931a      	str	r3, [sp, #104]	; 0x68
  402160:	4618      	mov	r0, r3
  402162:	f003 f8ed 	bl	405340 <strlen>
  402166:	89a3      	ldrh	r3, [r4, #12]
  402168:	9019      	str	r0, [sp, #100]	; 0x64
  40216a:	0619      	lsls	r1, r3, #24
  40216c:	d503      	bpl.n	402176 <_svfprintf_r+0x2e>
  40216e:	6923      	ldr	r3, [r4, #16]
  402170:	2b00      	cmp	r3, #0
  402172:	f001 8003 	beq.w	40317c <_svfprintf_r+0x1034>
  402176:	2300      	movs	r3, #0
  402178:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
  40217c:	9313      	str	r3, [sp, #76]	; 0x4c
  40217e:	9315      	str	r3, [sp, #84]	; 0x54
  402180:	9314      	str	r3, [sp, #80]	; 0x50
  402182:	9327      	str	r3, [sp, #156]	; 0x9c
  402184:	9326      	str	r3, [sp, #152]	; 0x98
  402186:	9318      	str	r3, [sp, #96]	; 0x60
  402188:	931b      	str	r3, [sp, #108]	; 0x6c
  40218a:	9309      	str	r3, [sp, #36]	; 0x24
  40218c:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
  402190:	46c8      	mov	r8, r9
  402192:	9316      	str	r3, [sp, #88]	; 0x58
  402194:	9317      	str	r3, [sp, #92]	; 0x5c
  402196:	f89a 3000 	ldrb.w	r3, [sl]
  40219a:	4654      	mov	r4, sl
  40219c:	b1e3      	cbz	r3, 4021d8 <_svfprintf_r+0x90>
  40219e:	2b25      	cmp	r3, #37	; 0x25
  4021a0:	d102      	bne.n	4021a8 <_svfprintf_r+0x60>
  4021a2:	e019      	b.n	4021d8 <_svfprintf_r+0x90>
  4021a4:	2b25      	cmp	r3, #37	; 0x25
  4021a6:	d003      	beq.n	4021b0 <_svfprintf_r+0x68>
  4021a8:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  4021ac:	2b00      	cmp	r3, #0
  4021ae:	d1f9      	bne.n	4021a4 <_svfprintf_r+0x5c>
  4021b0:	eba4 050a 	sub.w	r5, r4, sl
  4021b4:	b185      	cbz	r5, 4021d8 <_svfprintf_r+0x90>
  4021b6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4021b8:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4021ba:	f8c8 a000 	str.w	sl, [r8]
  4021be:	3301      	adds	r3, #1
  4021c0:	442a      	add	r2, r5
  4021c2:	2b07      	cmp	r3, #7
  4021c4:	f8c8 5004 	str.w	r5, [r8, #4]
  4021c8:	9227      	str	r2, [sp, #156]	; 0x9c
  4021ca:	9326      	str	r3, [sp, #152]	; 0x98
  4021cc:	dc7f      	bgt.n	4022ce <_svfprintf_r+0x186>
  4021ce:	f108 0808 	add.w	r8, r8, #8
  4021d2:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4021d4:	442b      	add	r3, r5
  4021d6:	9309      	str	r3, [sp, #36]	; 0x24
  4021d8:	7823      	ldrb	r3, [r4, #0]
  4021da:	2b00      	cmp	r3, #0
  4021dc:	d07f      	beq.n	4022de <_svfprintf_r+0x196>
  4021de:	2300      	movs	r3, #0
  4021e0:	461a      	mov	r2, r3
  4021e2:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  4021e6:	4619      	mov	r1, r3
  4021e8:	930d      	str	r3, [sp, #52]	; 0x34
  4021ea:	469b      	mov	fp, r3
  4021ec:	f04f 30ff 	mov.w	r0, #4294967295
  4021f0:	7863      	ldrb	r3, [r4, #1]
  4021f2:	900a      	str	r0, [sp, #40]	; 0x28
  4021f4:	f104 0a01 	add.w	sl, r4, #1
  4021f8:	f10a 0a01 	add.w	sl, sl, #1
  4021fc:	f1a3 0020 	sub.w	r0, r3, #32
  402200:	2858      	cmp	r0, #88	; 0x58
  402202:	f200 83c1 	bhi.w	402988 <_svfprintf_r+0x840>
  402206:	e8df f010 	tbh	[pc, r0, lsl #1]
  40220a:	0238      	.short	0x0238
  40220c:	03bf03bf 	.word	0x03bf03bf
  402210:	03bf0240 	.word	0x03bf0240
  402214:	03bf03bf 	.word	0x03bf03bf
  402218:	03bf03bf 	.word	0x03bf03bf
  40221c:	024503bf 	.word	0x024503bf
  402220:	03bf0203 	.word	0x03bf0203
  402224:	026b005d 	.word	0x026b005d
  402228:	028603bf 	.word	0x028603bf
  40222c:	039d039d 	.word	0x039d039d
  402230:	039d039d 	.word	0x039d039d
  402234:	039d039d 	.word	0x039d039d
  402238:	039d039d 	.word	0x039d039d
  40223c:	03bf039d 	.word	0x03bf039d
  402240:	03bf03bf 	.word	0x03bf03bf
  402244:	03bf03bf 	.word	0x03bf03bf
  402248:	03bf03bf 	.word	0x03bf03bf
  40224c:	03bf03bf 	.word	0x03bf03bf
  402250:	033703bf 	.word	0x033703bf
  402254:	03bf0357 	.word	0x03bf0357
  402258:	03bf0357 	.word	0x03bf0357
  40225c:	03bf03bf 	.word	0x03bf03bf
  402260:	039803bf 	.word	0x039803bf
  402264:	03bf03bf 	.word	0x03bf03bf
  402268:	03bf03ad 	.word	0x03bf03ad
  40226c:	03bf03bf 	.word	0x03bf03bf
  402270:	03bf03bf 	.word	0x03bf03bf
  402274:	03bf0259 	.word	0x03bf0259
  402278:	031e03bf 	.word	0x031e03bf
  40227c:	03bf03bf 	.word	0x03bf03bf
  402280:	03bf03bf 	.word	0x03bf03bf
  402284:	03bf03bf 	.word	0x03bf03bf
  402288:	03bf03bf 	.word	0x03bf03bf
  40228c:	03bf03bf 	.word	0x03bf03bf
  402290:	02db02c6 	.word	0x02db02c6
  402294:	03570357 	.word	0x03570357
  402298:	028b0357 	.word	0x028b0357
  40229c:	03bf02db 	.word	0x03bf02db
  4022a0:	029003bf 	.word	0x029003bf
  4022a4:	029d03bf 	.word	0x029d03bf
  4022a8:	02b401cc 	.word	0x02b401cc
  4022ac:	03bf0208 	.word	0x03bf0208
  4022b0:	03bf01e1 	.word	0x03bf01e1
  4022b4:	03bf007e 	.word	0x03bf007e
  4022b8:	020d03bf 	.word	0x020d03bf
  4022bc:	980d      	ldr	r0, [sp, #52]	; 0x34
  4022be:	930f      	str	r3, [sp, #60]	; 0x3c
  4022c0:	4240      	negs	r0, r0
  4022c2:	900d      	str	r0, [sp, #52]	; 0x34
  4022c4:	f04b 0b04 	orr.w	fp, fp, #4
  4022c8:	f89a 3000 	ldrb.w	r3, [sl]
  4022cc:	e794      	b.n	4021f8 <_svfprintf_r+0xb0>
  4022ce:	aa25      	add	r2, sp, #148	; 0x94
  4022d0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4022d2:	980c      	ldr	r0, [sp, #48]	; 0x30
  4022d4:	f003 f8a2 	bl	40541c <__ssprint_r>
  4022d8:	b940      	cbnz	r0, 4022ec <_svfprintf_r+0x1a4>
  4022da:	46c8      	mov	r8, r9
  4022dc:	e779      	b.n	4021d2 <_svfprintf_r+0x8a>
  4022de:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  4022e0:	b123      	cbz	r3, 4022ec <_svfprintf_r+0x1a4>
  4022e2:	980c      	ldr	r0, [sp, #48]	; 0x30
  4022e4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4022e6:	aa25      	add	r2, sp, #148	; 0x94
  4022e8:	f003 f898 	bl	40541c <__ssprint_r>
  4022ec:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4022ee:	899b      	ldrh	r3, [r3, #12]
  4022f0:	f013 0f40 	tst.w	r3, #64	; 0x40
  4022f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4022f6:	bf18      	it	ne
  4022f8:	f04f 33ff 	movne.w	r3, #4294967295
  4022fc:	9309      	str	r3, [sp, #36]	; 0x24
  4022fe:	9809      	ldr	r0, [sp, #36]	; 0x24
  402300:	b043      	add	sp, #268	; 0x10c
  402302:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402306:	f01b 0f20 	tst.w	fp, #32
  40230a:	9311      	str	r3, [sp, #68]	; 0x44
  40230c:	f040 81dd 	bne.w	4026ca <_svfprintf_r+0x582>
  402310:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402312:	f01b 0f10 	tst.w	fp, #16
  402316:	4613      	mov	r3, r2
  402318:	f040 856e 	bne.w	402df8 <_svfprintf_r+0xcb0>
  40231c:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402320:	f000 856a 	beq.w	402df8 <_svfprintf_r+0xcb0>
  402324:	8814      	ldrh	r4, [r2, #0]
  402326:	3204      	adds	r2, #4
  402328:	2500      	movs	r5, #0
  40232a:	2301      	movs	r3, #1
  40232c:	920f      	str	r2, [sp, #60]	; 0x3c
  40232e:	2700      	movs	r7, #0
  402330:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402334:	990a      	ldr	r1, [sp, #40]	; 0x28
  402336:	1c4a      	adds	r2, r1, #1
  402338:	f000 8265 	beq.w	402806 <_svfprintf_r+0x6be>
  40233c:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
  402340:	9207      	str	r2, [sp, #28]
  402342:	ea54 0205 	orrs.w	r2, r4, r5
  402346:	f040 8264 	bne.w	402812 <_svfprintf_r+0x6ca>
  40234a:	2900      	cmp	r1, #0
  40234c:	f040 843c 	bne.w	402bc8 <_svfprintf_r+0xa80>
  402350:	2b00      	cmp	r3, #0
  402352:	f040 84d7 	bne.w	402d04 <_svfprintf_r+0xbbc>
  402356:	f01b 0301 	ands.w	r3, fp, #1
  40235a:	930e      	str	r3, [sp, #56]	; 0x38
  40235c:	f000 8604 	beq.w	402f68 <_svfprintf_r+0xe20>
  402360:	ae42      	add	r6, sp, #264	; 0x108
  402362:	2330      	movs	r3, #48	; 0x30
  402364:	f806 3d41 	strb.w	r3, [r6, #-65]!
  402368:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40236a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  40236c:	4293      	cmp	r3, r2
  40236e:	bfb8      	it	lt
  402370:	4613      	movlt	r3, r2
  402372:	9308      	str	r3, [sp, #32]
  402374:	2300      	movs	r3, #0
  402376:	9312      	str	r3, [sp, #72]	; 0x48
  402378:	b117      	cbz	r7, 402380 <_svfprintf_r+0x238>
  40237a:	9b08      	ldr	r3, [sp, #32]
  40237c:	3301      	adds	r3, #1
  40237e:	9308      	str	r3, [sp, #32]
  402380:	9b07      	ldr	r3, [sp, #28]
  402382:	f013 0302 	ands.w	r3, r3, #2
  402386:	9310      	str	r3, [sp, #64]	; 0x40
  402388:	d002      	beq.n	402390 <_svfprintf_r+0x248>
  40238a:	9b08      	ldr	r3, [sp, #32]
  40238c:	3302      	adds	r3, #2
  40238e:	9308      	str	r3, [sp, #32]
  402390:	9b07      	ldr	r3, [sp, #28]
  402392:	f013 0584 	ands.w	r5, r3, #132	; 0x84
  402396:	f040 830e 	bne.w	4029b6 <_svfprintf_r+0x86e>
  40239a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  40239c:	9a08      	ldr	r2, [sp, #32]
  40239e:	eba3 0b02 	sub.w	fp, r3, r2
  4023a2:	f1bb 0f00 	cmp.w	fp, #0
  4023a6:	f340 8306 	ble.w	4029b6 <_svfprintf_r+0x86e>
  4023aa:	f1bb 0f10 	cmp.w	fp, #16
  4023ae:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4023b0:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4023b2:	dd29      	ble.n	402408 <_svfprintf_r+0x2c0>
  4023b4:	4643      	mov	r3, r8
  4023b6:	4621      	mov	r1, r4
  4023b8:	46a8      	mov	r8, r5
  4023ba:	2710      	movs	r7, #16
  4023bc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4023be:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4023c0:	e006      	b.n	4023d0 <_svfprintf_r+0x288>
  4023c2:	f1ab 0b10 	sub.w	fp, fp, #16
  4023c6:	f1bb 0f10 	cmp.w	fp, #16
  4023ca:	f103 0308 	add.w	r3, r3, #8
  4023ce:	dd18      	ble.n	402402 <_svfprintf_r+0x2ba>
  4023d0:	3201      	adds	r2, #1
  4023d2:	48b7      	ldr	r0, [pc, #732]	; (4026b0 <_svfprintf_r+0x568>)
  4023d4:	9226      	str	r2, [sp, #152]	; 0x98
  4023d6:	3110      	adds	r1, #16
  4023d8:	2a07      	cmp	r2, #7
  4023da:	9127      	str	r1, [sp, #156]	; 0x9c
  4023dc:	e883 0081 	stmia.w	r3, {r0, r7}
  4023e0:	ddef      	ble.n	4023c2 <_svfprintf_r+0x27a>
  4023e2:	aa25      	add	r2, sp, #148	; 0x94
  4023e4:	4629      	mov	r1, r5
  4023e6:	4620      	mov	r0, r4
  4023e8:	f003 f818 	bl	40541c <__ssprint_r>
  4023ec:	2800      	cmp	r0, #0
  4023ee:	f47f af7d 	bne.w	4022ec <_svfprintf_r+0x1a4>
  4023f2:	f1ab 0b10 	sub.w	fp, fp, #16
  4023f6:	f1bb 0f10 	cmp.w	fp, #16
  4023fa:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4023fc:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4023fe:	464b      	mov	r3, r9
  402400:	dce6      	bgt.n	4023d0 <_svfprintf_r+0x288>
  402402:	4645      	mov	r5, r8
  402404:	460c      	mov	r4, r1
  402406:	4698      	mov	r8, r3
  402408:	3201      	adds	r2, #1
  40240a:	4ba9      	ldr	r3, [pc, #676]	; (4026b0 <_svfprintf_r+0x568>)
  40240c:	9226      	str	r2, [sp, #152]	; 0x98
  40240e:	445c      	add	r4, fp
  402410:	2a07      	cmp	r2, #7
  402412:	9427      	str	r4, [sp, #156]	; 0x9c
  402414:	e888 0808 	stmia.w	r8, {r3, fp}
  402418:	f300 8498 	bgt.w	402d4c <_svfprintf_r+0xc04>
  40241c:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402420:	f108 0808 	add.w	r8, r8, #8
  402424:	b177      	cbz	r7, 402444 <_svfprintf_r+0x2fc>
  402426:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402428:	3301      	adds	r3, #1
  40242a:	3401      	adds	r4, #1
  40242c:	f10d 0177 	add.w	r1, sp, #119	; 0x77
  402430:	2201      	movs	r2, #1
  402432:	2b07      	cmp	r3, #7
  402434:	9427      	str	r4, [sp, #156]	; 0x9c
  402436:	9326      	str	r3, [sp, #152]	; 0x98
  402438:	e888 0006 	stmia.w	r8, {r1, r2}
  40243c:	f300 83db 	bgt.w	402bf6 <_svfprintf_r+0xaae>
  402440:	f108 0808 	add.w	r8, r8, #8
  402444:	9b10      	ldr	r3, [sp, #64]	; 0x40
  402446:	b16b      	cbz	r3, 402464 <_svfprintf_r+0x31c>
  402448:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40244a:	3301      	adds	r3, #1
  40244c:	3402      	adds	r4, #2
  40244e:	a91e      	add	r1, sp, #120	; 0x78
  402450:	2202      	movs	r2, #2
  402452:	2b07      	cmp	r3, #7
  402454:	9427      	str	r4, [sp, #156]	; 0x9c
  402456:	9326      	str	r3, [sp, #152]	; 0x98
  402458:	e888 0006 	stmia.w	r8, {r1, r2}
  40245c:	f300 83d6 	bgt.w	402c0c <_svfprintf_r+0xac4>
  402460:	f108 0808 	add.w	r8, r8, #8
  402464:	2d80      	cmp	r5, #128	; 0x80
  402466:	f000 8315 	beq.w	402a94 <_svfprintf_r+0x94c>
  40246a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40246c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  40246e:	1a9f      	subs	r7, r3, r2
  402470:	2f00      	cmp	r7, #0
  402472:	dd36      	ble.n	4024e2 <_svfprintf_r+0x39a>
  402474:	2f10      	cmp	r7, #16
  402476:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402478:	4d8e      	ldr	r5, [pc, #568]	; (4026b4 <_svfprintf_r+0x56c>)
  40247a:	dd27      	ble.n	4024cc <_svfprintf_r+0x384>
  40247c:	4642      	mov	r2, r8
  40247e:	4621      	mov	r1, r4
  402480:	46b0      	mov	r8, r6
  402482:	f04f 0b10 	mov.w	fp, #16
  402486:	462e      	mov	r6, r5
  402488:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40248a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  40248c:	e004      	b.n	402498 <_svfprintf_r+0x350>
  40248e:	3f10      	subs	r7, #16
  402490:	2f10      	cmp	r7, #16
  402492:	f102 0208 	add.w	r2, r2, #8
  402496:	dd15      	ble.n	4024c4 <_svfprintf_r+0x37c>
  402498:	3301      	adds	r3, #1
  40249a:	3110      	adds	r1, #16
  40249c:	2b07      	cmp	r3, #7
  40249e:	9127      	str	r1, [sp, #156]	; 0x9c
  4024a0:	9326      	str	r3, [sp, #152]	; 0x98
  4024a2:	e882 0840 	stmia.w	r2, {r6, fp}
  4024a6:	ddf2      	ble.n	40248e <_svfprintf_r+0x346>
  4024a8:	aa25      	add	r2, sp, #148	; 0x94
  4024aa:	4629      	mov	r1, r5
  4024ac:	4620      	mov	r0, r4
  4024ae:	f002 ffb5 	bl	40541c <__ssprint_r>
  4024b2:	2800      	cmp	r0, #0
  4024b4:	f47f af1a 	bne.w	4022ec <_svfprintf_r+0x1a4>
  4024b8:	3f10      	subs	r7, #16
  4024ba:	2f10      	cmp	r7, #16
  4024bc:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4024be:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4024c0:	464a      	mov	r2, r9
  4024c2:	dce9      	bgt.n	402498 <_svfprintf_r+0x350>
  4024c4:	4635      	mov	r5, r6
  4024c6:	460c      	mov	r4, r1
  4024c8:	4646      	mov	r6, r8
  4024ca:	4690      	mov	r8, r2
  4024cc:	3301      	adds	r3, #1
  4024ce:	443c      	add	r4, r7
  4024d0:	2b07      	cmp	r3, #7
  4024d2:	9427      	str	r4, [sp, #156]	; 0x9c
  4024d4:	9326      	str	r3, [sp, #152]	; 0x98
  4024d6:	e888 00a0 	stmia.w	r8, {r5, r7}
  4024da:	f300 8381 	bgt.w	402be0 <_svfprintf_r+0xa98>
  4024de:	f108 0808 	add.w	r8, r8, #8
  4024e2:	9b07      	ldr	r3, [sp, #28]
  4024e4:	05df      	lsls	r7, r3, #23
  4024e6:	f100 8268 	bmi.w	4029ba <_svfprintf_r+0x872>
  4024ea:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4024ec:	990e      	ldr	r1, [sp, #56]	; 0x38
  4024ee:	f8c8 6000 	str.w	r6, [r8]
  4024f2:	3301      	adds	r3, #1
  4024f4:	440c      	add	r4, r1
  4024f6:	2b07      	cmp	r3, #7
  4024f8:	9427      	str	r4, [sp, #156]	; 0x9c
  4024fa:	f8c8 1004 	str.w	r1, [r8, #4]
  4024fe:	9326      	str	r3, [sp, #152]	; 0x98
  402500:	f300 834d 	bgt.w	402b9e <_svfprintf_r+0xa56>
  402504:	f108 0808 	add.w	r8, r8, #8
  402508:	9b07      	ldr	r3, [sp, #28]
  40250a:	075b      	lsls	r3, r3, #29
  40250c:	d53a      	bpl.n	402584 <_svfprintf_r+0x43c>
  40250e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402510:	9a08      	ldr	r2, [sp, #32]
  402512:	1a9d      	subs	r5, r3, r2
  402514:	2d00      	cmp	r5, #0
  402516:	dd35      	ble.n	402584 <_svfprintf_r+0x43c>
  402518:	2d10      	cmp	r5, #16
  40251a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40251c:	dd20      	ble.n	402560 <_svfprintf_r+0x418>
  40251e:	2610      	movs	r6, #16
  402520:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  402522:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
  402526:	e004      	b.n	402532 <_svfprintf_r+0x3ea>
  402528:	3d10      	subs	r5, #16
  40252a:	2d10      	cmp	r5, #16
  40252c:	f108 0808 	add.w	r8, r8, #8
  402530:	dd16      	ble.n	402560 <_svfprintf_r+0x418>
  402532:	3301      	adds	r3, #1
  402534:	4a5e      	ldr	r2, [pc, #376]	; (4026b0 <_svfprintf_r+0x568>)
  402536:	9326      	str	r3, [sp, #152]	; 0x98
  402538:	3410      	adds	r4, #16
  40253a:	2b07      	cmp	r3, #7
  40253c:	9427      	str	r4, [sp, #156]	; 0x9c
  40253e:	e888 0044 	stmia.w	r8, {r2, r6}
  402542:	ddf1      	ble.n	402528 <_svfprintf_r+0x3e0>
  402544:	aa25      	add	r2, sp, #148	; 0x94
  402546:	4659      	mov	r1, fp
  402548:	4638      	mov	r0, r7
  40254a:	f002 ff67 	bl	40541c <__ssprint_r>
  40254e:	2800      	cmp	r0, #0
  402550:	f47f aecc 	bne.w	4022ec <_svfprintf_r+0x1a4>
  402554:	3d10      	subs	r5, #16
  402556:	2d10      	cmp	r5, #16
  402558:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40255a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40255c:	46c8      	mov	r8, r9
  40255e:	dce8      	bgt.n	402532 <_svfprintf_r+0x3ea>
  402560:	3301      	adds	r3, #1
  402562:	4a53      	ldr	r2, [pc, #332]	; (4026b0 <_svfprintf_r+0x568>)
  402564:	9326      	str	r3, [sp, #152]	; 0x98
  402566:	442c      	add	r4, r5
  402568:	2b07      	cmp	r3, #7
  40256a:	9427      	str	r4, [sp, #156]	; 0x9c
  40256c:	e888 0024 	stmia.w	r8, {r2, r5}
  402570:	dd08      	ble.n	402584 <_svfprintf_r+0x43c>
  402572:	aa25      	add	r2, sp, #148	; 0x94
  402574:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402576:	980c      	ldr	r0, [sp, #48]	; 0x30
  402578:	f002 ff50 	bl	40541c <__ssprint_r>
  40257c:	2800      	cmp	r0, #0
  40257e:	f47f aeb5 	bne.w	4022ec <_svfprintf_r+0x1a4>
  402582:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402584:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402586:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  402588:	9908      	ldr	r1, [sp, #32]
  40258a:	428a      	cmp	r2, r1
  40258c:	bfac      	ite	ge
  40258e:	189b      	addge	r3, r3, r2
  402590:	185b      	addlt	r3, r3, r1
  402592:	9309      	str	r3, [sp, #36]	; 0x24
  402594:	2c00      	cmp	r4, #0
  402596:	f040 830d 	bne.w	402bb4 <_svfprintf_r+0xa6c>
  40259a:	2300      	movs	r3, #0
  40259c:	9326      	str	r3, [sp, #152]	; 0x98
  40259e:	46c8      	mov	r8, r9
  4025a0:	e5f9      	b.n	402196 <_svfprintf_r+0x4e>
  4025a2:	9311      	str	r3, [sp, #68]	; 0x44
  4025a4:	f01b 0320 	ands.w	r3, fp, #32
  4025a8:	f040 81e3 	bne.w	402972 <_svfprintf_r+0x82a>
  4025ac:	f01b 0210 	ands.w	r2, fp, #16
  4025b0:	f040 842e 	bne.w	402e10 <_svfprintf_r+0xcc8>
  4025b4:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
  4025b8:	f000 842a 	beq.w	402e10 <_svfprintf_r+0xcc8>
  4025bc:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4025be:	4613      	mov	r3, r2
  4025c0:	460a      	mov	r2, r1
  4025c2:	3204      	adds	r2, #4
  4025c4:	880c      	ldrh	r4, [r1, #0]
  4025c6:	920f      	str	r2, [sp, #60]	; 0x3c
  4025c8:	2500      	movs	r5, #0
  4025ca:	e6b0      	b.n	40232e <_svfprintf_r+0x1e6>
  4025cc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4025ce:	9311      	str	r3, [sp, #68]	; 0x44
  4025d0:	6816      	ldr	r6, [r2, #0]
  4025d2:	2400      	movs	r4, #0
  4025d4:	f88d 4077 	strb.w	r4, [sp, #119]	; 0x77
  4025d8:	1d15      	adds	r5, r2, #4
  4025da:	2e00      	cmp	r6, #0
  4025dc:	f000 86a7 	beq.w	40332e <_svfprintf_r+0x11e6>
  4025e0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4025e2:	1c53      	adds	r3, r2, #1
  4025e4:	f000 8609 	beq.w	4031fa <_svfprintf_r+0x10b2>
  4025e8:	4621      	mov	r1, r4
  4025ea:	4630      	mov	r0, r6
  4025ec:	f002 fa88 	bl	404b00 <memchr>
  4025f0:	2800      	cmp	r0, #0
  4025f2:	f000 86e1 	beq.w	4033b8 <_svfprintf_r+0x1270>
  4025f6:	1b83      	subs	r3, r0, r6
  4025f8:	930e      	str	r3, [sp, #56]	; 0x38
  4025fa:	940a      	str	r4, [sp, #40]	; 0x28
  4025fc:	950f      	str	r5, [sp, #60]	; 0x3c
  4025fe:	f8cd b01c 	str.w	fp, [sp, #28]
  402602:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402606:	9308      	str	r3, [sp, #32]
  402608:	9412      	str	r4, [sp, #72]	; 0x48
  40260a:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  40260e:	e6b3      	b.n	402378 <_svfprintf_r+0x230>
  402610:	f89a 3000 	ldrb.w	r3, [sl]
  402614:	2201      	movs	r2, #1
  402616:	212b      	movs	r1, #43	; 0x2b
  402618:	e5ee      	b.n	4021f8 <_svfprintf_r+0xb0>
  40261a:	f04b 0b20 	orr.w	fp, fp, #32
  40261e:	f89a 3000 	ldrb.w	r3, [sl]
  402622:	e5e9      	b.n	4021f8 <_svfprintf_r+0xb0>
  402624:	9311      	str	r3, [sp, #68]	; 0x44
  402626:	2a00      	cmp	r2, #0
  402628:	f040 8795 	bne.w	403556 <_svfprintf_r+0x140e>
  40262c:	4b22      	ldr	r3, [pc, #136]	; (4026b8 <_svfprintf_r+0x570>)
  40262e:	9318      	str	r3, [sp, #96]	; 0x60
  402630:	f01b 0f20 	tst.w	fp, #32
  402634:	f040 8111 	bne.w	40285a <_svfprintf_r+0x712>
  402638:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40263a:	f01b 0f10 	tst.w	fp, #16
  40263e:	4613      	mov	r3, r2
  402640:	f040 83e1 	bne.w	402e06 <_svfprintf_r+0xcbe>
  402644:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402648:	f000 83dd 	beq.w	402e06 <_svfprintf_r+0xcbe>
  40264c:	3304      	adds	r3, #4
  40264e:	8814      	ldrh	r4, [r2, #0]
  402650:	930f      	str	r3, [sp, #60]	; 0x3c
  402652:	2500      	movs	r5, #0
  402654:	f01b 0f01 	tst.w	fp, #1
  402658:	f000 810c 	beq.w	402874 <_svfprintf_r+0x72c>
  40265c:	ea54 0305 	orrs.w	r3, r4, r5
  402660:	f000 8108 	beq.w	402874 <_svfprintf_r+0x72c>
  402664:	2330      	movs	r3, #48	; 0x30
  402666:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  40266a:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
  40266e:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
  402672:	f04b 0b02 	orr.w	fp, fp, #2
  402676:	2302      	movs	r3, #2
  402678:	e659      	b.n	40232e <_svfprintf_r+0x1e6>
  40267a:	f89a 3000 	ldrb.w	r3, [sl]
  40267e:	2900      	cmp	r1, #0
  402680:	f47f adba 	bne.w	4021f8 <_svfprintf_r+0xb0>
  402684:	2201      	movs	r2, #1
  402686:	2120      	movs	r1, #32
  402688:	e5b6      	b.n	4021f8 <_svfprintf_r+0xb0>
  40268a:	f04b 0b01 	orr.w	fp, fp, #1
  40268e:	f89a 3000 	ldrb.w	r3, [sl]
  402692:	e5b1      	b.n	4021f8 <_svfprintf_r+0xb0>
  402694:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  402696:	6823      	ldr	r3, [r4, #0]
  402698:	930d      	str	r3, [sp, #52]	; 0x34
  40269a:	4618      	mov	r0, r3
  40269c:	2800      	cmp	r0, #0
  40269e:	4623      	mov	r3, r4
  4026a0:	f103 0304 	add.w	r3, r3, #4
  4026a4:	f6ff ae0a 	blt.w	4022bc <_svfprintf_r+0x174>
  4026a8:	930f      	str	r3, [sp, #60]	; 0x3c
  4026aa:	f89a 3000 	ldrb.w	r3, [sl]
  4026ae:	e5a3      	b.n	4021f8 <_svfprintf_r+0xb0>
  4026b0:	00406c68 	.word	0x00406c68
  4026b4:	00406c78 	.word	0x00406c78
  4026b8:	00406c48 	.word	0x00406c48
  4026bc:	f04b 0b10 	orr.w	fp, fp, #16
  4026c0:	f01b 0f20 	tst.w	fp, #32
  4026c4:	9311      	str	r3, [sp, #68]	; 0x44
  4026c6:	f43f ae23 	beq.w	402310 <_svfprintf_r+0x1c8>
  4026ca:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4026cc:	3507      	adds	r5, #7
  4026ce:	f025 0307 	bic.w	r3, r5, #7
  4026d2:	f103 0208 	add.w	r2, r3, #8
  4026d6:	e9d3 4500 	ldrd	r4, r5, [r3]
  4026da:	920f      	str	r2, [sp, #60]	; 0x3c
  4026dc:	2301      	movs	r3, #1
  4026de:	e626      	b.n	40232e <_svfprintf_r+0x1e6>
  4026e0:	f89a 3000 	ldrb.w	r3, [sl]
  4026e4:	2b2a      	cmp	r3, #42	; 0x2a
  4026e6:	f10a 0401 	add.w	r4, sl, #1
  4026ea:	f000 8727 	beq.w	40353c <_svfprintf_r+0x13f4>
  4026ee:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  4026f2:	2809      	cmp	r0, #9
  4026f4:	46a2      	mov	sl, r4
  4026f6:	f200 86ad 	bhi.w	403454 <_svfprintf_r+0x130c>
  4026fa:	2300      	movs	r3, #0
  4026fc:	461c      	mov	r4, r3
  4026fe:	f81a 3b01 	ldrb.w	r3, [sl], #1
  402702:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  402706:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  40270a:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  40270e:	2809      	cmp	r0, #9
  402710:	d9f5      	bls.n	4026fe <_svfprintf_r+0x5b6>
  402712:	940a      	str	r4, [sp, #40]	; 0x28
  402714:	e572      	b.n	4021fc <_svfprintf_r+0xb4>
  402716:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
  40271a:	f89a 3000 	ldrb.w	r3, [sl]
  40271e:	e56b      	b.n	4021f8 <_svfprintf_r+0xb0>
  402720:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  402724:	f89a 3000 	ldrb.w	r3, [sl]
  402728:	e566      	b.n	4021f8 <_svfprintf_r+0xb0>
  40272a:	f89a 3000 	ldrb.w	r3, [sl]
  40272e:	2b6c      	cmp	r3, #108	; 0x6c
  402730:	bf03      	ittte	eq
  402732:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
  402736:	f04b 0b20 	orreq.w	fp, fp, #32
  40273a:	f10a 0a01 	addeq.w	sl, sl, #1
  40273e:	f04b 0b10 	orrne.w	fp, fp, #16
  402742:	e559      	b.n	4021f8 <_svfprintf_r+0xb0>
  402744:	2a00      	cmp	r2, #0
  402746:	f040 8711 	bne.w	40356c <_svfprintf_r+0x1424>
  40274a:	f01b 0f20 	tst.w	fp, #32
  40274e:	f040 84f9 	bne.w	403144 <_svfprintf_r+0xffc>
  402752:	f01b 0f10 	tst.w	fp, #16
  402756:	f040 84ac 	bne.w	4030b2 <_svfprintf_r+0xf6a>
  40275a:	f01b 0f40 	tst.w	fp, #64	; 0x40
  40275e:	f000 84a8 	beq.w	4030b2 <_svfprintf_r+0xf6a>
  402762:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402764:	6813      	ldr	r3, [r2, #0]
  402766:	3204      	adds	r2, #4
  402768:	920f      	str	r2, [sp, #60]	; 0x3c
  40276a:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
  40276e:	801a      	strh	r2, [r3, #0]
  402770:	e511      	b.n	402196 <_svfprintf_r+0x4e>
  402772:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402774:	4bb3      	ldr	r3, [pc, #716]	; (402a44 <_svfprintf_r+0x8fc>)
  402776:	680c      	ldr	r4, [r1, #0]
  402778:	9318      	str	r3, [sp, #96]	; 0x60
  40277a:	2230      	movs	r2, #48	; 0x30
  40277c:	2378      	movs	r3, #120	; 0x78
  40277e:	3104      	adds	r1, #4
  402780:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
  402784:	9311      	str	r3, [sp, #68]	; 0x44
  402786:	f04b 0b02 	orr.w	fp, fp, #2
  40278a:	910f      	str	r1, [sp, #60]	; 0x3c
  40278c:	2500      	movs	r5, #0
  40278e:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
  402792:	2302      	movs	r3, #2
  402794:	e5cb      	b.n	40232e <_svfprintf_r+0x1e6>
  402796:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402798:	9311      	str	r3, [sp, #68]	; 0x44
  40279a:	680a      	ldr	r2, [r1, #0]
  40279c:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  4027a0:	2300      	movs	r3, #0
  4027a2:	460a      	mov	r2, r1
  4027a4:	461f      	mov	r7, r3
  4027a6:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  4027aa:	3204      	adds	r2, #4
  4027ac:	2301      	movs	r3, #1
  4027ae:	9308      	str	r3, [sp, #32]
  4027b0:	f8cd b01c 	str.w	fp, [sp, #28]
  4027b4:	970a      	str	r7, [sp, #40]	; 0x28
  4027b6:	9712      	str	r7, [sp, #72]	; 0x48
  4027b8:	920f      	str	r2, [sp, #60]	; 0x3c
  4027ba:	930e      	str	r3, [sp, #56]	; 0x38
  4027bc:	ae28      	add	r6, sp, #160	; 0xa0
  4027be:	e5df      	b.n	402380 <_svfprintf_r+0x238>
  4027c0:	9311      	str	r3, [sp, #68]	; 0x44
  4027c2:	2a00      	cmp	r2, #0
  4027c4:	f040 86ea 	bne.w	40359c <_svfprintf_r+0x1454>
  4027c8:	f01b 0f20 	tst.w	fp, #32
  4027cc:	d15d      	bne.n	40288a <_svfprintf_r+0x742>
  4027ce:	f01b 0f10 	tst.w	fp, #16
  4027d2:	f040 8308 	bne.w	402de6 <_svfprintf_r+0xc9e>
  4027d6:	f01b 0f40 	tst.w	fp, #64	; 0x40
  4027da:	f000 8304 	beq.w	402de6 <_svfprintf_r+0xc9e>
  4027de:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4027e0:	f9b1 4000 	ldrsh.w	r4, [r1]
  4027e4:	3104      	adds	r1, #4
  4027e6:	17e5      	asrs	r5, r4, #31
  4027e8:	4622      	mov	r2, r4
  4027ea:	462b      	mov	r3, r5
  4027ec:	910f      	str	r1, [sp, #60]	; 0x3c
  4027ee:	2a00      	cmp	r2, #0
  4027f0:	f173 0300 	sbcs.w	r3, r3, #0
  4027f4:	db58      	blt.n	4028a8 <_svfprintf_r+0x760>
  4027f6:	990a      	ldr	r1, [sp, #40]	; 0x28
  4027f8:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4027fc:	1c4a      	adds	r2, r1, #1
  4027fe:	f04f 0301 	mov.w	r3, #1
  402802:	f47f ad9b 	bne.w	40233c <_svfprintf_r+0x1f4>
  402806:	ea54 0205 	orrs.w	r2, r4, r5
  40280a:	f000 81df 	beq.w	402bcc <_svfprintf_r+0xa84>
  40280e:	f8cd b01c 	str.w	fp, [sp, #28]
  402812:	2b01      	cmp	r3, #1
  402814:	f000 827b 	beq.w	402d0e <_svfprintf_r+0xbc6>
  402818:	2b02      	cmp	r3, #2
  40281a:	f040 8206 	bne.w	402c2a <_svfprintf_r+0xae2>
  40281e:	9818      	ldr	r0, [sp, #96]	; 0x60
  402820:	464e      	mov	r6, r9
  402822:	0923      	lsrs	r3, r4, #4
  402824:	f004 010f 	and.w	r1, r4, #15
  402828:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  40282c:	092a      	lsrs	r2, r5, #4
  40282e:	461c      	mov	r4, r3
  402830:	4615      	mov	r5, r2
  402832:	5c43      	ldrb	r3, [r0, r1]
  402834:	f806 3d01 	strb.w	r3, [r6, #-1]!
  402838:	ea54 0305 	orrs.w	r3, r4, r5
  40283c:	d1f1      	bne.n	402822 <_svfprintf_r+0x6da>
  40283e:	eba9 0306 	sub.w	r3, r9, r6
  402842:	930e      	str	r3, [sp, #56]	; 0x38
  402844:	e590      	b.n	402368 <_svfprintf_r+0x220>
  402846:	9311      	str	r3, [sp, #68]	; 0x44
  402848:	2a00      	cmp	r2, #0
  40284a:	f040 86a3 	bne.w	403594 <_svfprintf_r+0x144c>
  40284e:	4b7e      	ldr	r3, [pc, #504]	; (402a48 <_svfprintf_r+0x900>)
  402850:	9318      	str	r3, [sp, #96]	; 0x60
  402852:	f01b 0f20 	tst.w	fp, #32
  402856:	f43f aeef 	beq.w	402638 <_svfprintf_r+0x4f0>
  40285a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  40285c:	3507      	adds	r5, #7
  40285e:	f025 0307 	bic.w	r3, r5, #7
  402862:	f103 0208 	add.w	r2, r3, #8
  402866:	f01b 0f01 	tst.w	fp, #1
  40286a:	920f      	str	r2, [sp, #60]	; 0x3c
  40286c:	e9d3 4500 	ldrd	r4, r5, [r3]
  402870:	f47f aef4 	bne.w	40265c <_svfprintf_r+0x514>
  402874:	2302      	movs	r3, #2
  402876:	e55a      	b.n	40232e <_svfprintf_r+0x1e6>
  402878:	9311      	str	r3, [sp, #68]	; 0x44
  40287a:	2a00      	cmp	r2, #0
  40287c:	f040 8686 	bne.w	40358c <_svfprintf_r+0x1444>
  402880:	f04b 0b10 	orr.w	fp, fp, #16
  402884:	f01b 0f20 	tst.w	fp, #32
  402888:	d0a1      	beq.n	4027ce <_svfprintf_r+0x686>
  40288a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  40288c:	3507      	adds	r5, #7
  40288e:	f025 0507 	bic.w	r5, r5, #7
  402892:	e9d5 2300 	ldrd	r2, r3, [r5]
  402896:	2a00      	cmp	r2, #0
  402898:	f105 0108 	add.w	r1, r5, #8
  40289c:	461d      	mov	r5, r3
  40289e:	f173 0300 	sbcs.w	r3, r3, #0
  4028a2:	910f      	str	r1, [sp, #60]	; 0x3c
  4028a4:	4614      	mov	r4, r2
  4028a6:	daa6      	bge.n	4027f6 <_svfprintf_r+0x6ae>
  4028a8:	272d      	movs	r7, #45	; 0x2d
  4028aa:	4264      	negs	r4, r4
  4028ac:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  4028b0:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  4028b4:	2301      	movs	r3, #1
  4028b6:	e53d      	b.n	402334 <_svfprintf_r+0x1ec>
  4028b8:	9311      	str	r3, [sp, #68]	; 0x44
  4028ba:	2a00      	cmp	r2, #0
  4028bc:	f040 8662 	bne.w	403584 <_svfprintf_r+0x143c>
  4028c0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4028c2:	3507      	adds	r5, #7
  4028c4:	f025 0307 	bic.w	r3, r5, #7
  4028c8:	f103 0208 	add.w	r2, r3, #8
  4028cc:	920f      	str	r2, [sp, #60]	; 0x3c
  4028ce:	681a      	ldr	r2, [r3, #0]
  4028d0:	9215      	str	r2, [sp, #84]	; 0x54
  4028d2:	685b      	ldr	r3, [r3, #4]
  4028d4:	9314      	str	r3, [sp, #80]	; 0x50
  4028d6:	9b14      	ldr	r3, [sp, #80]	; 0x50
  4028d8:	9d15      	ldr	r5, [sp, #84]	; 0x54
  4028da:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  4028de:	4628      	mov	r0, r5
  4028e0:	4621      	mov	r1, r4
  4028e2:	f04f 32ff 	mov.w	r2, #4294967295
  4028e6:	4b59      	ldr	r3, [pc, #356]	; (402a4c <_svfprintf_r+0x904>)
  4028e8:	f003 fa94 	bl	405e14 <__aeabi_dcmpun>
  4028ec:	2800      	cmp	r0, #0
  4028ee:	f040 834a 	bne.w	402f86 <_svfprintf_r+0xe3e>
  4028f2:	4628      	mov	r0, r5
  4028f4:	4621      	mov	r1, r4
  4028f6:	f04f 32ff 	mov.w	r2, #4294967295
  4028fa:	4b54      	ldr	r3, [pc, #336]	; (402a4c <_svfprintf_r+0x904>)
  4028fc:	f003 fa6c 	bl	405dd8 <__aeabi_dcmple>
  402900:	2800      	cmp	r0, #0
  402902:	f040 8340 	bne.w	402f86 <_svfprintf_r+0xe3e>
  402906:	a815      	add	r0, sp, #84	; 0x54
  402908:	c80d      	ldmia	r0, {r0, r2, r3}
  40290a:	9914      	ldr	r1, [sp, #80]	; 0x50
  40290c:	f003 fa5a 	bl	405dc4 <__aeabi_dcmplt>
  402910:	2800      	cmp	r0, #0
  402912:	f040 8530 	bne.w	403376 <_svfprintf_r+0x122e>
  402916:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  40291a:	4e4d      	ldr	r6, [pc, #308]	; (402a50 <_svfprintf_r+0x908>)
  40291c:	4b4d      	ldr	r3, [pc, #308]	; (402a54 <_svfprintf_r+0x90c>)
  40291e:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  402922:	9007      	str	r0, [sp, #28]
  402924:	9811      	ldr	r0, [sp, #68]	; 0x44
  402926:	2203      	movs	r2, #3
  402928:	2100      	movs	r1, #0
  40292a:	9208      	str	r2, [sp, #32]
  40292c:	910a      	str	r1, [sp, #40]	; 0x28
  40292e:	2847      	cmp	r0, #71	; 0x47
  402930:	bfd8      	it	le
  402932:	461e      	movle	r6, r3
  402934:	920e      	str	r2, [sp, #56]	; 0x38
  402936:	9112      	str	r1, [sp, #72]	; 0x48
  402938:	e51e      	b.n	402378 <_svfprintf_r+0x230>
  40293a:	f04b 0b08 	orr.w	fp, fp, #8
  40293e:	f89a 3000 	ldrb.w	r3, [sl]
  402942:	e459      	b.n	4021f8 <_svfprintf_r+0xb0>
  402944:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402948:	2300      	movs	r3, #0
  40294a:	461c      	mov	r4, r3
  40294c:	f81a 3b01 	ldrb.w	r3, [sl], #1
  402950:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  402954:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  402958:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  40295c:	2809      	cmp	r0, #9
  40295e:	d9f5      	bls.n	40294c <_svfprintf_r+0x804>
  402960:	940d      	str	r4, [sp, #52]	; 0x34
  402962:	e44b      	b.n	4021fc <_svfprintf_r+0xb4>
  402964:	f04b 0b10 	orr.w	fp, fp, #16
  402968:	9311      	str	r3, [sp, #68]	; 0x44
  40296a:	f01b 0320 	ands.w	r3, fp, #32
  40296e:	f43f ae1d 	beq.w	4025ac <_svfprintf_r+0x464>
  402972:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402974:	3507      	adds	r5, #7
  402976:	f025 0307 	bic.w	r3, r5, #7
  40297a:	f103 0208 	add.w	r2, r3, #8
  40297e:	e9d3 4500 	ldrd	r4, r5, [r3]
  402982:	920f      	str	r2, [sp, #60]	; 0x3c
  402984:	2300      	movs	r3, #0
  402986:	e4d2      	b.n	40232e <_svfprintf_r+0x1e6>
  402988:	9311      	str	r3, [sp, #68]	; 0x44
  40298a:	2a00      	cmp	r2, #0
  40298c:	f040 85e7 	bne.w	40355e <_svfprintf_r+0x1416>
  402990:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402992:	2a00      	cmp	r2, #0
  402994:	f43f aca3 	beq.w	4022de <_svfprintf_r+0x196>
  402998:	2300      	movs	r3, #0
  40299a:	2101      	movs	r1, #1
  40299c:	461f      	mov	r7, r3
  40299e:	9108      	str	r1, [sp, #32]
  4029a0:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  4029a4:	f8cd b01c 	str.w	fp, [sp, #28]
  4029a8:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  4029ac:	930a      	str	r3, [sp, #40]	; 0x28
  4029ae:	9312      	str	r3, [sp, #72]	; 0x48
  4029b0:	910e      	str	r1, [sp, #56]	; 0x38
  4029b2:	ae28      	add	r6, sp, #160	; 0xa0
  4029b4:	e4e4      	b.n	402380 <_svfprintf_r+0x238>
  4029b6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4029b8:	e534      	b.n	402424 <_svfprintf_r+0x2dc>
  4029ba:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4029bc:	2b65      	cmp	r3, #101	; 0x65
  4029be:	f340 80a7 	ble.w	402b10 <_svfprintf_r+0x9c8>
  4029c2:	a815      	add	r0, sp, #84	; 0x54
  4029c4:	c80d      	ldmia	r0, {r0, r2, r3}
  4029c6:	9914      	ldr	r1, [sp, #80]	; 0x50
  4029c8:	f003 f9f2 	bl	405db0 <__aeabi_dcmpeq>
  4029cc:	2800      	cmp	r0, #0
  4029ce:	f000 8150 	beq.w	402c72 <_svfprintf_r+0xb2a>
  4029d2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4029d4:	4a20      	ldr	r2, [pc, #128]	; (402a58 <_svfprintf_r+0x910>)
  4029d6:	f8c8 2000 	str.w	r2, [r8]
  4029da:	3301      	adds	r3, #1
  4029dc:	3401      	adds	r4, #1
  4029de:	2201      	movs	r2, #1
  4029e0:	2b07      	cmp	r3, #7
  4029e2:	9427      	str	r4, [sp, #156]	; 0x9c
  4029e4:	9326      	str	r3, [sp, #152]	; 0x98
  4029e6:	f8c8 2004 	str.w	r2, [r8, #4]
  4029ea:	f300 836a 	bgt.w	4030c2 <_svfprintf_r+0xf7a>
  4029ee:	f108 0808 	add.w	r8, r8, #8
  4029f2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  4029f4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  4029f6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4029f8:	4293      	cmp	r3, r2
  4029fa:	db03      	blt.n	402a04 <_svfprintf_r+0x8bc>
  4029fc:	9b07      	ldr	r3, [sp, #28]
  4029fe:	07dd      	lsls	r5, r3, #31
  402a00:	f57f ad82 	bpl.w	402508 <_svfprintf_r+0x3c0>
  402a04:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402a06:	9919      	ldr	r1, [sp, #100]	; 0x64
  402a08:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  402a0a:	f8c8 2000 	str.w	r2, [r8]
  402a0e:	3301      	adds	r3, #1
  402a10:	440c      	add	r4, r1
  402a12:	2b07      	cmp	r3, #7
  402a14:	f8c8 1004 	str.w	r1, [r8, #4]
  402a18:	9427      	str	r4, [sp, #156]	; 0x9c
  402a1a:	9326      	str	r3, [sp, #152]	; 0x98
  402a1c:	f300 839e 	bgt.w	40315c <_svfprintf_r+0x1014>
  402a20:	f108 0808 	add.w	r8, r8, #8
  402a24:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402a26:	1e5e      	subs	r6, r3, #1
  402a28:	2e00      	cmp	r6, #0
  402a2a:	f77f ad6d 	ble.w	402508 <_svfprintf_r+0x3c0>
  402a2e:	2e10      	cmp	r6, #16
  402a30:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402a32:	4d0a      	ldr	r5, [pc, #40]	; (402a5c <_svfprintf_r+0x914>)
  402a34:	f340 81f5 	ble.w	402e22 <_svfprintf_r+0xcda>
  402a38:	4622      	mov	r2, r4
  402a3a:	2710      	movs	r7, #16
  402a3c:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  402a40:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  402a42:	e013      	b.n	402a6c <_svfprintf_r+0x924>
  402a44:	00406c48 	.word	0x00406c48
  402a48:	00406c34 	.word	0x00406c34
  402a4c:	7fefffff 	.word	0x7fefffff
  402a50:	00406c28 	.word	0x00406c28
  402a54:	00406c24 	.word	0x00406c24
  402a58:	00406c64 	.word	0x00406c64
  402a5c:	00406c78 	.word	0x00406c78
  402a60:	f108 0808 	add.w	r8, r8, #8
  402a64:	3e10      	subs	r6, #16
  402a66:	2e10      	cmp	r6, #16
  402a68:	f340 81da 	ble.w	402e20 <_svfprintf_r+0xcd8>
  402a6c:	3301      	adds	r3, #1
  402a6e:	3210      	adds	r2, #16
  402a70:	2b07      	cmp	r3, #7
  402a72:	9227      	str	r2, [sp, #156]	; 0x9c
  402a74:	9326      	str	r3, [sp, #152]	; 0x98
  402a76:	e888 00a0 	stmia.w	r8, {r5, r7}
  402a7a:	ddf1      	ble.n	402a60 <_svfprintf_r+0x918>
  402a7c:	aa25      	add	r2, sp, #148	; 0x94
  402a7e:	4621      	mov	r1, r4
  402a80:	4658      	mov	r0, fp
  402a82:	f002 fccb 	bl	40541c <__ssprint_r>
  402a86:	2800      	cmp	r0, #0
  402a88:	f47f ac30 	bne.w	4022ec <_svfprintf_r+0x1a4>
  402a8c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402a8e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402a90:	46c8      	mov	r8, r9
  402a92:	e7e7      	b.n	402a64 <_svfprintf_r+0x91c>
  402a94:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402a96:	9a08      	ldr	r2, [sp, #32]
  402a98:	1a9f      	subs	r7, r3, r2
  402a9a:	2f00      	cmp	r7, #0
  402a9c:	f77f ace5 	ble.w	40246a <_svfprintf_r+0x322>
  402aa0:	2f10      	cmp	r7, #16
  402aa2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402aa4:	4db6      	ldr	r5, [pc, #728]	; (402d80 <_svfprintf_r+0xc38>)
  402aa6:	dd27      	ble.n	402af8 <_svfprintf_r+0x9b0>
  402aa8:	4642      	mov	r2, r8
  402aaa:	4621      	mov	r1, r4
  402aac:	46b0      	mov	r8, r6
  402aae:	f04f 0b10 	mov.w	fp, #16
  402ab2:	462e      	mov	r6, r5
  402ab4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402ab6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402ab8:	e004      	b.n	402ac4 <_svfprintf_r+0x97c>
  402aba:	3f10      	subs	r7, #16
  402abc:	2f10      	cmp	r7, #16
  402abe:	f102 0208 	add.w	r2, r2, #8
  402ac2:	dd15      	ble.n	402af0 <_svfprintf_r+0x9a8>
  402ac4:	3301      	adds	r3, #1
  402ac6:	3110      	adds	r1, #16
  402ac8:	2b07      	cmp	r3, #7
  402aca:	9127      	str	r1, [sp, #156]	; 0x9c
  402acc:	9326      	str	r3, [sp, #152]	; 0x98
  402ace:	e882 0840 	stmia.w	r2, {r6, fp}
  402ad2:	ddf2      	ble.n	402aba <_svfprintf_r+0x972>
  402ad4:	aa25      	add	r2, sp, #148	; 0x94
  402ad6:	4629      	mov	r1, r5
  402ad8:	4620      	mov	r0, r4
  402ada:	f002 fc9f 	bl	40541c <__ssprint_r>
  402ade:	2800      	cmp	r0, #0
  402ae0:	f47f ac04 	bne.w	4022ec <_svfprintf_r+0x1a4>
  402ae4:	3f10      	subs	r7, #16
  402ae6:	2f10      	cmp	r7, #16
  402ae8:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402aea:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402aec:	464a      	mov	r2, r9
  402aee:	dce9      	bgt.n	402ac4 <_svfprintf_r+0x97c>
  402af0:	4635      	mov	r5, r6
  402af2:	460c      	mov	r4, r1
  402af4:	4646      	mov	r6, r8
  402af6:	4690      	mov	r8, r2
  402af8:	3301      	adds	r3, #1
  402afa:	443c      	add	r4, r7
  402afc:	2b07      	cmp	r3, #7
  402afe:	9427      	str	r4, [sp, #156]	; 0x9c
  402b00:	9326      	str	r3, [sp, #152]	; 0x98
  402b02:	e888 00a0 	stmia.w	r8, {r5, r7}
  402b06:	f300 8232 	bgt.w	402f6e <_svfprintf_r+0xe26>
  402b0a:	f108 0808 	add.w	r8, r8, #8
  402b0e:	e4ac      	b.n	40246a <_svfprintf_r+0x322>
  402b10:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402b12:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402b14:	2b01      	cmp	r3, #1
  402b16:	f340 81fe 	ble.w	402f16 <_svfprintf_r+0xdce>
  402b1a:	3701      	adds	r7, #1
  402b1c:	3401      	adds	r4, #1
  402b1e:	2301      	movs	r3, #1
  402b20:	2f07      	cmp	r7, #7
  402b22:	9427      	str	r4, [sp, #156]	; 0x9c
  402b24:	9726      	str	r7, [sp, #152]	; 0x98
  402b26:	f8c8 6000 	str.w	r6, [r8]
  402b2a:	f8c8 3004 	str.w	r3, [r8, #4]
  402b2e:	f300 8203 	bgt.w	402f38 <_svfprintf_r+0xdf0>
  402b32:	f108 0808 	add.w	r8, r8, #8
  402b36:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402b38:	9b1a      	ldr	r3, [sp, #104]	; 0x68
  402b3a:	f8c8 3000 	str.w	r3, [r8]
  402b3e:	3701      	adds	r7, #1
  402b40:	4414      	add	r4, r2
  402b42:	2f07      	cmp	r7, #7
  402b44:	9427      	str	r4, [sp, #156]	; 0x9c
  402b46:	9726      	str	r7, [sp, #152]	; 0x98
  402b48:	f8c8 2004 	str.w	r2, [r8, #4]
  402b4c:	f300 8200 	bgt.w	402f50 <_svfprintf_r+0xe08>
  402b50:	f108 0808 	add.w	r8, r8, #8
  402b54:	a815      	add	r0, sp, #84	; 0x54
  402b56:	c80d      	ldmia	r0, {r0, r2, r3}
  402b58:	9914      	ldr	r1, [sp, #80]	; 0x50
  402b5a:	f003 f929 	bl	405db0 <__aeabi_dcmpeq>
  402b5e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402b60:	2800      	cmp	r0, #0
  402b62:	f040 8101 	bne.w	402d68 <_svfprintf_r+0xc20>
  402b66:	3b01      	subs	r3, #1
  402b68:	3701      	adds	r7, #1
  402b6a:	3601      	adds	r6, #1
  402b6c:	441c      	add	r4, r3
  402b6e:	2f07      	cmp	r7, #7
  402b70:	9726      	str	r7, [sp, #152]	; 0x98
  402b72:	9427      	str	r4, [sp, #156]	; 0x9c
  402b74:	f8c8 6000 	str.w	r6, [r8]
  402b78:	f8c8 3004 	str.w	r3, [r8, #4]
  402b7c:	f300 8127 	bgt.w	402dce <_svfprintf_r+0xc86>
  402b80:	f108 0808 	add.w	r8, r8, #8
  402b84:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
  402b86:	f8c8 2004 	str.w	r2, [r8, #4]
  402b8a:	3701      	adds	r7, #1
  402b8c:	4414      	add	r4, r2
  402b8e:	ab21      	add	r3, sp, #132	; 0x84
  402b90:	2f07      	cmp	r7, #7
  402b92:	9427      	str	r4, [sp, #156]	; 0x9c
  402b94:	9726      	str	r7, [sp, #152]	; 0x98
  402b96:	f8c8 3000 	str.w	r3, [r8]
  402b9a:	f77f acb3 	ble.w	402504 <_svfprintf_r+0x3bc>
  402b9e:	aa25      	add	r2, sp, #148	; 0x94
  402ba0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402ba2:	980c      	ldr	r0, [sp, #48]	; 0x30
  402ba4:	f002 fc3a 	bl	40541c <__ssprint_r>
  402ba8:	2800      	cmp	r0, #0
  402baa:	f47f ab9f 	bne.w	4022ec <_svfprintf_r+0x1a4>
  402bae:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402bb0:	46c8      	mov	r8, r9
  402bb2:	e4a9      	b.n	402508 <_svfprintf_r+0x3c0>
  402bb4:	aa25      	add	r2, sp, #148	; 0x94
  402bb6:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402bb8:	980c      	ldr	r0, [sp, #48]	; 0x30
  402bba:	f002 fc2f 	bl	40541c <__ssprint_r>
  402bbe:	2800      	cmp	r0, #0
  402bc0:	f43f aceb 	beq.w	40259a <_svfprintf_r+0x452>
  402bc4:	f7ff bb92 	b.w	4022ec <_svfprintf_r+0x1a4>
  402bc8:	f8dd b01c 	ldr.w	fp, [sp, #28]
  402bcc:	2b01      	cmp	r3, #1
  402bce:	f000 8134 	beq.w	402e3a <_svfprintf_r+0xcf2>
  402bd2:	2b02      	cmp	r3, #2
  402bd4:	d125      	bne.n	402c22 <_svfprintf_r+0xada>
  402bd6:	f8cd b01c 	str.w	fp, [sp, #28]
  402bda:	2400      	movs	r4, #0
  402bdc:	2500      	movs	r5, #0
  402bde:	e61e      	b.n	40281e <_svfprintf_r+0x6d6>
  402be0:	aa25      	add	r2, sp, #148	; 0x94
  402be2:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402be4:	980c      	ldr	r0, [sp, #48]	; 0x30
  402be6:	f002 fc19 	bl	40541c <__ssprint_r>
  402bea:	2800      	cmp	r0, #0
  402bec:	f47f ab7e 	bne.w	4022ec <_svfprintf_r+0x1a4>
  402bf0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402bf2:	46c8      	mov	r8, r9
  402bf4:	e475      	b.n	4024e2 <_svfprintf_r+0x39a>
  402bf6:	aa25      	add	r2, sp, #148	; 0x94
  402bf8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402bfa:	980c      	ldr	r0, [sp, #48]	; 0x30
  402bfc:	f002 fc0e 	bl	40541c <__ssprint_r>
  402c00:	2800      	cmp	r0, #0
  402c02:	f47f ab73 	bne.w	4022ec <_svfprintf_r+0x1a4>
  402c06:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402c08:	46c8      	mov	r8, r9
  402c0a:	e41b      	b.n	402444 <_svfprintf_r+0x2fc>
  402c0c:	aa25      	add	r2, sp, #148	; 0x94
  402c0e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402c10:	980c      	ldr	r0, [sp, #48]	; 0x30
  402c12:	f002 fc03 	bl	40541c <__ssprint_r>
  402c16:	2800      	cmp	r0, #0
  402c18:	f47f ab68 	bne.w	4022ec <_svfprintf_r+0x1a4>
  402c1c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402c1e:	46c8      	mov	r8, r9
  402c20:	e420      	b.n	402464 <_svfprintf_r+0x31c>
  402c22:	f8cd b01c 	str.w	fp, [sp, #28]
  402c26:	2400      	movs	r4, #0
  402c28:	2500      	movs	r5, #0
  402c2a:	4649      	mov	r1, r9
  402c2c:	e000      	b.n	402c30 <_svfprintf_r+0xae8>
  402c2e:	4631      	mov	r1, r6
  402c30:	08e2      	lsrs	r2, r4, #3
  402c32:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  402c36:	08e8      	lsrs	r0, r5, #3
  402c38:	f004 0307 	and.w	r3, r4, #7
  402c3c:	4605      	mov	r5, r0
  402c3e:	4614      	mov	r4, r2
  402c40:	3330      	adds	r3, #48	; 0x30
  402c42:	ea54 0205 	orrs.w	r2, r4, r5
  402c46:	f801 3c01 	strb.w	r3, [r1, #-1]
  402c4a:	f101 36ff 	add.w	r6, r1, #4294967295
  402c4e:	d1ee      	bne.n	402c2e <_svfprintf_r+0xae6>
  402c50:	9a07      	ldr	r2, [sp, #28]
  402c52:	07d2      	lsls	r2, r2, #31
  402c54:	f57f adf3 	bpl.w	40283e <_svfprintf_r+0x6f6>
  402c58:	2b30      	cmp	r3, #48	; 0x30
  402c5a:	f43f adf0 	beq.w	40283e <_svfprintf_r+0x6f6>
  402c5e:	3902      	subs	r1, #2
  402c60:	2330      	movs	r3, #48	; 0x30
  402c62:	f806 3c01 	strb.w	r3, [r6, #-1]
  402c66:	eba9 0301 	sub.w	r3, r9, r1
  402c6a:	930e      	str	r3, [sp, #56]	; 0x38
  402c6c:	460e      	mov	r6, r1
  402c6e:	f7ff bb7b 	b.w	402368 <_svfprintf_r+0x220>
  402c72:	991f      	ldr	r1, [sp, #124]	; 0x7c
  402c74:	2900      	cmp	r1, #0
  402c76:	f340 822e 	ble.w	4030d6 <_svfprintf_r+0xf8e>
  402c7a:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402c7c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402c7e:	4293      	cmp	r3, r2
  402c80:	bfa8      	it	ge
  402c82:	4613      	movge	r3, r2
  402c84:	2b00      	cmp	r3, #0
  402c86:	461f      	mov	r7, r3
  402c88:	dd0d      	ble.n	402ca6 <_svfprintf_r+0xb5e>
  402c8a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402c8c:	f8c8 6000 	str.w	r6, [r8]
  402c90:	3301      	adds	r3, #1
  402c92:	443c      	add	r4, r7
  402c94:	2b07      	cmp	r3, #7
  402c96:	9427      	str	r4, [sp, #156]	; 0x9c
  402c98:	f8c8 7004 	str.w	r7, [r8, #4]
  402c9c:	9326      	str	r3, [sp, #152]	; 0x98
  402c9e:	f300 831f 	bgt.w	4032e0 <_svfprintf_r+0x1198>
  402ca2:	f108 0808 	add.w	r8, r8, #8
  402ca6:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402ca8:	2f00      	cmp	r7, #0
  402caa:	bfa8      	it	ge
  402cac:	1bdb      	subge	r3, r3, r7
  402cae:	2b00      	cmp	r3, #0
  402cb0:	461f      	mov	r7, r3
  402cb2:	f340 80d6 	ble.w	402e62 <_svfprintf_r+0xd1a>
  402cb6:	2f10      	cmp	r7, #16
  402cb8:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402cba:	4d31      	ldr	r5, [pc, #196]	; (402d80 <_svfprintf_r+0xc38>)
  402cbc:	f340 81ed 	ble.w	40309a <_svfprintf_r+0xf52>
  402cc0:	4642      	mov	r2, r8
  402cc2:	4621      	mov	r1, r4
  402cc4:	46b0      	mov	r8, r6
  402cc6:	f04f 0b10 	mov.w	fp, #16
  402cca:	462e      	mov	r6, r5
  402ccc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402cce:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402cd0:	e004      	b.n	402cdc <_svfprintf_r+0xb94>
  402cd2:	3208      	adds	r2, #8
  402cd4:	3f10      	subs	r7, #16
  402cd6:	2f10      	cmp	r7, #16
  402cd8:	f340 81db 	ble.w	403092 <_svfprintf_r+0xf4a>
  402cdc:	3301      	adds	r3, #1
  402cde:	3110      	adds	r1, #16
  402ce0:	2b07      	cmp	r3, #7
  402ce2:	9127      	str	r1, [sp, #156]	; 0x9c
  402ce4:	9326      	str	r3, [sp, #152]	; 0x98
  402ce6:	e882 0840 	stmia.w	r2, {r6, fp}
  402cea:	ddf2      	ble.n	402cd2 <_svfprintf_r+0xb8a>
  402cec:	aa25      	add	r2, sp, #148	; 0x94
  402cee:	4629      	mov	r1, r5
  402cf0:	4620      	mov	r0, r4
  402cf2:	f002 fb93 	bl	40541c <__ssprint_r>
  402cf6:	2800      	cmp	r0, #0
  402cf8:	f47f aaf8 	bne.w	4022ec <_svfprintf_r+0x1a4>
  402cfc:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402cfe:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402d00:	464a      	mov	r2, r9
  402d02:	e7e7      	b.n	402cd4 <_svfprintf_r+0xb8c>
  402d04:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402d06:	930e      	str	r3, [sp, #56]	; 0x38
  402d08:	464e      	mov	r6, r9
  402d0a:	f7ff bb2d 	b.w	402368 <_svfprintf_r+0x220>
  402d0e:	2d00      	cmp	r5, #0
  402d10:	bf08      	it	eq
  402d12:	2c0a      	cmpeq	r4, #10
  402d14:	f0c0 808f 	bcc.w	402e36 <_svfprintf_r+0xcee>
  402d18:	464e      	mov	r6, r9
  402d1a:	4620      	mov	r0, r4
  402d1c:	4629      	mov	r1, r5
  402d1e:	220a      	movs	r2, #10
  402d20:	2300      	movs	r3, #0
  402d22:	f003 f8b5 	bl	405e90 <__aeabi_uldivmod>
  402d26:	3230      	adds	r2, #48	; 0x30
  402d28:	f806 2d01 	strb.w	r2, [r6, #-1]!
  402d2c:	4620      	mov	r0, r4
  402d2e:	4629      	mov	r1, r5
  402d30:	2300      	movs	r3, #0
  402d32:	220a      	movs	r2, #10
  402d34:	f003 f8ac 	bl	405e90 <__aeabi_uldivmod>
  402d38:	4604      	mov	r4, r0
  402d3a:	460d      	mov	r5, r1
  402d3c:	ea54 0305 	orrs.w	r3, r4, r5
  402d40:	d1eb      	bne.n	402d1a <_svfprintf_r+0xbd2>
  402d42:	eba9 0306 	sub.w	r3, r9, r6
  402d46:	930e      	str	r3, [sp, #56]	; 0x38
  402d48:	f7ff bb0e 	b.w	402368 <_svfprintf_r+0x220>
  402d4c:	aa25      	add	r2, sp, #148	; 0x94
  402d4e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402d50:	980c      	ldr	r0, [sp, #48]	; 0x30
  402d52:	f002 fb63 	bl	40541c <__ssprint_r>
  402d56:	2800      	cmp	r0, #0
  402d58:	f47f aac8 	bne.w	4022ec <_svfprintf_r+0x1a4>
  402d5c:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402d60:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402d62:	46c8      	mov	r8, r9
  402d64:	f7ff bb5e 	b.w	402424 <_svfprintf_r+0x2dc>
  402d68:	1e5e      	subs	r6, r3, #1
  402d6a:	2e00      	cmp	r6, #0
  402d6c:	f77f af0a 	ble.w	402b84 <_svfprintf_r+0xa3c>
  402d70:	2e10      	cmp	r6, #16
  402d72:	4d03      	ldr	r5, [pc, #12]	; (402d80 <_svfprintf_r+0xc38>)
  402d74:	dd22      	ble.n	402dbc <_svfprintf_r+0xc74>
  402d76:	4622      	mov	r2, r4
  402d78:	f04f 0b10 	mov.w	fp, #16
  402d7c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402d7e:	e006      	b.n	402d8e <_svfprintf_r+0xc46>
  402d80:	00406c78 	.word	0x00406c78
  402d84:	3e10      	subs	r6, #16
  402d86:	2e10      	cmp	r6, #16
  402d88:	f108 0808 	add.w	r8, r8, #8
  402d8c:	dd15      	ble.n	402dba <_svfprintf_r+0xc72>
  402d8e:	3701      	adds	r7, #1
  402d90:	3210      	adds	r2, #16
  402d92:	2f07      	cmp	r7, #7
  402d94:	9227      	str	r2, [sp, #156]	; 0x9c
  402d96:	9726      	str	r7, [sp, #152]	; 0x98
  402d98:	e888 0820 	stmia.w	r8, {r5, fp}
  402d9c:	ddf2      	ble.n	402d84 <_svfprintf_r+0xc3c>
  402d9e:	aa25      	add	r2, sp, #148	; 0x94
  402da0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402da2:	4620      	mov	r0, r4
  402da4:	f002 fb3a 	bl	40541c <__ssprint_r>
  402da8:	2800      	cmp	r0, #0
  402daa:	f47f aa9f 	bne.w	4022ec <_svfprintf_r+0x1a4>
  402dae:	3e10      	subs	r6, #16
  402db0:	2e10      	cmp	r6, #16
  402db2:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402db4:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402db6:	46c8      	mov	r8, r9
  402db8:	dce9      	bgt.n	402d8e <_svfprintf_r+0xc46>
  402dba:	4614      	mov	r4, r2
  402dbc:	3701      	adds	r7, #1
  402dbe:	4434      	add	r4, r6
  402dc0:	2f07      	cmp	r7, #7
  402dc2:	9427      	str	r4, [sp, #156]	; 0x9c
  402dc4:	9726      	str	r7, [sp, #152]	; 0x98
  402dc6:	e888 0060 	stmia.w	r8, {r5, r6}
  402dca:	f77f aed9 	ble.w	402b80 <_svfprintf_r+0xa38>
  402dce:	aa25      	add	r2, sp, #148	; 0x94
  402dd0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402dd2:	980c      	ldr	r0, [sp, #48]	; 0x30
  402dd4:	f002 fb22 	bl	40541c <__ssprint_r>
  402dd8:	2800      	cmp	r0, #0
  402dda:	f47f aa87 	bne.w	4022ec <_svfprintf_r+0x1a4>
  402dde:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402de0:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402de2:	46c8      	mov	r8, r9
  402de4:	e6ce      	b.n	402b84 <_svfprintf_r+0xa3c>
  402de6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402de8:	6814      	ldr	r4, [r2, #0]
  402dea:	4613      	mov	r3, r2
  402dec:	3304      	adds	r3, #4
  402dee:	17e5      	asrs	r5, r4, #31
  402df0:	930f      	str	r3, [sp, #60]	; 0x3c
  402df2:	4622      	mov	r2, r4
  402df4:	462b      	mov	r3, r5
  402df6:	e4fa      	b.n	4027ee <_svfprintf_r+0x6a6>
  402df8:	3204      	adds	r2, #4
  402dfa:	681c      	ldr	r4, [r3, #0]
  402dfc:	920f      	str	r2, [sp, #60]	; 0x3c
  402dfe:	2301      	movs	r3, #1
  402e00:	2500      	movs	r5, #0
  402e02:	f7ff ba94 	b.w	40232e <_svfprintf_r+0x1e6>
  402e06:	681c      	ldr	r4, [r3, #0]
  402e08:	3304      	adds	r3, #4
  402e0a:	930f      	str	r3, [sp, #60]	; 0x3c
  402e0c:	2500      	movs	r5, #0
  402e0e:	e421      	b.n	402654 <_svfprintf_r+0x50c>
  402e10:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402e12:	460a      	mov	r2, r1
  402e14:	3204      	adds	r2, #4
  402e16:	680c      	ldr	r4, [r1, #0]
  402e18:	920f      	str	r2, [sp, #60]	; 0x3c
  402e1a:	2500      	movs	r5, #0
  402e1c:	f7ff ba87 	b.w	40232e <_svfprintf_r+0x1e6>
  402e20:	4614      	mov	r4, r2
  402e22:	3301      	adds	r3, #1
  402e24:	4434      	add	r4, r6
  402e26:	2b07      	cmp	r3, #7
  402e28:	9427      	str	r4, [sp, #156]	; 0x9c
  402e2a:	9326      	str	r3, [sp, #152]	; 0x98
  402e2c:	e888 0060 	stmia.w	r8, {r5, r6}
  402e30:	f77f ab68 	ble.w	402504 <_svfprintf_r+0x3bc>
  402e34:	e6b3      	b.n	402b9e <_svfprintf_r+0xa56>
  402e36:	f8dd b01c 	ldr.w	fp, [sp, #28]
  402e3a:	f8cd b01c 	str.w	fp, [sp, #28]
  402e3e:	ae42      	add	r6, sp, #264	; 0x108
  402e40:	3430      	adds	r4, #48	; 0x30
  402e42:	2301      	movs	r3, #1
  402e44:	f806 4d41 	strb.w	r4, [r6, #-65]!
  402e48:	930e      	str	r3, [sp, #56]	; 0x38
  402e4a:	f7ff ba8d 	b.w	402368 <_svfprintf_r+0x220>
  402e4e:	aa25      	add	r2, sp, #148	; 0x94
  402e50:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402e52:	980c      	ldr	r0, [sp, #48]	; 0x30
  402e54:	f002 fae2 	bl	40541c <__ssprint_r>
  402e58:	2800      	cmp	r0, #0
  402e5a:	f47f aa47 	bne.w	4022ec <_svfprintf_r+0x1a4>
  402e5e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402e60:	46c8      	mov	r8, r9
  402e62:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  402e64:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402e66:	429a      	cmp	r2, r3
  402e68:	db44      	blt.n	402ef4 <_svfprintf_r+0xdac>
  402e6a:	9b07      	ldr	r3, [sp, #28]
  402e6c:	07d9      	lsls	r1, r3, #31
  402e6e:	d441      	bmi.n	402ef4 <_svfprintf_r+0xdac>
  402e70:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402e72:	9812      	ldr	r0, [sp, #72]	; 0x48
  402e74:	1a9a      	subs	r2, r3, r2
  402e76:	1a1d      	subs	r5, r3, r0
  402e78:	4295      	cmp	r5, r2
  402e7a:	bfa8      	it	ge
  402e7c:	4615      	movge	r5, r2
  402e7e:	2d00      	cmp	r5, #0
  402e80:	dd0e      	ble.n	402ea0 <_svfprintf_r+0xd58>
  402e82:	9926      	ldr	r1, [sp, #152]	; 0x98
  402e84:	f8c8 5004 	str.w	r5, [r8, #4]
  402e88:	3101      	adds	r1, #1
  402e8a:	4406      	add	r6, r0
  402e8c:	442c      	add	r4, r5
  402e8e:	2907      	cmp	r1, #7
  402e90:	f8c8 6000 	str.w	r6, [r8]
  402e94:	9427      	str	r4, [sp, #156]	; 0x9c
  402e96:	9126      	str	r1, [sp, #152]	; 0x98
  402e98:	f300 823b 	bgt.w	403312 <_svfprintf_r+0x11ca>
  402e9c:	f108 0808 	add.w	r8, r8, #8
  402ea0:	2d00      	cmp	r5, #0
  402ea2:	bfac      	ite	ge
  402ea4:	1b56      	subge	r6, r2, r5
  402ea6:	4616      	movlt	r6, r2
  402ea8:	2e00      	cmp	r6, #0
  402eaa:	f77f ab2d 	ble.w	402508 <_svfprintf_r+0x3c0>
  402eae:	2e10      	cmp	r6, #16
  402eb0:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402eb2:	4db0      	ldr	r5, [pc, #704]	; (403174 <_svfprintf_r+0x102c>)
  402eb4:	ddb5      	ble.n	402e22 <_svfprintf_r+0xcda>
  402eb6:	4622      	mov	r2, r4
  402eb8:	2710      	movs	r7, #16
  402eba:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  402ebe:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  402ec0:	e004      	b.n	402ecc <_svfprintf_r+0xd84>
  402ec2:	f108 0808 	add.w	r8, r8, #8
  402ec6:	3e10      	subs	r6, #16
  402ec8:	2e10      	cmp	r6, #16
  402eca:	dda9      	ble.n	402e20 <_svfprintf_r+0xcd8>
  402ecc:	3301      	adds	r3, #1
  402ece:	3210      	adds	r2, #16
  402ed0:	2b07      	cmp	r3, #7
  402ed2:	9227      	str	r2, [sp, #156]	; 0x9c
  402ed4:	9326      	str	r3, [sp, #152]	; 0x98
  402ed6:	e888 00a0 	stmia.w	r8, {r5, r7}
  402eda:	ddf2      	ble.n	402ec2 <_svfprintf_r+0xd7a>
  402edc:	aa25      	add	r2, sp, #148	; 0x94
  402ede:	4621      	mov	r1, r4
  402ee0:	4658      	mov	r0, fp
  402ee2:	f002 fa9b 	bl	40541c <__ssprint_r>
  402ee6:	2800      	cmp	r0, #0
  402ee8:	f47f aa00 	bne.w	4022ec <_svfprintf_r+0x1a4>
  402eec:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402eee:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402ef0:	46c8      	mov	r8, r9
  402ef2:	e7e8      	b.n	402ec6 <_svfprintf_r+0xd7e>
  402ef4:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402ef6:	9819      	ldr	r0, [sp, #100]	; 0x64
  402ef8:	991a      	ldr	r1, [sp, #104]	; 0x68
  402efa:	f8c8 1000 	str.w	r1, [r8]
  402efe:	3301      	adds	r3, #1
  402f00:	4404      	add	r4, r0
  402f02:	2b07      	cmp	r3, #7
  402f04:	9427      	str	r4, [sp, #156]	; 0x9c
  402f06:	f8c8 0004 	str.w	r0, [r8, #4]
  402f0a:	9326      	str	r3, [sp, #152]	; 0x98
  402f0c:	f300 81f5 	bgt.w	4032fa <_svfprintf_r+0x11b2>
  402f10:	f108 0808 	add.w	r8, r8, #8
  402f14:	e7ac      	b.n	402e70 <_svfprintf_r+0xd28>
  402f16:	9b07      	ldr	r3, [sp, #28]
  402f18:	07da      	lsls	r2, r3, #31
  402f1a:	f53f adfe 	bmi.w	402b1a <_svfprintf_r+0x9d2>
  402f1e:	3701      	adds	r7, #1
  402f20:	3401      	adds	r4, #1
  402f22:	2301      	movs	r3, #1
  402f24:	2f07      	cmp	r7, #7
  402f26:	9427      	str	r4, [sp, #156]	; 0x9c
  402f28:	9726      	str	r7, [sp, #152]	; 0x98
  402f2a:	f8c8 6000 	str.w	r6, [r8]
  402f2e:	f8c8 3004 	str.w	r3, [r8, #4]
  402f32:	f77f ae25 	ble.w	402b80 <_svfprintf_r+0xa38>
  402f36:	e74a      	b.n	402dce <_svfprintf_r+0xc86>
  402f38:	aa25      	add	r2, sp, #148	; 0x94
  402f3a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402f3c:	980c      	ldr	r0, [sp, #48]	; 0x30
  402f3e:	f002 fa6d 	bl	40541c <__ssprint_r>
  402f42:	2800      	cmp	r0, #0
  402f44:	f47f a9d2 	bne.w	4022ec <_svfprintf_r+0x1a4>
  402f48:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402f4a:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402f4c:	46c8      	mov	r8, r9
  402f4e:	e5f2      	b.n	402b36 <_svfprintf_r+0x9ee>
  402f50:	aa25      	add	r2, sp, #148	; 0x94
  402f52:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402f54:	980c      	ldr	r0, [sp, #48]	; 0x30
  402f56:	f002 fa61 	bl	40541c <__ssprint_r>
  402f5a:	2800      	cmp	r0, #0
  402f5c:	f47f a9c6 	bne.w	4022ec <_svfprintf_r+0x1a4>
  402f60:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402f62:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402f64:	46c8      	mov	r8, r9
  402f66:	e5f5      	b.n	402b54 <_svfprintf_r+0xa0c>
  402f68:	464e      	mov	r6, r9
  402f6a:	f7ff b9fd 	b.w	402368 <_svfprintf_r+0x220>
  402f6e:	aa25      	add	r2, sp, #148	; 0x94
  402f70:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402f72:	980c      	ldr	r0, [sp, #48]	; 0x30
  402f74:	f002 fa52 	bl	40541c <__ssprint_r>
  402f78:	2800      	cmp	r0, #0
  402f7a:	f47f a9b7 	bne.w	4022ec <_svfprintf_r+0x1a4>
  402f7e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402f80:	46c8      	mov	r8, r9
  402f82:	f7ff ba72 	b.w	40246a <_svfprintf_r+0x322>
  402f86:	9c15      	ldr	r4, [sp, #84]	; 0x54
  402f88:	4622      	mov	r2, r4
  402f8a:	4620      	mov	r0, r4
  402f8c:	9c14      	ldr	r4, [sp, #80]	; 0x50
  402f8e:	4623      	mov	r3, r4
  402f90:	4621      	mov	r1, r4
  402f92:	f002 ff3f 	bl	405e14 <__aeabi_dcmpun>
  402f96:	2800      	cmp	r0, #0
  402f98:	f040 8286 	bne.w	4034a8 <_svfprintf_r+0x1360>
  402f9c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402f9e:	3301      	adds	r3, #1
  402fa0:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402fa2:	f023 0320 	bic.w	r3, r3, #32
  402fa6:	930e      	str	r3, [sp, #56]	; 0x38
  402fa8:	f000 81e2 	beq.w	403370 <_svfprintf_r+0x1228>
  402fac:	2b47      	cmp	r3, #71	; 0x47
  402fae:	f000 811e 	beq.w	4031ee <_svfprintf_r+0x10a6>
  402fb2:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
  402fb6:	9307      	str	r3, [sp, #28]
  402fb8:	9b14      	ldr	r3, [sp, #80]	; 0x50
  402fba:	1e1f      	subs	r7, r3, #0
  402fbc:	9b15      	ldr	r3, [sp, #84]	; 0x54
  402fbe:	9308      	str	r3, [sp, #32]
  402fc0:	bfbb      	ittet	lt
  402fc2:	463b      	movlt	r3, r7
  402fc4:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
  402fc8:	2300      	movge	r3, #0
  402fca:	232d      	movlt	r3, #45	; 0x2d
  402fcc:	9310      	str	r3, [sp, #64]	; 0x40
  402fce:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402fd0:	2b66      	cmp	r3, #102	; 0x66
  402fd2:	f000 81bb 	beq.w	40334c <_svfprintf_r+0x1204>
  402fd6:	2b46      	cmp	r3, #70	; 0x46
  402fd8:	f000 80df 	beq.w	40319a <_svfprintf_r+0x1052>
  402fdc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402fde:	9a08      	ldr	r2, [sp, #32]
  402fe0:	2b45      	cmp	r3, #69	; 0x45
  402fe2:	bf0c      	ite	eq
  402fe4:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
  402fe6:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
  402fe8:	a823      	add	r0, sp, #140	; 0x8c
  402fea:	a920      	add	r1, sp, #128	; 0x80
  402fec:	bf08      	it	eq
  402fee:	1c5d      	addeq	r5, r3, #1
  402ff0:	9004      	str	r0, [sp, #16]
  402ff2:	9103      	str	r1, [sp, #12]
  402ff4:	a81f      	add	r0, sp, #124	; 0x7c
  402ff6:	2102      	movs	r1, #2
  402ff8:	463b      	mov	r3, r7
  402ffa:	9002      	str	r0, [sp, #8]
  402ffc:	9501      	str	r5, [sp, #4]
  402ffe:	9100      	str	r1, [sp, #0]
  403000:	980c      	ldr	r0, [sp, #48]	; 0x30
  403002:	f000 fb75 	bl	4036f0 <_dtoa_r>
  403006:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403008:	2b67      	cmp	r3, #103	; 0x67
  40300a:	4606      	mov	r6, r0
  40300c:	f040 81e0 	bne.w	4033d0 <_svfprintf_r+0x1288>
  403010:	f01b 0f01 	tst.w	fp, #1
  403014:	f000 8246 	beq.w	4034a4 <_svfprintf_r+0x135c>
  403018:	1974      	adds	r4, r6, r5
  40301a:	9a16      	ldr	r2, [sp, #88]	; 0x58
  40301c:	9808      	ldr	r0, [sp, #32]
  40301e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  403020:	4639      	mov	r1, r7
  403022:	f002 fec5 	bl	405db0 <__aeabi_dcmpeq>
  403026:	2800      	cmp	r0, #0
  403028:	f040 8165 	bne.w	4032f6 <_svfprintf_r+0x11ae>
  40302c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  40302e:	42a3      	cmp	r3, r4
  403030:	d206      	bcs.n	403040 <_svfprintf_r+0xef8>
  403032:	2130      	movs	r1, #48	; 0x30
  403034:	1c5a      	adds	r2, r3, #1
  403036:	9223      	str	r2, [sp, #140]	; 0x8c
  403038:	7019      	strb	r1, [r3, #0]
  40303a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  40303c:	429c      	cmp	r4, r3
  40303e:	d8f9      	bhi.n	403034 <_svfprintf_r+0xeec>
  403040:	1b9b      	subs	r3, r3, r6
  403042:	9313      	str	r3, [sp, #76]	; 0x4c
  403044:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403046:	2b47      	cmp	r3, #71	; 0x47
  403048:	f000 80e9 	beq.w	40321e <_svfprintf_r+0x10d6>
  40304c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40304e:	2b65      	cmp	r3, #101	; 0x65
  403050:	f340 81cd 	ble.w	4033ee <_svfprintf_r+0x12a6>
  403054:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403056:	2b66      	cmp	r3, #102	; 0x66
  403058:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  40305a:	9312      	str	r3, [sp, #72]	; 0x48
  40305c:	f000 819e 	beq.w	40339c <_svfprintf_r+0x1254>
  403060:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403062:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403064:	4619      	mov	r1, r3
  403066:	4291      	cmp	r1, r2
  403068:	f300 818a 	bgt.w	403380 <_svfprintf_r+0x1238>
  40306c:	f01b 0f01 	tst.w	fp, #1
  403070:	f040 8213 	bne.w	40349a <_svfprintf_r+0x1352>
  403074:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  403078:	9308      	str	r3, [sp, #32]
  40307a:	2367      	movs	r3, #103	; 0x67
  40307c:	920e      	str	r2, [sp, #56]	; 0x38
  40307e:	9311      	str	r3, [sp, #68]	; 0x44
  403080:	9b10      	ldr	r3, [sp, #64]	; 0x40
  403082:	2b00      	cmp	r3, #0
  403084:	f040 80c4 	bne.w	403210 <_svfprintf_r+0x10c8>
  403088:	930a      	str	r3, [sp, #40]	; 0x28
  40308a:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  40308e:	f7ff b973 	b.w	402378 <_svfprintf_r+0x230>
  403092:	4635      	mov	r5, r6
  403094:	460c      	mov	r4, r1
  403096:	4646      	mov	r6, r8
  403098:	4690      	mov	r8, r2
  40309a:	3301      	adds	r3, #1
  40309c:	443c      	add	r4, r7
  40309e:	2b07      	cmp	r3, #7
  4030a0:	9427      	str	r4, [sp, #156]	; 0x9c
  4030a2:	9326      	str	r3, [sp, #152]	; 0x98
  4030a4:	e888 00a0 	stmia.w	r8, {r5, r7}
  4030a8:	f73f aed1 	bgt.w	402e4e <_svfprintf_r+0xd06>
  4030ac:	f108 0808 	add.w	r8, r8, #8
  4030b0:	e6d7      	b.n	402e62 <_svfprintf_r+0xd1a>
  4030b2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4030b4:	6813      	ldr	r3, [r2, #0]
  4030b6:	3204      	adds	r2, #4
  4030b8:	920f      	str	r2, [sp, #60]	; 0x3c
  4030ba:	9a09      	ldr	r2, [sp, #36]	; 0x24
  4030bc:	601a      	str	r2, [r3, #0]
  4030be:	f7ff b86a 	b.w	402196 <_svfprintf_r+0x4e>
  4030c2:	aa25      	add	r2, sp, #148	; 0x94
  4030c4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4030c6:	980c      	ldr	r0, [sp, #48]	; 0x30
  4030c8:	f002 f9a8 	bl	40541c <__ssprint_r>
  4030cc:	2800      	cmp	r0, #0
  4030ce:	f47f a90d 	bne.w	4022ec <_svfprintf_r+0x1a4>
  4030d2:	46c8      	mov	r8, r9
  4030d4:	e48d      	b.n	4029f2 <_svfprintf_r+0x8aa>
  4030d6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4030d8:	4a27      	ldr	r2, [pc, #156]	; (403178 <_svfprintf_r+0x1030>)
  4030da:	f8c8 2000 	str.w	r2, [r8]
  4030de:	3301      	adds	r3, #1
  4030e0:	3401      	adds	r4, #1
  4030e2:	2201      	movs	r2, #1
  4030e4:	2b07      	cmp	r3, #7
  4030e6:	9427      	str	r4, [sp, #156]	; 0x9c
  4030e8:	9326      	str	r3, [sp, #152]	; 0x98
  4030ea:	f8c8 2004 	str.w	r2, [r8, #4]
  4030ee:	dc72      	bgt.n	4031d6 <_svfprintf_r+0x108e>
  4030f0:	f108 0808 	add.w	r8, r8, #8
  4030f4:	b929      	cbnz	r1, 403102 <_svfprintf_r+0xfba>
  4030f6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4030f8:	b91b      	cbnz	r3, 403102 <_svfprintf_r+0xfba>
  4030fa:	9b07      	ldr	r3, [sp, #28]
  4030fc:	07d8      	lsls	r0, r3, #31
  4030fe:	f57f aa03 	bpl.w	402508 <_svfprintf_r+0x3c0>
  403102:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403104:	9819      	ldr	r0, [sp, #100]	; 0x64
  403106:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  403108:	f8c8 2000 	str.w	r2, [r8]
  40310c:	3301      	adds	r3, #1
  40310e:	4602      	mov	r2, r0
  403110:	4422      	add	r2, r4
  403112:	2b07      	cmp	r3, #7
  403114:	9227      	str	r2, [sp, #156]	; 0x9c
  403116:	f8c8 0004 	str.w	r0, [r8, #4]
  40311a:	9326      	str	r3, [sp, #152]	; 0x98
  40311c:	f300 818d 	bgt.w	40343a <_svfprintf_r+0x12f2>
  403120:	f108 0808 	add.w	r8, r8, #8
  403124:	2900      	cmp	r1, #0
  403126:	f2c0 8165 	blt.w	4033f4 <_svfprintf_r+0x12ac>
  40312a:	9913      	ldr	r1, [sp, #76]	; 0x4c
  40312c:	f8c8 6000 	str.w	r6, [r8]
  403130:	3301      	adds	r3, #1
  403132:	188c      	adds	r4, r1, r2
  403134:	2b07      	cmp	r3, #7
  403136:	9427      	str	r4, [sp, #156]	; 0x9c
  403138:	9326      	str	r3, [sp, #152]	; 0x98
  40313a:	f8c8 1004 	str.w	r1, [r8, #4]
  40313e:	f77f a9e1 	ble.w	402504 <_svfprintf_r+0x3bc>
  403142:	e52c      	b.n	402b9e <_svfprintf_r+0xa56>
  403144:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403146:	9909      	ldr	r1, [sp, #36]	; 0x24
  403148:	6813      	ldr	r3, [r2, #0]
  40314a:	17cd      	asrs	r5, r1, #31
  40314c:	4608      	mov	r0, r1
  40314e:	3204      	adds	r2, #4
  403150:	4629      	mov	r1, r5
  403152:	920f      	str	r2, [sp, #60]	; 0x3c
  403154:	e9c3 0100 	strd	r0, r1, [r3]
  403158:	f7ff b81d 	b.w	402196 <_svfprintf_r+0x4e>
  40315c:	aa25      	add	r2, sp, #148	; 0x94
  40315e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403160:	980c      	ldr	r0, [sp, #48]	; 0x30
  403162:	f002 f95b 	bl	40541c <__ssprint_r>
  403166:	2800      	cmp	r0, #0
  403168:	f47f a8c0 	bne.w	4022ec <_svfprintf_r+0x1a4>
  40316c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40316e:	46c8      	mov	r8, r9
  403170:	e458      	b.n	402a24 <_svfprintf_r+0x8dc>
  403172:	bf00      	nop
  403174:	00406c78 	.word	0x00406c78
  403178:	00406c64 	.word	0x00406c64
  40317c:	2140      	movs	r1, #64	; 0x40
  40317e:	980c      	ldr	r0, [sp, #48]	; 0x30
  403180:	f001 fa0c 	bl	40459c <_malloc_r>
  403184:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403186:	6010      	str	r0, [r2, #0]
  403188:	6110      	str	r0, [r2, #16]
  40318a:	2800      	cmp	r0, #0
  40318c:	f000 81f2 	beq.w	403574 <_svfprintf_r+0x142c>
  403190:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403192:	2340      	movs	r3, #64	; 0x40
  403194:	6153      	str	r3, [r2, #20]
  403196:	f7fe bfee 	b.w	402176 <_svfprintf_r+0x2e>
  40319a:	a823      	add	r0, sp, #140	; 0x8c
  40319c:	a920      	add	r1, sp, #128	; 0x80
  40319e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  4031a0:	9004      	str	r0, [sp, #16]
  4031a2:	9103      	str	r1, [sp, #12]
  4031a4:	a81f      	add	r0, sp, #124	; 0x7c
  4031a6:	2103      	movs	r1, #3
  4031a8:	9002      	str	r0, [sp, #8]
  4031aa:	9a08      	ldr	r2, [sp, #32]
  4031ac:	9401      	str	r4, [sp, #4]
  4031ae:	463b      	mov	r3, r7
  4031b0:	9100      	str	r1, [sp, #0]
  4031b2:	980c      	ldr	r0, [sp, #48]	; 0x30
  4031b4:	f000 fa9c 	bl	4036f0 <_dtoa_r>
  4031b8:	4625      	mov	r5, r4
  4031ba:	4606      	mov	r6, r0
  4031bc:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4031be:	2b46      	cmp	r3, #70	; 0x46
  4031c0:	eb06 0405 	add.w	r4, r6, r5
  4031c4:	f47f af29 	bne.w	40301a <_svfprintf_r+0xed2>
  4031c8:	7833      	ldrb	r3, [r6, #0]
  4031ca:	2b30      	cmp	r3, #48	; 0x30
  4031cc:	f000 8178 	beq.w	4034c0 <_svfprintf_r+0x1378>
  4031d0:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
  4031d2:	442c      	add	r4, r5
  4031d4:	e721      	b.n	40301a <_svfprintf_r+0xed2>
  4031d6:	aa25      	add	r2, sp, #148	; 0x94
  4031d8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4031da:	980c      	ldr	r0, [sp, #48]	; 0x30
  4031dc:	f002 f91e 	bl	40541c <__ssprint_r>
  4031e0:	2800      	cmp	r0, #0
  4031e2:	f47f a883 	bne.w	4022ec <_svfprintf_r+0x1a4>
  4031e6:	991f      	ldr	r1, [sp, #124]	; 0x7c
  4031e8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4031ea:	46c8      	mov	r8, r9
  4031ec:	e782      	b.n	4030f4 <_svfprintf_r+0xfac>
  4031ee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4031f0:	2b00      	cmp	r3, #0
  4031f2:	bf08      	it	eq
  4031f4:	2301      	moveq	r3, #1
  4031f6:	930a      	str	r3, [sp, #40]	; 0x28
  4031f8:	e6db      	b.n	402fb2 <_svfprintf_r+0xe6a>
  4031fa:	4630      	mov	r0, r6
  4031fc:	940a      	str	r4, [sp, #40]	; 0x28
  4031fe:	f002 f89f 	bl	405340 <strlen>
  403202:	950f      	str	r5, [sp, #60]	; 0x3c
  403204:	900e      	str	r0, [sp, #56]	; 0x38
  403206:	f8cd b01c 	str.w	fp, [sp, #28]
  40320a:	4603      	mov	r3, r0
  40320c:	f7ff b9f9 	b.w	402602 <_svfprintf_r+0x4ba>
  403210:	272d      	movs	r7, #45	; 0x2d
  403212:	2300      	movs	r3, #0
  403214:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  403218:	930a      	str	r3, [sp, #40]	; 0x28
  40321a:	f7ff b8ae 	b.w	40237a <_svfprintf_r+0x232>
  40321e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  403220:	9312      	str	r3, [sp, #72]	; 0x48
  403222:	461a      	mov	r2, r3
  403224:	3303      	adds	r3, #3
  403226:	db04      	blt.n	403232 <_svfprintf_r+0x10ea>
  403228:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40322a:	4619      	mov	r1, r3
  40322c:	4291      	cmp	r1, r2
  40322e:	f6bf af17 	bge.w	403060 <_svfprintf_r+0xf18>
  403232:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403234:	3b02      	subs	r3, #2
  403236:	9311      	str	r3, [sp, #68]	; 0x44
  403238:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
  40323c:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
  403240:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403242:	3b01      	subs	r3, #1
  403244:	2b00      	cmp	r3, #0
  403246:	931f      	str	r3, [sp, #124]	; 0x7c
  403248:	bfbd      	ittte	lt
  40324a:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
  40324c:	f1c3 0301 	rsblt	r3, r3, #1
  403250:	222d      	movlt	r2, #45	; 0x2d
  403252:	222b      	movge	r2, #43	; 0x2b
  403254:	2b09      	cmp	r3, #9
  403256:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
  40325a:	f340 8116 	ble.w	40348a <_svfprintf_r+0x1342>
  40325e:	f10d 0493 	add.w	r4, sp, #147	; 0x93
  403262:	4620      	mov	r0, r4
  403264:	4dab      	ldr	r5, [pc, #684]	; (403514 <_svfprintf_r+0x13cc>)
  403266:	e000      	b.n	40326a <_svfprintf_r+0x1122>
  403268:	4610      	mov	r0, r2
  40326a:	fb85 1203 	smull	r1, r2, r5, r3
  40326e:	17d9      	asrs	r1, r3, #31
  403270:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
  403274:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  403278:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  40327c:	3230      	adds	r2, #48	; 0x30
  40327e:	2909      	cmp	r1, #9
  403280:	f800 2c01 	strb.w	r2, [r0, #-1]
  403284:	460b      	mov	r3, r1
  403286:	f100 32ff 	add.w	r2, r0, #4294967295
  40328a:	dced      	bgt.n	403268 <_svfprintf_r+0x1120>
  40328c:	3330      	adds	r3, #48	; 0x30
  40328e:	3802      	subs	r0, #2
  403290:	b2d9      	uxtb	r1, r3
  403292:	4284      	cmp	r4, r0
  403294:	f802 1c01 	strb.w	r1, [r2, #-1]
  403298:	f240 8165 	bls.w	403566 <_svfprintf_r+0x141e>
  40329c:	f10d 0086 	add.w	r0, sp, #134	; 0x86
  4032a0:	4613      	mov	r3, r2
  4032a2:	e001      	b.n	4032a8 <_svfprintf_r+0x1160>
  4032a4:	f813 1b01 	ldrb.w	r1, [r3], #1
  4032a8:	f800 1b01 	strb.w	r1, [r0], #1
  4032ac:	42a3      	cmp	r3, r4
  4032ae:	d1f9      	bne.n	4032a4 <_svfprintf_r+0x115c>
  4032b0:	3301      	adds	r3, #1
  4032b2:	1a9b      	subs	r3, r3, r2
  4032b4:	f10d 0286 	add.w	r2, sp, #134	; 0x86
  4032b8:	4413      	add	r3, r2
  4032ba:	aa21      	add	r2, sp, #132	; 0x84
  4032bc:	1a9b      	subs	r3, r3, r2
  4032be:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  4032c0:	931b      	str	r3, [sp, #108]	; 0x6c
  4032c2:	2a01      	cmp	r2, #1
  4032c4:	4413      	add	r3, r2
  4032c6:	930e      	str	r3, [sp, #56]	; 0x38
  4032c8:	f340 8119 	ble.w	4034fe <_svfprintf_r+0x13b6>
  4032cc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4032ce:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4032d0:	4413      	add	r3, r2
  4032d2:	930e      	str	r3, [sp, #56]	; 0x38
  4032d4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4032d8:	9308      	str	r3, [sp, #32]
  4032da:	2300      	movs	r3, #0
  4032dc:	9312      	str	r3, [sp, #72]	; 0x48
  4032de:	e6cf      	b.n	403080 <_svfprintf_r+0xf38>
  4032e0:	aa25      	add	r2, sp, #148	; 0x94
  4032e2:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4032e4:	980c      	ldr	r0, [sp, #48]	; 0x30
  4032e6:	f002 f899 	bl	40541c <__ssprint_r>
  4032ea:	2800      	cmp	r0, #0
  4032ec:	f47e affe 	bne.w	4022ec <_svfprintf_r+0x1a4>
  4032f0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4032f2:	46c8      	mov	r8, r9
  4032f4:	e4d7      	b.n	402ca6 <_svfprintf_r+0xb5e>
  4032f6:	4623      	mov	r3, r4
  4032f8:	e6a2      	b.n	403040 <_svfprintf_r+0xef8>
  4032fa:	aa25      	add	r2, sp, #148	; 0x94
  4032fc:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4032fe:	980c      	ldr	r0, [sp, #48]	; 0x30
  403300:	f002 f88c 	bl	40541c <__ssprint_r>
  403304:	2800      	cmp	r0, #0
  403306:	f47e aff1 	bne.w	4022ec <_svfprintf_r+0x1a4>
  40330a:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  40330c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40330e:	46c8      	mov	r8, r9
  403310:	e5ae      	b.n	402e70 <_svfprintf_r+0xd28>
  403312:	aa25      	add	r2, sp, #148	; 0x94
  403314:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403316:	980c      	ldr	r0, [sp, #48]	; 0x30
  403318:	f002 f880 	bl	40541c <__ssprint_r>
  40331c:	2800      	cmp	r0, #0
  40331e:	f47e afe5 	bne.w	4022ec <_svfprintf_r+0x1a4>
  403322:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  403324:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403326:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403328:	1a9a      	subs	r2, r3, r2
  40332a:	46c8      	mov	r8, r9
  40332c:	e5b8      	b.n	402ea0 <_svfprintf_r+0xd58>
  40332e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403330:	9612      	str	r6, [sp, #72]	; 0x48
  403332:	2b06      	cmp	r3, #6
  403334:	bf28      	it	cs
  403336:	2306      	movcs	r3, #6
  403338:	960a      	str	r6, [sp, #40]	; 0x28
  40333a:	4637      	mov	r7, r6
  40333c:	9308      	str	r3, [sp, #32]
  40333e:	950f      	str	r5, [sp, #60]	; 0x3c
  403340:	f8cd b01c 	str.w	fp, [sp, #28]
  403344:	930e      	str	r3, [sp, #56]	; 0x38
  403346:	4e74      	ldr	r6, [pc, #464]	; (403518 <_svfprintf_r+0x13d0>)
  403348:	f7ff b816 	b.w	402378 <_svfprintf_r+0x230>
  40334c:	a823      	add	r0, sp, #140	; 0x8c
  40334e:	a920      	add	r1, sp, #128	; 0x80
  403350:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  403352:	9004      	str	r0, [sp, #16]
  403354:	9103      	str	r1, [sp, #12]
  403356:	a81f      	add	r0, sp, #124	; 0x7c
  403358:	2103      	movs	r1, #3
  40335a:	9002      	str	r0, [sp, #8]
  40335c:	9a08      	ldr	r2, [sp, #32]
  40335e:	9501      	str	r5, [sp, #4]
  403360:	463b      	mov	r3, r7
  403362:	9100      	str	r1, [sp, #0]
  403364:	980c      	ldr	r0, [sp, #48]	; 0x30
  403366:	f000 f9c3 	bl	4036f0 <_dtoa_r>
  40336a:	4606      	mov	r6, r0
  40336c:	1944      	adds	r4, r0, r5
  40336e:	e72b      	b.n	4031c8 <_svfprintf_r+0x1080>
  403370:	2306      	movs	r3, #6
  403372:	930a      	str	r3, [sp, #40]	; 0x28
  403374:	e61d      	b.n	402fb2 <_svfprintf_r+0xe6a>
  403376:	272d      	movs	r7, #45	; 0x2d
  403378:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  40337c:	f7ff bacd 	b.w	40291a <_svfprintf_r+0x7d2>
  403380:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403382:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403384:	4413      	add	r3, r2
  403386:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403388:	930e      	str	r3, [sp, #56]	; 0x38
  40338a:	2a00      	cmp	r2, #0
  40338c:	f340 80b0 	ble.w	4034f0 <_svfprintf_r+0x13a8>
  403390:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403394:	9308      	str	r3, [sp, #32]
  403396:	2367      	movs	r3, #103	; 0x67
  403398:	9311      	str	r3, [sp, #68]	; 0x44
  40339a:	e671      	b.n	403080 <_svfprintf_r+0xf38>
  40339c:	2b00      	cmp	r3, #0
  40339e:	f340 80c3 	ble.w	403528 <_svfprintf_r+0x13e0>
  4033a2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4033a4:	2a00      	cmp	r2, #0
  4033a6:	f040 8099 	bne.w	4034dc <_svfprintf_r+0x1394>
  4033aa:	f01b 0f01 	tst.w	fp, #1
  4033ae:	f040 8095 	bne.w	4034dc <_svfprintf_r+0x1394>
  4033b2:	9308      	str	r3, [sp, #32]
  4033b4:	930e      	str	r3, [sp, #56]	; 0x38
  4033b6:	e663      	b.n	403080 <_svfprintf_r+0xf38>
  4033b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4033ba:	9308      	str	r3, [sp, #32]
  4033bc:	930e      	str	r3, [sp, #56]	; 0x38
  4033be:	900a      	str	r0, [sp, #40]	; 0x28
  4033c0:	950f      	str	r5, [sp, #60]	; 0x3c
  4033c2:	f8cd b01c 	str.w	fp, [sp, #28]
  4033c6:	9012      	str	r0, [sp, #72]	; 0x48
  4033c8:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4033cc:	f7fe bfd4 	b.w	402378 <_svfprintf_r+0x230>
  4033d0:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4033d2:	2b47      	cmp	r3, #71	; 0x47
  4033d4:	f47f ae20 	bne.w	403018 <_svfprintf_r+0xed0>
  4033d8:	f01b 0f01 	tst.w	fp, #1
  4033dc:	f47f aeee 	bne.w	4031bc <_svfprintf_r+0x1074>
  4033e0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  4033e2:	1b9b      	subs	r3, r3, r6
  4033e4:	9313      	str	r3, [sp, #76]	; 0x4c
  4033e6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4033e8:	2b47      	cmp	r3, #71	; 0x47
  4033ea:	f43f af18 	beq.w	40321e <_svfprintf_r+0x10d6>
  4033ee:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  4033f0:	9312      	str	r3, [sp, #72]	; 0x48
  4033f2:	e721      	b.n	403238 <_svfprintf_r+0x10f0>
  4033f4:	424f      	negs	r7, r1
  4033f6:	3110      	adds	r1, #16
  4033f8:	4d48      	ldr	r5, [pc, #288]	; (40351c <_svfprintf_r+0x13d4>)
  4033fa:	da2f      	bge.n	40345c <_svfprintf_r+0x1314>
  4033fc:	2410      	movs	r4, #16
  4033fe:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  403402:	e004      	b.n	40340e <_svfprintf_r+0x12c6>
  403404:	f108 0808 	add.w	r8, r8, #8
  403408:	3f10      	subs	r7, #16
  40340a:	2f10      	cmp	r7, #16
  40340c:	dd26      	ble.n	40345c <_svfprintf_r+0x1314>
  40340e:	3301      	adds	r3, #1
  403410:	3210      	adds	r2, #16
  403412:	2b07      	cmp	r3, #7
  403414:	9227      	str	r2, [sp, #156]	; 0x9c
  403416:	9326      	str	r3, [sp, #152]	; 0x98
  403418:	f8c8 5000 	str.w	r5, [r8]
  40341c:	f8c8 4004 	str.w	r4, [r8, #4]
  403420:	ddf0      	ble.n	403404 <_svfprintf_r+0x12bc>
  403422:	aa25      	add	r2, sp, #148	; 0x94
  403424:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403426:	4658      	mov	r0, fp
  403428:	f001 fff8 	bl	40541c <__ssprint_r>
  40342c:	2800      	cmp	r0, #0
  40342e:	f47e af5d 	bne.w	4022ec <_svfprintf_r+0x1a4>
  403432:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403434:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403436:	46c8      	mov	r8, r9
  403438:	e7e6      	b.n	403408 <_svfprintf_r+0x12c0>
  40343a:	aa25      	add	r2, sp, #148	; 0x94
  40343c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40343e:	980c      	ldr	r0, [sp, #48]	; 0x30
  403440:	f001 ffec 	bl	40541c <__ssprint_r>
  403444:	2800      	cmp	r0, #0
  403446:	f47e af51 	bne.w	4022ec <_svfprintf_r+0x1a4>
  40344a:	991f      	ldr	r1, [sp, #124]	; 0x7c
  40344c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40344e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403450:	46c8      	mov	r8, r9
  403452:	e667      	b.n	403124 <_svfprintf_r+0xfdc>
  403454:	2000      	movs	r0, #0
  403456:	900a      	str	r0, [sp, #40]	; 0x28
  403458:	f7fe bed0 	b.w	4021fc <_svfprintf_r+0xb4>
  40345c:	3301      	adds	r3, #1
  40345e:	443a      	add	r2, r7
  403460:	2b07      	cmp	r3, #7
  403462:	e888 00a0 	stmia.w	r8, {r5, r7}
  403466:	9227      	str	r2, [sp, #156]	; 0x9c
  403468:	9326      	str	r3, [sp, #152]	; 0x98
  40346a:	f108 0808 	add.w	r8, r8, #8
  40346e:	f77f ae5c 	ble.w	40312a <_svfprintf_r+0xfe2>
  403472:	aa25      	add	r2, sp, #148	; 0x94
  403474:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403476:	980c      	ldr	r0, [sp, #48]	; 0x30
  403478:	f001 ffd0 	bl	40541c <__ssprint_r>
  40347c:	2800      	cmp	r0, #0
  40347e:	f47e af35 	bne.w	4022ec <_svfprintf_r+0x1a4>
  403482:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403484:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403486:	46c8      	mov	r8, r9
  403488:	e64f      	b.n	40312a <_svfprintf_r+0xfe2>
  40348a:	3330      	adds	r3, #48	; 0x30
  40348c:	2230      	movs	r2, #48	; 0x30
  40348e:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
  403492:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
  403496:	ab22      	add	r3, sp, #136	; 0x88
  403498:	e70f      	b.n	4032ba <_svfprintf_r+0x1172>
  40349a:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40349c:	9a19      	ldr	r2, [sp, #100]	; 0x64
  40349e:	4413      	add	r3, r2
  4034a0:	930e      	str	r3, [sp, #56]	; 0x38
  4034a2:	e775      	b.n	403390 <_svfprintf_r+0x1248>
  4034a4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  4034a6:	e5cb      	b.n	403040 <_svfprintf_r+0xef8>
  4034a8:	9b14      	ldr	r3, [sp, #80]	; 0x50
  4034aa:	4e1d      	ldr	r6, [pc, #116]	; (403520 <_svfprintf_r+0x13d8>)
  4034ac:	2b00      	cmp	r3, #0
  4034ae:	bfb6      	itet	lt
  4034b0:	272d      	movlt	r7, #45	; 0x2d
  4034b2:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
  4034b6:	f88d 7077 	strblt.w	r7, [sp, #119]	; 0x77
  4034ba:	4b1a      	ldr	r3, [pc, #104]	; (403524 <_svfprintf_r+0x13dc>)
  4034bc:	f7ff ba2f 	b.w	40291e <_svfprintf_r+0x7d6>
  4034c0:	9a16      	ldr	r2, [sp, #88]	; 0x58
  4034c2:	9808      	ldr	r0, [sp, #32]
  4034c4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  4034c6:	4639      	mov	r1, r7
  4034c8:	f002 fc72 	bl	405db0 <__aeabi_dcmpeq>
  4034cc:	2800      	cmp	r0, #0
  4034ce:	f47f ae7f 	bne.w	4031d0 <_svfprintf_r+0x1088>
  4034d2:	f1c5 0501 	rsb	r5, r5, #1
  4034d6:	951f      	str	r5, [sp, #124]	; 0x7c
  4034d8:	442c      	add	r4, r5
  4034da:	e59e      	b.n	40301a <_svfprintf_r+0xed2>
  4034dc:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4034de:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4034e0:	4413      	add	r3, r2
  4034e2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4034e4:	441a      	add	r2, r3
  4034e6:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  4034ea:	920e      	str	r2, [sp, #56]	; 0x38
  4034ec:	9308      	str	r3, [sp, #32]
  4034ee:	e5c7      	b.n	403080 <_svfprintf_r+0xf38>
  4034f0:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4034f2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4034f4:	f1c3 0301 	rsb	r3, r3, #1
  4034f8:	441a      	add	r2, r3
  4034fa:	4613      	mov	r3, r2
  4034fc:	e7d0      	b.n	4034a0 <_svfprintf_r+0x1358>
  4034fe:	f01b 0301 	ands.w	r3, fp, #1
  403502:	9312      	str	r3, [sp, #72]	; 0x48
  403504:	f47f aee2 	bne.w	4032cc <_svfprintf_r+0x1184>
  403508:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40350a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  40350e:	9308      	str	r3, [sp, #32]
  403510:	e5b6      	b.n	403080 <_svfprintf_r+0xf38>
  403512:	bf00      	nop
  403514:	66666667 	.word	0x66666667
  403518:	00406c5c 	.word	0x00406c5c
  40351c:	00406c78 	.word	0x00406c78
  403520:	00406c30 	.word	0x00406c30
  403524:	00406c2c 	.word	0x00406c2c
  403528:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40352a:	b913      	cbnz	r3, 403532 <_svfprintf_r+0x13ea>
  40352c:	f01b 0f01 	tst.w	fp, #1
  403530:	d002      	beq.n	403538 <_svfprintf_r+0x13f0>
  403532:	9b19      	ldr	r3, [sp, #100]	; 0x64
  403534:	3301      	adds	r3, #1
  403536:	e7d4      	b.n	4034e2 <_svfprintf_r+0x139a>
  403538:	2301      	movs	r3, #1
  40353a:	e73a      	b.n	4033b2 <_svfprintf_r+0x126a>
  40353c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  40353e:	f89a 3001 	ldrb.w	r3, [sl, #1]
  403542:	6828      	ldr	r0, [r5, #0]
  403544:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
  403548:	900a      	str	r0, [sp, #40]	; 0x28
  40354a:	4628      	mov	r0, r5
  40354c:	3004      	adds	r0, #4
  40354e:	46a2      	mov	sl, r4
  403550:	900f      	str	r0, [sp, #60]	; 0x3c
  403552:	f7fe be51 	b.w	4021f8 <_svfprintf_r+0xb0>
  403556:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40355a:	f7ff b867 	b.w	40262c <_svfprintf_r+0x4e4>
  40355e:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403562:	f7ff ba15 	b.w	402990 <_svfprintf_r+0x848>
  403566:	f10d 0386 	add.w	r3, sp, #134	; 0x86
  40356a:	e6a6      	b.n	4032ba <_svfprintf_r+0x1172>
  40356c:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403570:	f7ff b8eb 	b.w	40274a <_svfprintf_r+0x602>
  403574:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403576:	230c      	movs	r3, #12
  403578:	6013      	str	r3, [r2, #0]
  40357a:	f04f 33ff 	mov.w	r3, #4294967295
  40357e:	9309      	str	r3, [sp, #36]	; 0x24
  403580:	f7fe bebd 	b.w	4022fe <_svfprintf_r+0x1b6>
  403584:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403588:	f7ff b99a 	b.w	4028c0 <_svfprintf_r+0x778>
  40358c:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403590:	f7ff b976 	b.w	402880 <_svfprintf_r+0x738>
  403594:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403598:	f7ff b959 	b.w	40284e <_svfprintf_r+0x706>
  40359c:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4035a0:	f7ff b912 	b.w	4027c8 <_svfprintf_r+0x680>

004035a4 <register_fini>:
  4035a4:	4b02      	ldr	r3, [pc, #8]	; (4035b0 <register_fini+0xc>)
  4035a6:	b113      	cbz	r3, 4035ae <register_fini+0xa>
  4035a8:	4802      	ldr	r0, [pc, #8]	; (4035b4 <register_fini+0x10>)
  4035aa:	f000 b805 	b.w	4035b8 <atexit>
  4035ae:	4770      	bx	lr
  4035b0:	00000000 	.word	0x00000000
  4035b4:	00404545 	.word	0x00404545

004035b8 <atexit>:
  4035b8:	2300      	movs	r3, #0
  4035ba:	4601      	mov	r1, r0
  4035bc:	461a      	mov	r2, r3
  4035be:	4618      	mov	r0, r3
  4035c0:	f001 bfaa 	b.w	405518 <__register_exitproc>

004035c4 <quorem>:
  4035c4:	6902      	ldr	r2, [r0, #16]
  4035c6:	690b      	ldr	r3, [r1, #16]
  4035c8:	4293      	cmp	r3, r2
  4035ca:	f300 808d 	bgt.w	4036e8 <quorem+0x124>
  4035ce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4035d2:	f103 38ff 	add.w	r8, r3, #4294967295
  4035d6:	f101 0714 	add.w	r7, r1, #20
  4035da:	f100 0b14 	add.w	fp, r0, #20
  4035de:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  4035e2:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  4035e6:	ea4f 0488 	mov.w	r4, r8, lsl #2
  4035ea:	b083      	sub	sp, #12
  4035ec:	3201      	adds	r2, #1
  4035ee:	fbb3 f9f2 	udiv	r9, r3, r2
  4035f2:	eb0b 0304 	add.w	r3, fp, r4
  4035f6:	9400      	str	r4, [sp, #0]
  4035f8:	eb07 0a04 	add.w	sl, r7, r4
  4035fc:	9301      	str	r3, [sp, #4]
  4035fe:	f1b9 0f00 	cmp.w	r9, #0
  403602:	d039      	beq.n	403678 <quorem+0xb4>
  403604:	2500      	movs	r5, #0
  403606:	462e      	mov	r6, r5
  403608:	46bc      	mov	ip, r7
  40360a:	46de      	mov	lr, fp
  40360c:	f85c 4b04 	ldr.w	r4, [ip], #4
  403610:	f8de 3000 	ldr.w	r3, [lr]
  403614:	b2a2      	uxth	r2, r4
  403616:	fb09 5502 	mla	r5, r9, r2, r5
  40361a:	0c22      	lsrs	r2, r4, #16
  40361c:	0c2c      	lsrs	r4, r5, #16
  40361e:	fb09 4202 	mla	r2, r9, r2, r4
  403622:	b2ad      	uxth	r5, r5
  403624:	1b75      	subs	r5, r6, r5
  403626:	b296      	uxth	r6, r2
  403628:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
  40362c:	fa15 f383 	uxtah	r3, r5, r3
  403630:	eb06 4623 	add.w	r6, r6, r3, asr #16
  403634:	b29b      	uxth	r3, r3
  403636:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  40363a:	45e2      	cmp	sl, ip
  40363c:	ea4f 4512 	mov.w	r5, r2, lsr #16
  403640:	f84e 3b04 	str.w	r3, [lr], #4
  403644:	ea4f 4626 	mov.w	r6, r6, asr #16
  403648:	d2e0      	bcs.n	40360c <quorem+0x48>
  40364a:	9b00      	ldr	r3, [sp, #0]
  40364c:	f85b 3003 	ldr.w	r3, [fp, r3]
  403650:	b993      	cbnz	r3, 403678 <quorem+0xb4>
  403652:	9c01      	ldr	r4, [sp, #4]
  403654:	1f23      	subs	r3, r4, #4
  403656:	459b      	cmp	fp, r3
  403658:	d20c      	bcs.n	403674 <quorem+0xb0>
  40365a:	f854 3c04 	ldr.w	r3, [r4, #-4]
  40365e:	b94b      	cbnz	r3, 403674 <quorem+0xb0>
  403660:	f1a4 0308 	sub.w	r3, r4, #8
  403664:	e002      	b.n	40366c <quorem+0xa8>
  403666:	681a      	ldr	r2, [r3, #0]
  403668:	3b04      	subs	r3, #4
  40366a:	b91a      	cbnz	r2, 403674 <quorem+0xb0>
  40366c:	459b      	cmp	fp, r3
  40366e:	f108 38ff 	add.w	r8, r8, #4294967295
  403672:	d3f8      	bcc.n	403666 <quorem+0xa2>
  403674:	f8c0 8010 	str.w	r8, [r0, #16]
  403678:	4604      	mov	r4, r0
  40367a:	f001 fd35 	bl	4050e8 <__mcmp>
  40367e:	2800      	cmp	r0, #0
  403680:	db2e      	blt.n	4036e0 <quorem+0x11c>
  403682:	f109 0901 	add.w	r9, r9, #1
  403686:	465d      	mov	r5, fp
  403688:	2300      	movs	r3, #0
  40368a:	f857 1b04 	ldr.w	r1, [r7], #4
  40368e:	6828      	ldr	r0, [r5, #0]
  403690:	b28a      	uxth	r2, r1
  403692:	1a9a      	subs	r2, r3, r2
  403694:	0c0b      	lsrs	r3, r1, #16
  403696:	fa12 f280 	uxtah	r2, r2, r0
  40369a:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
  40369e:	eb03 4322 	add.w	r3, r3, r2, asr #16
  4036a2:	b292      	uxth	r2, r2
  4036a4:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  4036a8:	45ba      	cmp	sl, r7
  4036aa:	f845 2b04 	str.w	r2, [r5], #4
  4036ae:	ea4f 4323 	mov.w	r3, r3, asr #16
  4036b2:	d2ea      	bcs.n	40368a <quorem+0xc6>
  4036b4:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  4036b8:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  4036bc:	b982      	cbnz	r2, 4036e0 <quorem+0x11c>
  4036be:	1f1a      	subs	r2, r3, #4
  4036c0:	4593      	cmp	fp, r2
  4036c2:	d20b      	bcs.n	4036dc <quorem+0x118>
  4036c4:	f853 2c04 	ldr.w	r2, [r3, #-4]
  4036c8:	b942      	cbnz	r2, 4036dc <quorem+0x118>
  4036ca:	3b08      	subs	r3, #8
  4036cc:	e002      	b.n	4036d4 <quorem+0x110>
  4036ce:	681a      	ldr	r2, [r3, #0]
  4036d0:	3b04      	subs	r3, #4
  4036d2:	b91a      	cbnz	r2, 4036dc <quorem+0x118>
  4036d4:	459b      	cmp	fp, r3
  4036d6:	f108 38ff 	add.w	r8, r8, #4294967295
  4036da:	d3f8      	bcc.n	4036ce <quorem+0x10a>
  4036dc:	f8c4 8010 	str.w	r8, [r4, #16]
  4036e0:	4648      	mov	r0, r9
  4036e2:	b003      	add	sp, #12
  4036e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4036e8:	2000      	movs	r0, #0
  4036ea:	4770      	bx	lr
  4036ec:	0000      	movs	r0, r0
	...

004036f0 <_dtoa_r>:
  4036f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4036f4:	6c01      	ldr	r1, [r0, #64]	; 0x40
  4036f6:	b09b      	sub	sp, #108	; 0x6c
  4036f8:	4604      	mov	r4, r0
  4036fa:	9e27      	ldr	r6, [sp, #156]	; 0x9c
  4036fc:	4692      	mov	sl, r2
  4036fe:	469b      	mov	fp, r3
  403700:	b141      	cbz	r1, 403714 <_dtoa_r+0x24>
  403702:	6c42      	ldr	r2, [r0, #68]	; 0x44
  403704:	604a      	str	r2, [r1, #4]
  403706:	2301      	movs	r3, #1
  403708:	4093      	lsls	r3, r2
  40370a:	608b      	str	r3, [r1, #8]
  40370c:	f001 fb14 	bl	404d38 <_Bfree>
  403710:	2300      	movs	r3, #0
  403712:	6423      	str	r3, [r4, #64]	; 0x40
  403714:	f1bb 0f00 	cmp.w	fp, #0
  403718:	465d      	mov	r5, fp
  40371a:	db35      	blt.n	403788 <_dtoa_r+0x98>
  40371c:	2300      	movs	r3, #0
  40371e:	6033      	str	r3, [r6, #0]
  403720:	4b9d      	ldr	r3, [pc, #628]	; (403998 <_dtoa_r+0x2a8>)
  403722:	43ab      	bics	r3, r5
  403724:	d015      	beq.n	403752 <_dtoa_r+0x62>
  403726:	4650      	mov	r0, sl
  403728:	4659      	mov	r1, fp
  40372a:	2200      	movs	r2, #0
  40372c:	2300      	movs	r3, #0
  40372e:	f002 fb3f 	bl	405db0 <__aeabi_dcmpeq>
  403732:	4680      	mov	r8, r0
  403734:	2800      	cmp	r0, #0
  403736:	d02d      	beq.n	403794 <_dtoa_r+0xa4>
  403738:	9a26      	ldr	r2, [sp, #152]	; 0x98
  40373a:	2301      	movs	r3, #1
  40373c:	6013      	str	r3, [r2, #0]
  40373e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403740:	2b00      	cmp	r3, #0
  403742:	f000 80bd 	beq.w	4038c0 <_dtoa_r+0x1d0>
  403746:	4895      	ldr	r0, [pc, #596]	; (40399c <_dtoa_r+0x2ac>)
  403748:	6018      	str	r0, [r3, #0]
  40374a:	3801      	subs	r0, #1
  40374c:	b01b      	add	sp, #108	; 0x6c
  40374e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403752:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403754:	f242 730f 	movw	r3, #9999	; 0x270f
  403758:	6013      	str	r3, [r2, #0]
  40375a:	f1ba 0f00 	cmp.w	sl, #0
  40375e:	d10d      	bne.n	40377c <_dtoa_r+0x8c>
  403760:	f3c5 0513 	ubfx	r5, r5, #0, #20
  403764:	b955      	cbnz	r5, 40377c <_dtoa_r+0x8c>
  403766:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403768:	488d      	ldr	r0, [pc, #564]	; (4039a0 <_dtoa_r+0x2b0>)
  40376a:	2b00      	cmp	r3, #0
  40376c:	d0ee      	beq.n	40374c <_dtoa_r+0x5c>
  40376e:	f100 0308 	add.w	r3, r0, #8
  403772:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  403774:	6013      	str	r3, [r2, #0]
  403776:	b01b      	add	sp, #108	; 0x6c
  403778:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40377c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  40377e:	4889      	ldr	r0, [pc, #548]	; (4039a4 <_dtoa_r+0x2b4>)
  403780:	2b00      	cmp	r3, #0
  403782:	d0e3      	beq.n	40374c <_dtoa_r+0x5c>
  403784:	1cc3      	adds	r3, r0, #3
  403786:	e7f4      	b.n	403772 <_dtoa_r+0x82>
  403788:	2301      	movs	r3, #1
  40378a:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
  40378e:	6033      	str	r3, [r6, #0]
  403790:	46ab      	mov	fp, r5
  403792:	e7c5      	b.n	403720 <_dtoa_r+0x30>
  403794:	aa18      	add	r2, sp, #96	; 0x60
  403796:	ab19      	add	r3, sp, #100	; 0x64
  403798:	9201      	str	r2, [sp, #4]
  40379a:	9300      	str	r3, [sp, #0]
  40379c:	4652      	mov	r2, sl
  40379e:	465b      	mov	r3, fp
  4037a0:	4620      	mov	r0, r4
  4037a2:	f001 fd41 	bl	405228 <__d2b>
  4037a6:	0d2b      	lsrs	r3, r5, #20
  4037a8:	4681      	mov	r9, r0
  4037aa:	d071      	beq.n	403890 <_dtoa_r+0x1a0>
  4037ac:	f3cb 0213 	ubfx	r2, fp, #0, #20
  4037b0:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
  4037b4:	9f18      	ldr	r7, [sp, #96]	; 0x60
  4037b6:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  4037ba:	4650      	mov	r0, sl
  4037bc:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
  4037c0:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  4037c4:	2200      	movs	r2, #0
  4037c6:	4b78      	ldr	r3, [pc, #480]	; (4039a8 <_dtoa_r+0x2b8>)
  4037c8:	f7fe f80c 	bl	4017e4 <__aeabi_dsub>
  4037cc:	a36c      	add	r3, pc, #432	; (adr r3, 403980 <_dtoa_r+0x290>)
  4037ce:	e9d3 2300 	ldrd	r2, r3, [r3]
  4037d2:	f7fe f9bb 	bl	401b4c <__aeabi_dmul>
  4037d6:	a36c      	add	r3, pc, #432	; (adr r3, 403988 <_dtoa_r+0x298>)
  4037d8:	e9d3 2300 	ldrd	r2, r3, [r3]
  4037dc:	f7fe f804 	bl	4017e8 <__adddf3>
  4037e0:	e9cd 0102 	strd	r0, r1, [sp, #8]
  4037e4:	4630      	mov	r0, r6
  4037e6:	f7fe f94b 	bl	401a80 <__aeabi_i2d>
  4037ea:	a369      	add	r3, pc, #420	; (adr r3, 403990 <_dtoa_r+0x2a0>)
  4037ec:	e9d3 2300 	ldrd	r2, r3, [r3]
  4037f0:	f7fe f9ac 	bl	401b4c <__aeabi_dmul>
  4037f4:	4602      	mov	r2, r0
  4037f6:	460b      	mov	r3, r1
  4037f8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  4037fc:	f7fd fff4 	bl	4017e8 <__adddf3>
  403800:	e9cd 0104 	strd	r0, r1, [sp, #16]
  403804:	f002 fb1c 	bl	405e40 <__aeabi_d2iz>
  403808:	2200      	movs	r2, #0
  40380a:	9002      	str	r0, [sp, #8]
  40380c:	2300      	movs	r3, #0
  40380e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  403812:	f002 fad7 	bl	405dc4 <__aeabi_dcmplt>
  403816:	2800      	cmp	r0, #0
  403818:	f040 8173 	bne.w	403b02 <_dtoa_r+0x412>
  40381c:	9d02      	ldr	r5, [sp, #8]
  40381e:	2d16      	cmp	r5, #22
  403820:	f200 815d 	bhi.w	403ade <_dtoa_r+0x3ee>
  403824:	4b61      	ldr	r3, [pc, #388]	; (4039ac <_dtoa_r+0x2bc>)
  403826:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  40382a:	e9d3 0100 	ldrd	r0, r1, [r3]
  40382e:	4652      	mov	r2, sl
  403830:	465b      	mov	r3, fp
  403832:	f002 fae5 	bl	405e00 <__aeabi_dcmpgt>
  403836:	2800      	cmp	r0, #0
  403838:	f000 81c5 	beq.w	403bc6 <_dtoa_r+0x4d6>
  40383c:	1e6b      	subs	r3, r5, #1
  40383e:	9302      	str	r3, [sp, #8]
  403840:	2300      	movs	r3, #0
  403842:	930e      	str	r3, [sp, #56]	; 0x38
  403844:	1bbf      	subs	r7, r7, r6
  403846:	1e7b      	subs	r3, r7, #1
  403848:	9306      	str	r3, [sp, #24]
  40384a:	f100 8154 	bmi.w	403af6 <_dtoa_r+0x406>
  40384e:	2300      	movs	r3, #0
  403850:	9308      	str	r3, [sp, #32]
  403852:	9b02      	ldr	r3, [sp, #8]
  403854:	2b00      	cmp	r3, #0
  403856:	f2c0 8145 	blt.w	403ae4 <_dtoa_r+0x3f4>
  40385a:	9a06      	ldr	r2, [sp, #24]
  40385c:	930d      	str	r3, [sp, #52]	; 0x34
  40385e:	4611      	mov	r1, r2
  403860:	4419      	add	r1, r3
  403862:	2300      	movs	r3, #0
  403864:	9106      	str	r1, [sp, #24]
  403866:	930c      	str	r3, [sp, #48]	; 0x30
  403868:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40386a:	2b09      	cmp	r3, #9
  40386c:	d82a      	bhi.n	4038c4 <_dtoa_r+0x1d4>
  40386e:	2b05      	cmp	r3, #5
  403870:	f340 865b 	ble.w	40452a <_dtoa_r+0xe3a>
  403874:	3b04      	subs	r3, #4
  403876:	9324      	str	r3, [sp, #144]	; 0x90
  403878:	2500      	movs	r5, #0
  40387a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40387c:	3b02      	subs	r3, #2
  40387e:	2b03      	cmp	r3, #3
  403880:	f200 8642 	bhi.w	404508 <_dtoa_r+0xe18>
  403884:	e8df f013 	tbh	[pc, r3, lsl #1]
  403888:	02c903d4 	.word	0x02c903d4
  40388c:	046103df 	.word	0x046103df
  403890:	9f18      	ldr	r7, [sp, #96]	; 0x60
  403892:	9e19      	ldr	r6, [sp, #100]	; 0x64
  403894:	443e      	add	r6, r7
  403896:	f206 4332 	addw	r3, r6, #1074	; 0x432
  40389a:	2b20      	cmp	r3, #32
  40389c:	f340 818e 	ble.w	403bbc <_dtoa_r+0x4cc>
  4038a0:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  4038a4:	f206 4012 	addw	r0, r6, #1042	; 0x412
  4038a8:	409d      	lsls	r5, r3
  4038aa:	fa2a f000 	lsr.w	r0, sl, r0
  4038ae:	4328      	orrs	r0, r5
  4038b0:	f7fe f8d6 	bl	401a60 <__aeabi_ui2d>
  4038b4:	2301      	movs	r3, #1
  4038b6:	3e01      	subs	r6, #1
  4038b8:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  4038bc:	9314      	str	r3, [sp, #80]	; 0x50
  4038be:	e781      	b.n	4037c4 <_dtoa_r+0xd4>
  4038c0:	483b      	ldr	r0, [pc, #236]	; (4039b0 <_dtoa_r+0x2c0>)
  4038c2:	e743      	b.n	40374c <_dtoa_r+0x5c>
  4038c4:	2100      	movs	r1, #0
  4038c6:	6461      	str	r1, [r4, #68]	; 0x44
  4038c8:	4620      	mov	r0, r4
  4038ca:	9125      	str	r1, [sp, #148]	; 0x94
  4038cc:	f001 fa0e 	bl	404cec <_Balloc>
  4038d0:	f04f 33ff 	mov.w	r3, #4294967295
  4038d4:	930a      	str	r3, [sp, #40]	; 0x28
  4038d6:	9a25      	ldr	r2, [sp, #148]	; 0x94
  4038d8:	930f      	str	r3, [sp, #60]	; 0x3c
  4038da:	2301      	movs	r3, #1
  4038dc:	9004      	str	r0, [sp, #16]
  4038de:	6420      	str	r0, [r4, #64]	; 0x40
  4038e0:	9224      	str	r2, [sp, #144]	; 0x90
  4038e2:	930b      	str	r3, [sp, #44]	; 0x2c
  4038e4:	9b19      	ldr	r3, [sp, #100]	; 0x64
  4038e6:	2b00      	cmp	r3, #0
  4038e8:	f2c0 80d9 	blt.w	403a9e <_dtoa_r+0x3ae>
  4038ec:	9a02      	ldr	r2, [sp, #8]
  4038ee:	2a0e      	cmp	r2, #14
  4038f0:	f300 80d5 	bgt.w	403a9e <_dtoa_r+0x3ae>
  4038f4:	4b2d      	ldr	r3, [pc, #180]	; (4039ac <_dtoa_r+0x2bc>)
  4038f6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4038fa:	e9d3 2300 	ldrd	r2, r3, [r3]
  4038fe:	e9cd 2308 	strd	r2, r3, [sp, #32]
  403902:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403904:	2b00      	cmp	r3, #0
  403906:	f2c0 83ba 	blt.w	40407e <_dtoa_r+0x98e>
  40390a:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
  40390e:	4650      	mov	r0, sl
  403910:	462a      	mov	r2, r5
  403912:	4633      	mov	r3, r6
  403914:	4659      	mov	r1, fp
  403916:	f7fe fa43 	bl	401da0 <__aeabi_ddiv>
  40391a:	f002 fa91 	bl	405e40 <__aeabi_d2iz>
  40391e:	4680      	mov	r8, r0
  403920:	f7fe f8ae 	bl	401a80 <__aeabi_i2d>
  403924:	462a      	mov	r2, r5
  403926:	4633      	mov	r3, r6
  403928:	f7fe f910 	bl	401b4c <__aeabi_dmul>
  40392c:	460b      	mov	r3, r1
  40392e:	4602      	mov	r2, r0
  403930:	4659      	mov	r1, fp
  403932:	4650      	mov	r0, sl
  403934:	f7fd ff56 	bl	4017e4 <__aeabi_dsub>
  403938:	9d04      	ldr	r5, [sp, #16]
  40393a:	f108 0330 	add.w	r3, r8, #48	; 0x30
  40393e:	702b      	strb	r3, [r5, #0]
  403940:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403942:	2b01      	cmp	r3, #1
  403944:	4606      	mov	r6, r0
  403946:	460f      	mov	r7, r1
  403948:	f105 0501 	add.w	r5, r5, #1
  40394c:	d068      	beq.n	403a20 <_dtoa_r+0x330>
  40394e:	2200      	movs	r2, #0
  403950:	4b18      	ldr	r3, [pc, #96]	; (4039b4 <_dtoa_r+0x2c4>)
  403952:	f7fe f8fb 	bl	401b4c <__aeabi_dmul>
  403956:	2200      	movs	r2, #0
  403958:	2300      	movs	r3, #0
  40395a:	4606      	mov	r6, r0
  40395c:	460f      	mov	r7, r1
  40395e:	f002 fa27 	bl	405db0 <__aeabi_dcmpeq>
  403962:	2800      	cmp	r0, #0
  403964:	f040 8088 	bne.w	403a78 <_dtoa_r+0x388>
  403968:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  40396c:	f04f 0a00 	mov.w	sl, #0
  403970:	f8df b040 	ldr.w	fp, [pc, #64]	; 4039b4 <_dtoa_r+0x2c4>
  403974:	940c      	str	r4, [sp, #48]	; 0x30
  403976:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  40397a:	e028      	b.n	4039ce <_dtoa_r+0x2de>
  40397c:	f3af 8000 	nop.w
  403980:	636f4361 	.word	0x636f4361
  403984:	3fd287a7 	.word	0x3fd287a7
  403988:	8b60c8b3 	.word	0x8b60c8b3
  40398c:	3fc68a28 	.word	0x3fc68a28
  403990:	509f79fb 	.word	0x509f79fb
  403994:	3fd34413 	.word	0x3fd34413
  403998:	7ff00000 	.word	0x7ff00000
  40399c:	00406c65 	.word	0x00406c65
  4039a0:	00406c88 	.word	0x00406c88
  4039a4:	00406c94 	.word	0x00406c94
  4039a8:	3ff80000 	.word	0x3ff80000
  4039ac:	00406cc0 	.word	0x00406cc0
  4039b0:	00406c64 	.word	0x00406c64
  4039b4:	40240000 	.word	0x40240000
  4039b8:	f7fe f8c8 	bl	401b4c <__aeabi_dmul>
  4039bc:	2200      	movs	r2, #0
  4039be:	2300      	movs	r3, #0
  4039c0:	4606      	mov	r6, r0
  4039c2:	460f      	mov	r7, r1
  4039c4:	f002 f9f4 	bl	405db0 <__aeabi_dcmpeq>
  4039c8:	2800      	cmp	r0, #0
  4039ca:	f040 83c1 	bne.w	404150 <_dtoa_r+0xa60>
  4039ce:	4642      	mov	r2, r8
  4039d0:	464b      	mov	r3, r9
  4039d2:	4630      	mov	r0, r6
  4039d4:	4639      	mov	r1, r7
  4039d6:	f7fe f9e3 	bl	401da0 <__aeabi_ddiv>
  4039da:	f002 fa31 	bl	405e40 <__aeabi_d2iz>
  4039de:	4604      	mov	r4, r0
  4039e0:	f7fe f84e 	bl	401a80 <__aeabi_i2d>
  4039e4:	4642      	mov	r2, r8
  4039e6:	464b      	mov	r3, r9
  4039e8:	f7fe f8b0 	bl	401b4c <__aeabi_dmul>
  4039ec:	4602      	mov	r2, r0
  4039ee:	460b      	mov	r3, r1
  4039f0:	4630      	mov	r0, r6
  4039f2:	4639      	mov	r1, r7
  4039f4:	f7fd fef6 	bl	4017e4 <__aeabi_dsub>
  4039f8:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  4039fc:	9e04      	ldr	r6, [sp, #16]
  4039fe:	f805 eb01 	strb.w	lr, [r5], #1
  403a02:	eba5 0e06 	sub.w	lr, r5, r6
  403a06:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  403a08:	45b6      	cmp	lr, r6
  403a0a:	e9cd 0106 	strd	r0, r1, [sp, #24]
  403a0e:	4652      	mov	r2, sl
  403a10:	465b      	mov	r3, fp
  403a12:	d1d1      	bne.n	4039b8 <_dtoa_r+0x2c8>
  403a14:	46a0      	mov	r8, r4
  403a16:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  403a1a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403a1c:	4606      	mov	r6, r0
  403a1e:	460f      	mov	r7, r1
  403a20:	4632      	mov	r2, r6
  403a22:	463b      	mov	r3, r7
  403a24:	4630      	mov	r0, r6
  403a26:	4639      	mov	r1, r7
  403a28:	f7fd fede 	bl	4017e8 <__adddf3>
  403a2c:	4606      	mov	r6, r0
  403a2e:	460f      	mov	r7, r1
  403a30:	4602      	mov	r2, r0
  403a32:	460b      	mov	r3, r1
  403a34:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403a38:	f002 f9c4 	bl	405dc4 <__aeabi_dcmplt>
  403a3c:	b948      	cbnz	r0, 403a52 <_dtoa_r+0x362>
  403a3e:	4632      	mov	r2, r6
  403a40:	463b      	mov	r3, r7
  403a42:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403a46:	f002 f9b3 	bl	405db0 <__aeabi_dcmpeq>
  403a4a:	b1a8      	cbz	r0, 403a78 <_dtoa_r+0x388>
  403a4c:	f018 0f01 	tst.w	r8, #1
  403a50:	d012      	beq.n	403a78 <_dtoa_r+0x388>
  403a52:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  403a56:	9a04      	ldr	r2, [sp, #16]
  403a58:	1e6b      	subs	r3, r5, #1
  403a5a:	e004      	b.n	403a66 <_dtoa_r+0x376>
  403a5c:	429a      	cmp	r2, r3
  403a5e:	f000 8401 	beq.w	404264 <_dtoa_r+0xb74>
  403a62:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  403a66:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  403a6a:	f103 0501 	add.w	r5, r3, #1
  403a6e:	d0f5      	beq.n	403a5c <_dtoa_r+0x36c>
  403a70:	f108 0801 	add.w	r8, r8, #1
  403a74:	f883 8000 	strb.w	r8, [r3]
  403a78:	4649      	mov	r1, r9
  403a7a:	4620      	mov	r0, r4
  403a7c:	f001 f95c 	bl	404d38 <_Bfree>
  403a80:	2200      	movs	r2, #0
  403a82:	9b02      	ldr	r3, [sp, #8]
  403a84:	702a      	strb	r2, [r5, #0]
  403a86:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403a88:	3301      	adds	r3, #1
  403a8a:	6013      	str	r3, [r2, #0]
  403a8c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403a8e:	2b00      	cmp	r3, #0
  403a90:	f000 839e 	beq.w	4041d0 <_dtoa_r+0xae0>
  403a94:	9804      	ldr	r0, [sp, #16]
  403a96:	601d      	str	r5, [r3, #0]
  403a98:	b01b      	add	sp, #108	; 0x6c
  403a9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403a9e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403aa0:	2a00      	cmp	r2, #0
  403aa2:	d03e      	beq.n	403b22 <_dtoa_r+0x432>
  403aa4:	9a24      	ldr	r2, [sp, #144]	; 0x90
  403aa6:	2a01      	cmp	r2, #1
  403aa8:	f340 8311 	ble.w	4040ce <_dtoa_r+0x9de>
  403aac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403aae:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403ab0:	1e5f      	subs	r7, r3, #1
  403ab2:	42ba      	cmp	r2, r7
  403ab4:	f2c0 838f 	blt.w	4041d6 <_dtoa_r+0xae6>
  403ab8:	1bd7      	subs	r7, r2, r7
  403aba:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403abc:	2b00      	cmp	r3, #0
  403abe:	f2c0 848b 	blt.w	4043d8 <_dtoa_r+0xce8>
  403ac2:	9d08      	ldr	r5, [sp, #32]
  403ac4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403ac6:	9a08      	ldr	r2, [sp, #32]
  403ac8:	441a      	add	r2, r3
  403aca:	9208      	str	r2, [sp, #32]
  403acc:	9a06      	ldr	r2, [sp, #24]
  403ace:	2101      	movs	r1, #1
  403ad0:	441a      	add	r2, r3
  403ad2:	4620      	mov	r0, r4
  403ad4:	9206      	str	r2, [sp, #24]
  403ad6:	f001 f9c9 	bl	404e6c <__i2b>
  403ada:	4606      	mov	r6, r0
  403adc:	e024      	b.n	403b28 <_dtoa_r+0x438>
  403ade:	2301      	movs	r3, #1
  403ae0:	930e      	str	r3, [sp, #56]	; 0x38
  403ae2:	e6af      	b.n	403844 <_dtoa_r+0x154>
  403ae4:	9a08      	ldr	r2, [sp, #32]
  403ae6:	9b02      	ldr	r3, [sp, #8]
  403ae8:	1ad2      	subs	r2, r2, r3
  403aea:	425b      	negs	r3, r3
  403aec:	930c      	str	r3, [sp, #48]	; 0x30
  403aee:	2300      	movs	r3, #0
  403af0:	9208      	str	r2, [sp, #32]
  403af2:	930d      	str	r3, [sp, #52]	; 0x34
  403af4:	e6b8      	b.n	403868 <_dtoa_r+0x178>
  403af6:	f1c7 0301 	rsb	r3, r7, #1
  403afa:	9308      	str	r3, [sp, #32]
  403afc:	2300      	movs	r3, #0
  403afe:	9306      	str	r3, [sp, #24]
  403b00:	e6a7      	b.n	403852 <_dtoa_r+0x162>
  403b02:	9d02      	ldr	r5, [sp, #8]
  403b04:	4628      	mov	r0, r5
  403b06:	f7fd ffbb 	bl	401a80 <__aeabi_i2d>
  403b0a:	4602      	mov	r2, r0
  403b0c:	460b      	mov	r3, r1
  403b0e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  403b12:	f002 f94d 	bl	405db0 <__aeabi_dcmpeq>
  403b16:	2800      	cmp	r0, #0
  403b18:	f47f ae80 	bne.w	40381c <_dtoa_r+0x12c>
  403b1c:	1e6b      	subs	r3, r5, #1
  403b1e:	9302      	str	r3, [sp, #8]
  403b20:	e67c      	b.n	40381c <_dtoa_r+0x12c>
  403b22:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403b24:	9d08      	ldr	r5, [sp, #32]
  403b26:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
  403b28:	2d00      	cmp	r5, #0
  403b2a:	dd0c      	ble.n	403b46 <_dtoa_r+0x456>
  403b2c:	9906      	ldr	r1, [sp, #24]
  403b2e:	2900      	cmp	r1, #0
  403b30:	460b      	mov	r3, r1
  403b32:	dd08      	ble.n	403b46 <_dtoa_r+0x456>
  403b34:	42a9      	cmp	r1, r5
  403b36:	9a08      	ldr	r2, [sp, #32]
  403b38:	bfa8      	it	ge
  403b3a:	462b      	movge	r3, r5
  403b3c:	1ad2      	subs	r2, r2, r3
  403b3e:	1aed      	subs	r5, r5, r3
  403b40:	1acb      	subs	r3, r1, r3
  403b42:	9208      	str	r2, [sp, #32]
  403b44:	9306      	str	r3, [sp, #24]
  403b46:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403b48:	b1d3      	cbz	r3, 403b80 <_dtoa_r+0x490>
  403b4a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403b4c:	2b00      	cmp	r3, #0
  403b4e:	f000 82b7 	beq.w	4040c0 <_dtoa_r+0x9d0>
  403b52:	2f00      	cmp	r7, #0
  403b54:	dd10      	ble.n	403b78 <_dtoa_r+0x488>
  403b56:	4631      	mov	r1, r6
  403b58:	463a      	mov	r2, r7
  403b5a:	4620      	mov	r0, r4
  403b5c:	f001 fa22 	bl	404fa4 <__pow5mult>
  403b60:	464a      	mov	r2, r9
  403b62:	4601      	mov	r1, r0
  403b64:	4606      	mov	r6, r0
  403b66:	4620      	mov	r0, r4
  403b68:	f001 f98a 	bl	404e80 <__multiply>
  403b6c:	4649      	mov	r1, r9
  403b6e:	4680      	mov	r8, r0
  403b70:	4620      	mov	r0, r4
  403b72:	f001 f8e1 	bl	404d38 <_Bfree>
  403b76:	46c1      	mov	r9, r8
  403b78:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403b7a:	1bda      	subs	r2, r3, r7
  403b7c:	f040 82a1 	bne.w	4040c2 <_dtoa_r+0x9d2>
  403b80:	2101      	movs	r1, #1
  403b82:	4620      	mov	r0, r4
  403b84:	f001 f972 	bl	404e6c <__i2b>
  403b88:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403b8a:	2b00      	cmp	r3, #0
  403b8c:	4680      	mov	r8, r0
  403b8e:	dd1c      	ble.n	403bca <_dtoa_r+0x4da>
  403b90:	4601      	mov	r1, r0
  403b92:	461a      	mov	r2, r3
  403b94:	4620      	mov	r0, r4
  403b96:	f001 fa05 	bl	404fa4 <__pow5mult>
  403b9a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403b9c:	2b01      	cmp	r3, #1
  403b9e:	4680      	mov	r8, r0
  403ba0:	f340 8254 	ble.w	40404c <_dtoa_r+0x95c>
  403ba4:	2300      	movs	r3, #0
  403ba6:	930c      	str	r3, [sp, #48]	; 0x30
  403ba8:	f8d8 3010 	ldr.w	r3, [r8, #16]
  403bac:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  403bb0:	6918      	ldr	r0, [r3, #16]
  403bb2:	f001 f90b 	bl	404dcc <__hi0bits>
  403bb6:	f1c0 0020 	rsb	r0, r0, #32
  403bba:	e010      	b.n	403bde <_dtoa_r+0x4ee>
  403bbc:	f1c3 0520 	rsb	r5, r3, #32
  403bc0:	fa0a f005 	lsl.w	r0, sl, r5
  403bc4:	e674      	b.n	4038b0 <_dtoa_r+0x1c0>
  403bc6:	900e      	str	r0, [sp, #56]	; 0x38
  403bc8:	e63c      	b.n	403844 <_dtoa_r+0x154>
  403bca:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403bcc:	2b01      	cmp	r3, #1
  403bce:	f340 8287 	ble.w	4040e0 <_dtoa_r+0x9f0>
  403bd2:	2300      	movs	r3, #0
  403bd4:	930c      	str	r3, [sp, #48]	; 0x30
  403bd6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403bd8:	2001      	movs	r0, #1
  403bda:	2b00      	cmp	r3, #0
  403bdc:	d1e4      	bne.n	403ba8 <_dtoa_r+0x4b8>
  403bde:	9a06      	ldr	r2, [sp, #24]
  403be0:	4410      	add	r0, r2
  403be2:	f010 001f 	ands.w	r0, r0, #31
  403be6:	f000 80a1 	beq.w	403d2c <_dtoa_r+0x63c>
  403bea:	f1c0 0320 	rsb	r3, r0, #32
  403bee:	2b04      	cmp	r3, #4
  403bf0:	f340 849e 	ble.w	404530 <_dtoa_r+0xe40>
  403bf4:	9b08      	ldr	r3, [sp, #32]
  403bf6:	f1c0 001c 	rsb	r0, r0, #28
  403bfa:	4403      	add	r3, r0
  403bfc:	9308      	str	r3, [sp, #32]
  403bfe:	4613      	mov	r3, r2
  403c00:	4403      	add	r3, r0
  403c02:	4405      	add	r5, r0
  403c04:	9306      	str	r3, [sp, #24]
  403c06:	9b08      	ldr	r3, [sp, #32]
  403c08:	2b00      	cmp	r3, #0
  403c0a:	dd05      	ble.n	403c18 <_dtoa_r+0x528>
  403c0c:	4649      	mov	r1, r9
  403c0e:	461a      	mov	r2, r3
  403c10:	4620      	mov	r0, r4
  403c12:	f001 fa17 	bl	405044 <__lshift>
  403c16:	4681      	mov	r9, r0
  403c18:	9b06      	ldr	r3, [sp, #24]
  403c1a:	2b00      	cmp	r3, #0
  403c1c:	dd05      	ble.n	403c2a <_dtoa_r+0x53a>
  403c1e:	4641      	mov	r1, r8
  403c20:	461a      	mov	r2, r3
  403c22:	4620      	mov	r0, r4
  403c24:	f001 fa0e 	bl	405044 <__lshift>
  403c28:	4680      	mov	r8, r0
  403c2a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403c2c:	2b00      	cmp	r3, #0
  403c2e:	f040 8086 	bne.w	403d3e <_dtoa_r+0x64e>
  403c32:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403c34:	2b00      	cmp	r3, #0
  403c36:	f340 8266 	ble.w	404106 <_dtoa_r+0xa16>
  403c3a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403c3c:	2b00      	cmp	r3, #0
  403c3e:	f000 8098 	beq.w	403d72 <_dtoa_r+0x682>
  403c42:	2d00      	cmp	r5, #0
  403c44:	dd05      	ble.n	403c52 <_dtoa_r+0x562>
  403c46:	4631      	mov	r1, r6
  403c48:	462a      	mov	r2, r5
  403c4a:	4620      	mov	r0, r4
  403c4c:	f001 f9fa 	bl	405044 <__lshift>
  403c50:	4606      	mov	r6, r0
  403c52:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403c54:	2b00      	cmp	r3, #0
  403c56:	f040 8337 	bne.w	4042c8 <_dtoa_r+0xbd8>
  403c5a:	9606      	str	r6, [sp, #24]
  403c5c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403c5e:	9a04      	ldr	r2, [sp, #16]
  403c60:	f8dd b018 	ldr.w	fp, [sp, #24]
  403c64:	3b01      	subs	r3, #1
  403c66:	18d3      	adds	r3, r2, r3
  403c68:	930b      	str	r3, [sp, #44]	; 0x2c
  403c6a:	f00a 0301 	and.w	r3, sl, #1
  403c6e:	930c      	str	r3, [sp, #48]	; 0x30
  403c70:	4617      	mov	r7, r2
  403c72:	46c2      	mov	sl, r8
  403c74:	4651      	mov	r1, sl
  403c76:	4648      	mov	r0, r9
  403c78:	f7ff fca4 	bl	4035c4 <quorem>
  403c7c:	4631      	mov	r1, r6
  403c7e:	4605      	mov	r5, r0
  403c80:	4648      	mov	r0, r9
  403c82:	f001 fa31 	bl	4050e8 <__mcmp>
  403c86:	465a      	mov	r2, fp
  403c88:	900a      	str	r0, [sp, #40]	; 0x28
  403c8a:	4651      	mov	r1, sl
  403c8c:	4620      	mov	r0, r4
  403c8e:	f001 fa47 	bl	405120 <__mdiff>
  403c92:	68c2      	ldr	r2, [r0, #12]
  403c94:	4680      	mov	r8, r0
  403c96:	f105 0330 	add.w	r3, r5, #48	; 0x30
  403c9a:	2a00      	cmp	r2, #0
  403c9c:	f040 822b 	bne.w	4040f6 <_dtoa_r+0xa06>
  403ca0:	4601      	mov	r1, r0
  403ca2:	4648      	mov	r0, r9
  403ca4:	9308      	str	r3, [sp, #32]
  403ca6:	f001 fa1f 	bl	4050e8 <__mcmp>
  403caa:	4641      	mov	r1, r8
  403cac:	9006      	str	r0, [sp, #24]
  403cae:	4620      	mov	r0, r4
  403cb0:	f001 f842 	bl	404d38 <_Bfree>
  403cb4:	9a06      	ldr	r2, [sp, #24]
  403cb6:	9b08      	ldr	r3, [sp, #32]
  403cb8:	b932      	cbnz	r2, 403cc8 <_dtoa_r+0x5d8>
  403cba:	9924      	ldr	r1, [sp, #144]	; 0x90
  403cbc:	b921      	cbnz	r1, 403cc8 <_dtoa_r+0x5d8>
  403cbe:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403cc0:	2a00      	cmp	r2, #0
  403cc2:	f000 83ef 	beq.w	4044a4 <_dtoa_r+0xdb4>
  403cc6:	9a24      	ldr	r2, [sp, #144]	; 0x90
  403cc8:	990a      	ldr	r1, [sp, #40]	; 0x28
  403cca:	2900      	cmp	r1, #0
  403ccc:	f2c0 829f 	blt.w	40420e <_dtoa_r+0xb1e>
  403cd0:	d105      	bne.n	403cde <_dtoa_r+0x5ee>
  403cd2:	9924      	ldr	r1, [sp, #144]	; 0x90
  403cd4:	b919      	cbnz	r1, 403cde <_dtoa_r+0x5ee>
  403cd6:	990c      	ldr	r1, [sp, #48]	; 0x30
  403cd8:	2900      	cmp	r1, #0
  403cda:	f000 8298 	beq.w	40420e <_dtoa_r+0xb1e>
  403cde:	2a00      	cmp	r2, #0
  403ce0:	f300 8306 	bgt.w	4042f0 <_dtoa_r+0xc00>
  403ce4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403ce6:	703b      	strb	r3, [r7, #0]
  403ce8:	f107 0801 	add.w	r8, r7, #1
  403cec:	4297      	cmp	r7, r2
  403cee:	4645      	mov	r5, r8
  403cf0:	f000 830c 	beq.w	40430c <_dtoa_r+0xc1c>
  403cf4:	4649      	mov	r1, r9
  403cf6:	2300      	movs	r3, #0
  403cf8:	220a      	movs	r2, #10
  403cfa:	4620      	mov	r0, r4
  403cfc:	f001 f826 	bl	404d4c <__multadd>
  403d00:	455e      	cmp	r6, fp
  403d02:	4681      	mov	r9, r0
  403d04:	4631      	mov	r1, r6
  403d06:	f04f 0300 	mov.w	r3, #0
  403d0a:	f04f 020a 	mov.w	r2, #10
  403d0e:	4620      	mov	r0, r4
  403d10:	f000 81eb 	beq.w	4040ea <_dtoa_r+0x9fa>
  403d14:	f001 f81a 	bl	404d4c <__multadd>
  403d18:	4659      	mov	r1, fp
  403d1a:	4606      	mov	r6, r0
  403d1c:	2300      	movs	r3, #0
  403d1e:	220a      	movs	r2, #10
  403d20:	4620      	mov	r0, r4
  403d22:	f001 f813 	bl	404d4c <__multadd>
  403d26:	4647      	mov	r7, r8
  403d28:	4683      	mov	fp, r0
  403d2a:	e7a3      	b.n	403c74 <_dtoa_r+0x584>
  403d2c:	201c      	movs	r0, #28
  403d2e:	9b08      	ldr	r3, [sp, #32]
  403d30:	4403      	add	r3, r0
  403d32:	9308      	str	r3, [sp, #32]
  403d34:	9b06      	ldr	r3, [sp, #24]
  403d36:	4403      	add	r3, r0
  403d38:	4405      	add	r5, r0
  403d3a:	9306      	str	r3, [sp, #24]
  403d3c:	e763      	b.n	403c06 <_dtoa_r+0x516>
  403d3e:	4641      	mov	r1, r8
  403d40:	4648      	mov	r0, r9
  403d42:	f001 f9d1 	bl	4050e8 <__mcmp>
  403d46:	2800      	cmp	r0, #0
  403d48:	f6bf af73 	bge.w	403c32 <_dtoa_r+0x542>
  403d4c:	9f02      	ldr	r7, [sp, #8]
  403d4e:	4649      	mov	r1, r9
  403d50:	2300      	movs	r3, #0
  403d52:	220a      	movs	r2, #10
  403d54:	4620      	mov	r0, r4
  403d56:	3f01      	subs	r7, #1
  403d58:	9702      	str	r7, [sp, #8]
  403d5a:	f000 fff7 	bl	404d4c <__multadd>
  403d5e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403d60:	4681      	mov	r9, r0
  403d62:	2b00      	cmp	r3, #0
  403d64:	f040 83b6 	bne.w	4044d4 <_dtoa_r+0xde4>
  403d68:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403d6a:	2b00      	cmp	r3, #0
  403d6c:	f340 83bf 	ble.w	4044ee <_dtoa_r+0xdfe>
  403d70:	930a      	str	r3, [sp, #40]	; 0x28
  403d72:	f8dd b010 	ldr.w	fp, [sp, #16]
  403d76:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  403d78:	465d      	mov	r5, fp
  403d7a:	e002      	b.n	403d82 <_dtoa_r+0x692>
  403d7c:	f000 ffe6 	bl	404d4c <__multadd>
  403d80:	4681      	mov	r9, r0
  403d82:	4641      	mov	r1, r8
  403d84:	4648      	mov	r0, r9
  403d86:	f7ff fc1d 	bl	4035c4 <quorem>
  403d8a:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  403d8e:	f805 ab01 	strb.w	sl, [r5], #1
  403d92:	eba5 030b 	sub.w	r3, r5, fp
  403d96:	42bb      	cmp	r3, r7
  403d98:	f04f 020a 	mov.w	r2, #10
  403d9c:	f04f 0300 	mov.w	r3, #0
  403da0:	4649      	mov	r1, r9
  403da2:	4620      	mov	r0, r4
  403da4:	dbea      	blt.n	403d7c <_dtoa_r+0x68c>
  403da6:	9b04      	ldr	r3, [sp, #16]
  403da8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403daa:	2a01      	cmp	r2, #1
  403dac:	bfac      	ite	ge
  403dae:	189b      	addge	r3, r3, r2
  403db0:	3301      	addlt	r3, #1
  403db2:	461d      	mov	r5, r3
  403db4:	f04f 0b00 	mov.w	fp, #0
  403db8:	4649      	mov	r1, r9
  403dba:	2201      	movs	r2, #1
  403dbc:	4620      	mov	r0, r4
  403dbe:	f001 f941 	bl	405044 <__lshift>
  403dc2:	4641      	mov	r1, r8
  403dc4:	4681      	mov	r9, r0
  403dc6:	f001 f98f 	bl	4050e8 <__mcmp>
  403dca:	2800      	cmp	r0, #0
  403dcc:	f340 823d 	ble.w	40424a <_dtoa_r+0xb5a>
  403dd0:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  403dd4:	9904      	ldr	r1, [sp, #16]
  403dd6:	1e6b      	subs	r3, r5, #1
  403dd8:	e004      	b.n	403de4 <_dtoa_r+0x6f4>
  403dda:	428b      	cmp	r3, r1
  403ddc:	f000 81ae 	beq.w	40413c <_dtoa_r+0xa4c>
  403de0:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  403de4:	2a39      	cmp	r2, #57	; 0x39
  403de6:	f103 0501 	add.w	r5, r3, #1
  403dea:	d0f6      	beq.n	403dda <_dtoa_r+0x6ea>
  403dec:	3201      	adds	r2, #1
  403dee:	701a      	strb	r2, [r3, #0]
  403df0:	4641      	mov	r1, r8
  403df2:	4620      	mov	r0, r4
  403df4:	f000 ffa0 	bl	404d38 <_Bfree>
  403df8:	2e00      	cmp	r6, #0
  403dfa:	f43f ae3d 	beq.w	403a78 <_dtoa_r+0x388>
  403dfe:	f1bb 0f00 	cmp.w	fp, #0
  403e02:	d005      	beq.n	403e10 <_dtoa_r+0x720>
  403e04:	45b3      	cmp	fp, r6
  403e06:	d003      	beq.n	403e10 <_dtoa_r+0x720>
  403e08:	4659      	mov	r1, fp
  403e0a:	4620      	mov	r0, r4
  403e0c:	f000 ff94 	bl	404d38 <_Bfree>
  403e10:	4631      	mov	r1, r6
  403e12:	4620      	mov	r0, r4
  403e14:	f000 ff90 	bl	404d38 <_Bfree>
  403e18:	e62e      	b.n	403a78 <_dtoa_r+0x388>
  403e1a:	2300      	movs	r3, #0
  403e1c:	930b      	str	r3, [sp, #44]	; 0x2c
  403e1e:	9b02      	ldr	r3, [sp, #8]
  403e20:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403e22:	4413      	add	r3, r2
  403e24:	930f      	str	r3, [sp, #60]	; 0x3c
  403e26:	3301      	adds	r3, #1
  403e28:	2b01      	cmp	r3, #1
  403e2a:	461f      	mov	r7, r3
  403e2c:	461e      	mov	r6, r3
  403e2e:	930a      	str	r3, [sp, #40]	; 0x28
  403e30:	bfb8      	it	lt
  403e32:	2701      	movlt	r7, #1
  403e34:	2100      	movs	r1, #0
  403e36:	2f17      	cmp	r7, #23
  403e38:	6461      	str	r1, [r4, #68]	; 0x44
  403e3a:	d90a      	bls.n	403e52 <_dtoa_r+0x762>
  403e3c:	2201      	movs	r2, #1
  403e3e:	2304      	movs	r3, #4
  403e40:	005b      	lsls	r3, r3, #1
  403e42:	f103 0014 	add.w	r0, r3, #20
  403e46:	4287      	cmp	r7, r0
  403e48:	4611      	mov	r1, r2
  403e4a:	f102 0201 	add.w	r2, r2, #1
  403e4e:	d2f7      	bcs.n	403e40 <_dtoa_r+0x750>
  403e50:	6461      	str	r1, [r4, #68]	; 0x44
  403e52:	4620      	mov	r0, r4
  403e54:	f000 ff4a 	bl	404cec <_Balloc>
  403e58:	2e0e      	cmp	r6, #14
  403e5a:	9004      	str	r0, [sp, #16]
  403e5c:	6420      	str	r0, [r4, #64]	; 0x40
  403e5e:	f63f ad41 	bhi.w	4038e4 <_dtoa_r+0x1f4>
  403e62:	2d00      	cmp	r5, #0
  403e64:	f43f ad3e 	beq.w	4038e4 <_dtoa_r+0x1f4>
  403e68:	9902      	ldr	r1, [sp, #8]
  403e6a:	2900      	cmp	r1, #0
  403e6c:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
  403e70:	f340 8202 	ble.w	404278 <_dtoa_r+0xb88>
  403e74:	4bb8      	ldr	r3, [pc, #736]	; (404158 <_dtoa_r+0xa68>)
  403e76:	f001 020f 	and.w	r2, r1, #15
  403e7a:	110d      	asrs	r5, r1, #4
  403e7c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403e80:	06e9      	lsls	r1, r5, #27
  403e82:	e9d3 6700 	ldrd	r6, r7, [r3]
  403e86:	f140 81ae 	bpl.w	4041e6 <_dtoa_r+0xaf6>
  403e8a:	4bb4      	ldr	r3, [pc, #720]	; (40415c <_dtoa_r+0xa6c>)
  403e8c:	4650      	mov	r0, sl
  403e8e:	4659      	mov	r1, fp
  403e90:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  403e94:	f7fd ff84 	bl	401da0 <__aeabi_ddiv>
  403e98:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  403e9c:	f005 050f 	and.w	r5, r5, #15
  403ea0:	f04f 0a03 	mov.w	sl, #3
  403ea4:	b18d      	cbz	r5, 403eca <_dtoa_r+0x7da>
  403ea6:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 40415c <_dtoa_r+0xa6c>
  403eaa:	07ea      	lsls	r2, r5, #31
  403eac:	d509      	bpl.n	403ec2 <_dtoa_r+0x7d2>
  403eae:	4630      	mov	r0, r6
  403eb0:	4639      	mov	r1, r7
  403eb2:	e9d8 2300 	ldrd	r2, r3, [r8]
  403eb6:	f7fd fe49 	bl	401b4c <__aeabi_dmul>
  403eba:	f10a 0a01 	add.w	sl, sl, #1
  403ebe:	4606      	mov	r6, r0
  403ec0:	460f      	mov	r7, r1
  403ec2:	106d      	asrs	r5, r5, #1
  403ec4:	f108 0808 	add.w	r8, r8, #8
  403ec8:	d1ef      	bne.n	403eaa <_dtoa_r+0x7ba>
  403eca:	463b      	mov	r3, r7
  403ecc:	4632      	mov	r2, r6
  403ece:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  403ed2:	f7fd ff65 	bl	401da0 <__aeabi_ddiv>
  403ed6:	4607      	mov	r7, r0
  403ed8:	4688      	mov	r8, r1
  403eda:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403edc:	b143      	cbz	r3, 403ef0 <_dtoa_r+0x800>
  403ede:	2200      	movs	r2, #0
  403ee0:	4b9f      	ldr	r3, [pc, #636]	; (404160 <_dtoa_r+0xa70>)
  403ee2:	4638      	mov	r0, r7
  403ee4:	4641      	mov	r1, r8
  403ee6:	f001 ff6d 	bl	405dc4 <__aeabi_dcmplt>
  403eea:	2800      	cmp	r0, #0
  403eec:	f040 8286 	bne.w	4043fc <_dtoa_r+0xd0c>
  403ef0:	4650      	mov	r0, sl
  403ef2:	f7fd fdc5 	bl	401a80 <__aeabi_i2d>
  403ef6:	463a      	mov	r2, r7
  403ef8:	4643      	mov	r3, r8
  403efa:	f7fd fe27 	bl	401b4c <__aeabi_dmul>
  403efe:	4b99      	ldr	r3, [pc, #612]	; (404164 <_dtoa_r+0xa74>)
  403f00:	2200      	movs	r2, #0
  403f02:	f7fd fc71 	bl	4017e8 <__adddf3>
  403f06:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403f08:	4605      	mov	r5, r0
  403f0a:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  403f0e:	2b00      	cmp	r3, #0
  403f10:	f000 813e 	beq.w	404190 <_dtoa_r+0xaa0>
  403f14:	9b02      	ldr	r3, [sp, #8]
  403f16:	9315      	str	r3, [sp, #84]	; 0x54
  403f18:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403f1a:	9312      	str	r3, [sp, #72]	; 0x48
  403f1c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403f1e:	2b00      	cmp	r3, #0
  403f20:	f000 81fa 	beq.w	404318 <_dtoa_r+0xc28>
  403f24:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403f26:	4b8c      	ldr	r3, [pc, #560]	; (404158 <_dtoa_r+0xa68>)
  403f28:	498f      	ldr	r1, [pc, #572]	; (404168 <_dtoa_r+0xa78>)
  403f2a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403f2e:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  403f32:	2000      	movs	r0, #0
  403f34:	f7fd ff34 	bl	401da0 <__aeabi_ddiv>
  403f38:	462a      	mov	r2, r5
  403f3a:	4633      	mov	r3, r6
  403f3c:	f7fd fc52 	bl	4017e4 <__aeabi_dsub>
  403f40:	4682      	mov	sl, r0
  403f42:	468b      	mov	fp, r1
  403f44:	4638      	mov	r0, r7
  403f46:	4641      	mov	r1, r8
  403f48:	f001 ff7a 	bl	405e40 <__aeabi_d2iz>
  403f4c:	4605      	mov	r5, r0
  403f4e:	f7fd fd97 	bl	401a80 <__aeabi_i2d>
  403f52:	4602      	mov	r2, r0
  403f54:	460b      	mov	r3, r1
  403f56:	4638      	mov	r0, r7
  403f58:	4641      	mov	r1, r8
  403f5a:	f7fd fc43 	bl	4017e4 <__aeabi_dsub>
  403f5e:	3530      	adds	r5, #48	; 0x30
  403f60:	fa5f f885 	uxtb.w	r8, r5
  403f64:	9d04      	ldr	r5, [sp, #16]
  403f66:	4606      	mov	r6, r0
  403f68:	460f      	mov	r7, r1
  403f6a:	f885 8000 	strb.w	r8, [r5]
  403f6e:	4602      	mov	r2, r0
  403f70:	460b      	mov	r3, r1
  403f72:	4650      	mov	r0, sl
  403f74:	4659      	mov	r1, fp
  403f76:	3501      	adds	r5, #1
  403f78:	f001 ff42 	bl	405e00 <__aeabi_dcmpgt>
  403f7c:	2800      	cmp	r0, #0
  403f7e:	d154      	bne.n	40402a <_dtoa_r+0x93a>
  403f80:	4632      	mov	r2, r6
  403f82:	463b      	mov	r3, r7
  403f84:	2000      	movs	r0, #0
  403f86:	4976      	ldr	r1, [pc, #472]	; (404160 <_dtoa_r+0xa70>)
  403f88:	f7fd fc2c 	bl	4017e4 <__aeabi_dsub>
  403f8c:	4602      	mov	r2, r0
  403f8e:	460b      	mov	r3, r1
  403f90:	4650      	mov	r0, sl
  403f92:	4659      	mov	r1, fp
  403f94:	f001 ff34 	bl	405e00 <__aeabi_dcmpgt>
  403f98:	2800      	cmp	r0, #0
  403f9a:	f040 8270 	bne.w	40447e <_dtoa_r+0xd8e>
  403f9e:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403fa0:	2a01      	cmp	r2, #1
  403fa2:	f000 8111 	beq.w	4041c8 <_dtoa_r+0xad8>
  403fa6:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403fa8:	9a04      	ldr	r2, [sp, #16]
  403faa:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  403fae:	4413      	add	r3, r2
  403fb0:	4699      	mov	r9, r3
  403fb2:	e00d      	b.n	403fd0 <_dtoa_r+0x8e0>
  403fb4:	2000      	movs	r0, #0
  403fb6:	496a      	ldr	r1, [pc, #424]	; (404160 <_dtoa_r+0xa70>)
  403fb8:	f7fd fc14 	bl	4017e4 <__aeabi_dsub>
  403fbc:	4652      	mov	r2, sl
  403fbe:	465b      	mov	r3, fp
  403fc0:	f001 ff00 	bl	405dc4 <__aeabi_dcmplt>
  403fc4:	2800      	cmp	r0, #0
  403fc6:	f040 8258 	bne.w	40447a <_dtoa_r+0xd8a>
  403fca:	454d      	cmp	r5, r9
  403fcc:	f000 80fa 	beq.w	4041c4 <_dtoa_r+0xad4>
  403fd0:	4650      	mov	r0, sl
  403fd2:	4659      	mov	r1, fp
  403fd4:	2200      	movs	r2, #0
  403fd6:	4b65      	ldr	r3, [pc, #404]	; (40416c <_dtoa_r+0xa7c>)
  403fd8:	f7fd fdb8 	bl	401b4c <__aeabi_dmul>
  403fdc:	2200      	movs	r2, #0
  403fde:	4b63      	ldr	r3, [pc, #396]	; (40416c <_dtoa_r+0xa7c>)
  403fe0:	4682      	mov	sl, r0
  403fe2:	468b      	mov	fp, r1
  403fe4:	4630      	mov	r0, r6
  403fe6:	4639      	mov	r1, r7
  403fe8:	f7fd fdb0 	bl	401b4c <__aeabi_dmul>
  403fec:	460f      	mov	r7, r1
  403fee:	4606      	mov	r6, r0
  403ff0:	f001 ff26 	bl	405e40 <__aeabi_d2iz>
  403ff4:	4680      	mov	r8, r0
  403ff6:	f7fd fd43 	bl	401a80 <__aeabi_i2d>
  403ffa:	4602      	mov	r2, r0
  403ffc:	460b      	mov	r3, r1
  403ffe:	4630      	mov	r0, r6
  404000:	4639      	mov	r1, r7
  404002:	f7fd fbef 	bl	4017e4 <__aeabi_dsub>
  404006:	f108 0830 	add.w	r8, r8, #48	; 0x30
  40400a:	fa5f f888 	uxtb.w	r8, r8
  40400e:	4652      	mov	r2, sl
  404010:	465b      	mov	r3, fp
  404012:	f805 8b01 	strb.w	r8, [r5], #1
  404016:	4606      	mov	r6, r0
  404018:	460f      	mov	r7, r1
  40401a:	f001 fed3 	bl	405dc4 <__aeabi_dcmplt>
  40401e:	4632      	mov	r2, r6
  404020:	463b      	mov	r3, r7
  404022:	2800      	cmp	r0, #0
  404024:	d0c6      	beq.n	403fb4 <_dtoa_r+0x8c4>
  404026:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  40402a:	9b15      	ldr	r3, [sp, #84]	; 0x54
  40402c:	9302      	str	r3, [sp, #8]
  40402e:	e523      	b.n	403a78 <_dtoa_r+0x388>
  404030:	2300      	movs	r3, #0
  404032:	930b      	str	r3, [sp, #44]	; 0x2c
  404034:	9b25      	ldr	r3, [sp, #148]	; 0x94
  404036:	2b00      	cmp	r3, #0
  404038:	f340 80dc 	ble.w	4041f4 <_dtoa_r+0xb04>
  40403c:	461f      	mov	r7, r3
  40403e:	461e      	mov	r6, r3
  404040:	930f      	str	r3, [sp, #60]	; 0x3c
  404042:	930a      	str	r3, [sp, #40]	; 0x28
  404044:	e6f6      	b.n	403e34 <_dtoa_r+0x744>
  404046:	2301      	movs	r3, #1
  404048:	930b      	str	r3, [sp, #44]	; 0x2c
  40404a:	e7f3      	b.n	404034 <_dtoa_r+0x944>
  40404c:	f1ba 0f00 	cmp.w	sl, #0
  404050:	f47f ada8 	bne.w	403ba4 <_dtoa_r+0x4b4>
  404054:	f3cb 0313 	ubfx	r3, fp, #0, #20
  404058:	2b00      	cmp	r3, #0
  40405a:	f47f adba 	bne.w	403bd2 <_dtoa_r+0x4e2>
  40405e:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  404062:	0d3f      	lsrs	r7, r7, #20
  404064:	053f      	lsls	r7, r7, #20
  404066:	2f00      	cmp	r7, #0
  404068:	f000 820d 	beq.w	404486 <_dtoa_r+0xd96>
  40406c:	9b08      	ldr	r3, [sp, #32]
  40406e:	3301      	adds	r3, #1
  404070:	9308      	str	r3, [sp, #32]
  404072:	9b06      	ldr	r3, [sp, #24]
  404074:	3301      	adds	r3, #1
  404076:	9306      	str	r3, [sp, #24]
  404078:	2301      	movs	r3, #1
  40407a:	930c      	str	r3, [sp, #48]	; 0x30
  40407c:	e5ab      	b.n	403bd6 <_dtoa_r+0x4e6>
  40407e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404080:	2b00      	cmp	r3, #0
  404082:	f73f ac42 	bgt.w	40390a <_dtoa_r+0x21a>
  404086:	f040 8221 	bne.w	4044cc <_dtoa_r+0xddc>
  40408a:	2200      	movs	r2, #0
  40408c:	4b38      	ldr	r3, [pc, #224]	; (404170 <_dtoa_r+0xa80>)
  40408e:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  404092:	f7fd fd5b 	bl	401b4c <__aeabi_dmul>
  404096:	4652      	mov	r2, sl
  404098:	465b      	mov	r3, fp
  40409a:	f001 fea7 	bl	405dec <__aeabi_dcmpge>
  40409e:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  4040a2:	4646      	mov	r6, r8
  4040a4:	2800      	cmp	r0, #0
  4040a6:	d041      	beq.n	40412c <_dtoa_r+0xa3c>
  4040a8:	9b25      	ldr	r3, [sp, #148]	; 0x94
  4040aa:	9d04      	ldr	r5, [sp, #16]
  4040ac:	43db      	mvns	r3, r3
  4040ae:	9302      	str	r3, [sp, #8]
  4040b0:	4641      	mov	r1, r8
  4040b2:	4620      	mov	r0, r4
  4040b4:	f000 fe40 	bl	404d38 <_Bfree>
  4040b8:	2e00      	cmp	r6, #0
  4040ba:	f43f acdd 	beq.w	403a78 <_dtoa_r+0x388>
  4040be:	e6a7      	b.n	403e10 <_dtoa_r+0x720>
  4040c0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4040c2:	4649      	mov	r1, r9
  4040c4:	4620      	mov	r0, r4
  4040c6:	f000 ff6d 	bl	404fa4 <__pow5mult>
  4040ca:	4681      	mov	r9, r0
  4040cc:	e558      	b.n	403b80 <_dtoa_r+0x490>
  4040ce:	9a14      	ldr	r2, [sp, #80]	; 0x50
  4040d0:	2a00      	cmp	r2, #0
  4040d2:	f000 8187 	beq.w	4043e4 <_dtoa_r+0xcf4>
  4040d6:	f203 4333 	addw	r3, r3, #1075	; 0x433
  4040da:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  4040dc:	9d08      	ldr	r5, [sp, #32]
  4040de:	e4f2      	b.n	403ac6 <_dtoa_r+0x3d6>
  4040e0:	f1ba 0f00 	cmp.w	sl, #0
  4040e4:	f47f ad75 	bne.w	403bd2 <_dtoa_r+0x4e2>
  4040e8:	e7b4      	b.n	404054 <_dtoa_r+0x964>
  4040ea:	f000 fe2f 	bl	404d4c <__multadd>
  4040ee:	4647      	mov	r7, r8
  4040f0:	4606      	mov	r6, r0
  4040f2:	4683      	mov	fp, r0
  4040f4:	e5be      	b.n	403c74 <_dtoa_r+0x584>
  4040f6:	4601      	mov	r1, r0
  4040f8:	4620      	mov	r0, r4
  4040fa:	9306      	str	r3, [sp, #24]
  4040fc:	f000 fe1c 	bl	404d38 <_Bfree>
  404100:	2201      	movs	r2, #1
  404102:	9b06      	ldr	r3, [sp, #24]
  404104:	e5e0      	b.n	403cc8 <_dtoa_r+0x5d8>
  404106:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404108:	2b02      	cmp	r3, #2
  40410a:	f77f ad96 	ble.w	403c3a <_dtoa_r+0x54a>
  40410e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404110:	2b00      	cmp	r3, #0
  404112:	d1c9      	bne.n	4040a8 <_dtoa_r+0x9b8>
  404114:	4641      	mov	r1, r8
  404116:	2205      	movs	r2, #5
  404118:	4620      	mov	r0, r4
  40411a:	f000 fe17 	bl	404d4c <__multadd>
  40411e:	4601      	mov	r1, r0
  404120:	4680      	mov	r8, r0
  404122:	4648      	mov	r0, r9
  404124:	f000 ffe0 	bl	4050e8 <__mcmp>
  404128:	2800      	cmp	r0, #0
  40412a:	ddbd      	ble.n	4040a8 <_dtoa_r+0x9b8>
  40412c:	9a02      	ldr	r2, [sp, #8]
  40412e:	9904      	ldr	r1, [sp, #16]
  404130:	2331      	movs	r3, #49	; 0x31
  404132:	3201      	adds	r2, #1
  404134:	9202      	str	r2, [sp, #8]
  404136:	700b      	strb	r3, [r1, #0]
  404138:	1c4d      	adds	r5, r1, #1
  40413a:	e7b9      	b.n	4040b0 <_dtoa_r+0x9c0>
  40413c:	9a02      	ldr	r2, [sp, #8]
  40413e:	3201      	adds	r2, #1
  404140:	9202      	str	r2, [sp, #8]
  404142:	9a04      	ldr	r2, [sp, #16]
  404144:	2331      	movs	r3, #49	; 0x31
  404146:	7013      	strb	r3, [r2, #0]
  404148:	e652      	b.n	403df0 <_dtoa_r+0x700>
  40414a:	2301      	movs	r3, #1
  40414c:	930b      	str	r3, [sp, #44]	; 0x2c
  40414e:	e666      	b.n	403e1e <_dtoa_r+0x72e>
  404150:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  404154:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  404156:	e48f      	b.n	403a78 <_dtoa_r+0x388>
  404158:	00406cc0 	.word	0x00406cc0
  40415c:	00406c98 	.word	0x00406c98
  404160:	3ff00000 	.word	0x3ff00000
  404164:	401c0000 	.word	0x401c0000
  404168:	3fe00000 	.word	0x3fe00000
  40416c:	40240000 	.word	0x40240000
  404170:	40140000 	.word	0x40140000
  404174:	4650      	mov	r0, sl
  404176:	f7fd fc83 	bl	401a80 <__aeabi_i2d>
  40417a:	463a      	mov	r2, r7
  40417c:	4643      	mov	r3, r8
  40417e:	f7fd fce5 	bl	401b4c <__aeabi_dmul>
  404182:	2200      	movs	r2, #0
  404184:	4bc1      	ldr	r3, [pc, #772]	; (40448c <_dtoa_r+0xd9c>)
  404186:	f7fd fb2f 	bl	4017e8 <__adddf3>
  40418a:	4605      	mov	r5, r0
  40418c:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  404190:	4641      	mov	r1, r8
  404192:	2200      	movs	r2, #0
  404194:	4bbe      	ldr	r3, [pc, #760]	; (404490 <_dtoa_r+0xda0>)
  404196:	4638      	mov	r0, r7
  404198:	f7fd fb24 	bl	4017e4 <__aeabi_dsub>
  40419c:	462a      	mov	r2, r5
  40419e:	4633      	mov	r3, r6
  4041a0:	4682      	mov	sl, r0
  4041a2:	468b      	mov	fp, r1
  4041a4:	f001 fe2c 	bl	405e00 <__aeabi_dcmpgt>
  4041a8:	4680      	mov	r8, r0
  4041aa:	2800      	cmp	r0, #0
  4041ac:	f040 8110 	bne.w	4043d0 <_dtoa_r+0xce0>
  4041b0:	462a      	mov	r2, r5
  4041b2:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
  4041b6:	4650      	mov	r0, sl
  4041b8:	4659      	mov	r1, fp
  4041ba:	f001 fe03 	bl	405dc4 <__aeabi_dcmplt>
  4041be:	b118      	cbz	r0, 4041c8 <_dtoa_r+0xad8>
  4041c0:	4646      	mov	r6, r8
  4041c2:	e771      	b.n	4040a8 <_dtoa_r+0x9b8>
  4041c4:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  4041c8:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  4041cc:	f7ff bb8a 	b.w	4038e4 <_dtoa_r+0x1f4>
  4041d0:	9804      	ldr	r0, [sp, #16]
  4041d2:	f7ff babb 	b.w	40374c <_dtoa_r+0x5c>
  4041d6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4041d8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  4041da:	970c      	str	r7, [sp, #48]	; 0x30
  4041dc:	1afb      	subs	r3, r7, r3
  4041de:	441a      	add	r2, r3
  4041e0:	920d      	str	r2, [sp, #52]	; 0x34
  4041e2:	2700      	movs	r7, #0
  4041e4:	e469      	b.n	403aba <_dtoa_r+0x3ca>
  4041e6:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  4041ea:	f04f 0a02 	mov.w	sl, #2
  4041ee:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  4041f2:	e657      	b.n	403ea4 <_dtoa_r+0x7b4>
  4041f4:	2100      	movs	r1, #0
  4041f6:	2301      	movs	r3, #1
  4041f8:	6461      	str	r1, [r4, #68]	; 0x44
  4041fa:	4620      	mov	r0, r4
  4041fc:	9325      	str	r3, [sp, #148]	; 0x94
  4041fe:	f000 fd75 	bl	404cec <_Balloc>
  404202:	9b25      	ldr	r3, [sp, #148]	; 0x94
  404204:	9004      	str	r0, [sp, #16]
  404206:	6420      	str	r0, [r4, #64]	; 0x40
  404208:	930a      	str	r3, [sp, #40]	; 0x28
  40420a:	930f      	str	r3, [sp, #60]	; 0x3c
  40420c:	e629      	b.n	403e62 <_dtoa_r+0x772>
  40420e:	2a00      	cmp	r2, #0
  404210:	46d0      	mov	r8, sl
  404212:	f8cd b018 	str.w	fp, [sp, #24]
  404216:	469a      	mov	sl, r3
  404218:	dd11      	ble.n	40423e <_dtoa_r+0xb4e>
  40421a:	4649      	mov	r1, r9
  40421c:	2201      	movs	r2, #1
  40421e:	4620      	mov	r0, r4
  404220:	f000 ff10 	bl	405044 <__lshift>
  404224:	4641      	mov	r1, r8
  404226:	4681      	mov	r9, r0
  404228:	f000 ff5e 	bl	4050e8 <__mcmp>
  40422c:	2800      	cmp	r0, #0
  40422e:	f340 8146 	ble.w	4044be <_dtoa_r+0xdce>
  404232:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  404236:	f000 8106 	beq.w	404446 <_dtoa_r+0xd56>
  40423a:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  40423e:	46b3      	mov	fp, r6
  404240:	f887 a000 	strb.w	sl, [r7]
  404244:	1c7d      	adds	r5, r7, #1
  404246:	9e06      	ldr	r6, [sp, #24]
  404248:	e5d2      	b.n	403df0 <_dtoa_r+0x700>
  40424a:	d104      	bne.n	404256 <_dtoa_r+0xb66>
  40424c:	f01a 0f01 	tst.w	sl, #1
  404250:	d001      	beq.n	404256 <_dtoa_r+0xb66>
  404252:	e5bd      	b.n	403dd0 <_dtoa_r+0x6e0>
  404254:	4615      	mov	r5, r2
  404256:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  40425a:	2b30      	cmp	r3, #48	; 0x30
  40425c:	f105 32ff 	add.w	r2, r5, #4294967295
  404260:	d0f8      	beq.n	404254 <_dtoa_r+0xb64>
  404262:	e5c5      	b.n	403df0 <_dtoa_r+0x700>
  404264:	9904      	ldr	r1, [sp, #16]
  404266:	2230      	movs	r2, #48	; 0x30
  404268:	700a      	strb	r2, [r1, #0]
  40426a:	9a02      	ldr	r2, [sp, #8]
  40426c:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  404270:	3201      	adds	r2, #1
  404272:	9202      	str	r2, [sp, #8]
  404274:	f7ff bbfc 	b.w	403a70 <_dtoa_r+0x380>
  404278:	f000 80bb 	beq.w	4043f2 <_dtoa_r+0xd02>
  40427c:	9b02      	ldr	r3, [sp, #8]
  40427e:	425d      	negs	r5, r3
  404280:	4b84      	ldr	r3, [pc, #528]	; (404494 <_dtoa_r+0xda4>)
  404282:	f005 020f 	and.w	r2, r5, #15
  404286:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  40428a:	e9d3 2300 	ldrd	r2, r3, [r3]
  40428e:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  404292:	f7fd fc5b 	bl	401b4c <__aeabi_dmul>
  404296:	112d      	asrs	r5, r5, #4
  404298:	4607      	mov	r7, r0
  40429a:	4688      	mov	r8, r1
  40429c:	f000 812c 	beq.w	4044f8 <_dtoa_r+0xe08>
  4042a0:	4e7d      	ldr	r6, [pc, #500]	; (404498 <_dtoa_r+0xda8>)
  4042a2:	f04f 0a02 	mov.w	sl, #2
  4042a6:	07eb      	lsls	r3, r5, #31
  4042a8:	d509      	bpl.n	4042be <_dtoa_r+0xbce>
  4042aa:	4638      	mov	r0, r7
  4042ac:	4641      	mov	r1, r8
  4042ae:	e9d6 2300 	ldrd	r2, r3, [r6]
  4042b2:	f7fd fc4b 	bl	401b4c <__aeabi_dmul>
  4042b6:	f10a 0a01 	add.w	sl, sl, #1
  4042ba:	4607      	mov	r7, r0
  4042bc:	4688      	mov	r8, r1
  4042be:	106d      	asrs	r5, r5, #1
  4042c0:	f106 0608 	add.w	r6, r6, #8
  4042c4:	d1ef      	bne.n	4042a6 <_dtoa_r+0xbb6>
  4042c6:	e608      	b.n	403eda <_dtoa_r+0x7ea>
  4042c8:	6871      	ldr	r1, [r6, #4]
  4042ca:	4620      	mov	r0, r4
  4042cc:	f000 fd0e 	bl	404cec <_Balloc>
  4042d0:	6933      	ldr	r3, [r6, #16]
  4042d2:	3302      	adds	r3, #2
  4042d4:	009a      	lsls	r2, r3, #2
  4042d6:	4605      	mov	r5, r0
  4042d8:	f106 010c 	add.w	r1, r6, #12
  4042dc:	300c      	adds	r0, #12
  4042de:	f000 fc5f 	bl	404ba0 <memcpy>
  4042e2:	4629      	mov	r1, r5
  4042e4:	2201      	movs	r2, #1
  4042e6:	4620      	mov	r0, r4
  4042e8:	f000 feac 	bl	405044 <__lshift>
  4042ec:	9006      	str	r0, [sp, #24]
  4042ee:	e4b5      	b.n	403c5c <_dtoa_r+0x56c>
  4042f0:	2b39      	cmp	r3, #57	; 0x39
  4042f2:	f8cd b018 	str.w	fp, [sp, #24]
  4042f6:	46d0      	mov	r8, sl
  4042f8:	f000 80a5 	beq.w	404446 <_dtoa_r+0xd56>
  4042fc:	f103 0a01 	add.w	sl, r3, #1
  404300:	46b3      	mov	fp, r6
  404302:	f887 a000 	strb.w	sl, [r7]
  404306:	1c7d      	adds	r5, r7, #1
  404308:	9e06      	ldr	r6, [sp, #24]
  40430a:	e571      	b.n	403df0 <_dtoa_r+0x700>
  40430c:	465a      	mov	r2, fp
  40430e:	46d0      	mov	r8, sl
  404310:	46b3      	mov	fp, r6
  404312:	469a      	mov	sl, r3
  404314:	4616      	mov	r6, r2
  404316:	e54f      	b.n	403db8 <_dtoa_r+0x6c8>
  404318:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40431a:	495e      	ldr	r1, [pc, #376]	; (404494 <_dtoa_r+0xda4>)
  40431c:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  404320:	462a      	mov	r2, r5
  404322:	4633      	mov	r3, r6
  404324:	e951 0102 	ldrd	r0, r1, [r1, #-8]
  404328:	f7fd fc10 	bl	401b4c <__aeabi_dmul>
  40432c:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
  404330:	4638      	mov	r0, r7
  404332:	4641      	mov	r1, r8
  404334:	f001 fd84 	bl	405e40 <__aeabi_d2iz>
  404338:	4605      	mov	r5, r0
  40433a:	f7fd fba1 	bl	401a80 <__aeabi_i2d>
  40433e:	460b      	mov	r3, r1
  404340:	4602      	mov	r2, r0
  404342:	4641      	mov	r1, r8
  404344:	4638      	mov	r0, r7
  404346:	f7fd fa4d 	bl	4017e4 <__aeabi_dsub>
  40434a:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40434c:	460f      	mov	r7, r1
  40434e:	9904      	ldr	r1, [sp, #16]
  404350:	3530      	adds	r5, #48	; 0x30
  404352:	2b01      	cmp	r3, #1
  404354:	700d      	strb	r5, [r1, #0]
  404356:	4606      	mov	r6, r0
  404358:	f101 0501 	add.w	r5, r1, #1
  40435c:	d026      	beq.n	4043ac <_dtoa_r+0xcbc>
  40435e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404360:	9a04      	ldr	r2, [sp, #16]
  404362:	f8df b13c 	ldr.w	fp, [pc, #316]	; 4044a0 <_dtoa_r+0xdb0>
  404366:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  40436a:	4413      	add	r3, r2
  40436c:	f04f 0a00 	mov.w	sl, #0
  404370:	4699      	mov	r9, r3
  404372:	4652      	mov	r2, sl
  404374:	465b      	mov	r3, fp
  404376:	4630      	mov	r0, r6
  404378:	4639      	mov	r1, r7
  40437a:	f7fd fbe7 	bl	401b4c <__aeabi_dmul>
  40437e:	460f      	mov	r7, r1
  404380:	4606      	mov	r6, r0
  404382:	f001 fd5d 	bl	405e40 <__aeabi_d2iz>
  404386:	4680      	mov	r8, r0
  404388:	f7fd fb7a 	bl	401a80 <__aeabi_i2d>
  40438c:	f108 0830 	add.w	r8, r8, #48	; 0x30
  404390:	4602      	mov	r2, r0
  404392:	460b      	mov	r3, r1
  404394:	4630      	mov	r0, r6
  404396:	4639      	mov	r1, r7
  404398:	f7fd fa24 	bl	4017e4 <__aeabi_dsub>
  40439c:	f805 8b01 	strb.w	r8, [r5], #1
  4043a0:	454d      	cmp	r5, r9
  4043a2:	4606      	mov	r6, r0
  4043a4:	460f      	mov	r7, r1
  4043a6:	d1e4      	bne.n	404372 <_dtoa_r+0xc82>
  4043a8:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  4043ac:	4b3b      	ldr	r3, [pc, #236]	; (40449c <_dtoa_r+0xdac>)
  4043ae:	2200      	movs	r2, #0
  4043b0:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  4043b4:	f7fd fa18 	bl	4017e8 <__adddf3>
  4043b8:	4632      	mov	r2, r6
  4043ba:	463b      	mov	r3, r7
  4043bc:	f001 fd02 	bl	405dc4 <__aeabi_dcmplt>
  4043c0:	2800      	cmp	r0, #0
  4043c2:	d046      	beq.n	404452 <_dtoa_r+0xd62>
  4043c4:	9b15      	ldr	r3, [sp, #84]	; 0x54
  4043c6:	9302      	str	r3, [sp, #8]
  4043c8:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  4043cc:	f7ff bb43 	b.w	403a56 <_dtoa_r+0x366>
  4043d0:	f04f 0800 	mov.w	r8, #0
  4043d4:	4646      	mov	r6, r8
  4043d6:	e6a9      	b.n	40412c <_dtoa_r+0xa3c>
  4043d8:	9b08      	ldr	r3, [sp, #32]
  4043da:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4043dc:	1a9d      	subs	r5, r3, r2
  4043de:	2300      	movs	r3, #0
  4043e0:	f7ff bb71 	b.w	403ac6 <_dtoa_r+0x3d6>
  4043e4:	9b18      	ldr	r3, [sp, #96]	; 0x60
  4043e6:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  4043e8:	9d08      	ldr	r5, [sp, #32]
  4043ea:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  4043ee:	f7ff bb6a 	b.w	403ac6 <_dtoa_r+0x3d6>
  4043f2:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
  4043f6:	f04f 0a02 	mov.w	sl, #2
  4043fa:	e56e      	b.n	403eda <_dtoa_r+0x7ea>
  4043fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4043fe:	2b00      	cmp	r3, #0
  404400:	f43f aeb8 	beq.w	404174 <_dtoa_r+0xa84>
  404404:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404406:	2b00      	cmp	r3, #0
  404408:	f77f aede 	ble.w	4041c8 <_dtoa_r+0xad8>
  40440c:	2200      	movs	r2, #0
  40440e:	4b24      	ldr	r3, [pc, #144]	; (4044a0 <_dtoa_r+0xdb0>)
  404410:	4638      	mov	r0, r7
  404412:	4641      	mov	r1, r8
  404414:	f7fd fb9a 	bl	401b4c <__aeabi_dmul>
  404418:	4607      	mov	r7, r0
  40441a:	4688      	mov	r8, r1
  40441c:	f10a 0001 	add.w	r0, sl, #1
  404420:	f7fd fb2e 	bl	401a80 <__aeabi_i2d>
  404424:	463a      	mov	r2, r7
  404426:	4643      	mov	r3, r8
  404428:	f7fd fb90 	bl	401b4c <__aeabi_dmul>
  40442c:	2200      	movs	r2, #0
  40442e:	4b17      	ldr	r3, [pc, #92]	; (40448c <_dtoa_r+0xd9c>)
  404430:	f7fd f9da 	bl	4017e8 <__adddf3>
  404434:	9a02      	ldr	r2, [sp, #8]
  404436:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404438:	9312      	str	r3, [sp, #72]	; 0x48
  40443a:	3a01      	subs	r2, #1
  40443c:	4605      	mov	r5, r0
  40443e:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  404442:	9215      	str	r2, [sp, #84]	; 0x54
  404444:	e56a      	b.n	403f1c <_dtoa_r+0x82c>
  404446:	2239      	movs	r2, #57	; 0x39
  404448:	46b3      	mov	fp, r6
  40444a:	703a      	strb	r2, [r7, #0]
  40444c:	9e06      	ldr	r6, [sp, #24]
  40444e:	1c7d      	adds	r5, r7, #1
  404450:	e4c0      	b.n	403dd4 <_dtoa_r+0x6e4>
  404452:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  404456:	2000      	movs	r0, #0
  404458:	4910      	ldr	r1, [pc, #64]	; (40449c <_dtoa_r+0xdac>)
  40445a:	f7fd f9c3 	bl	4017e4 <__aeabi_dsub>
  40445e:	4632      	mov	r2, r6
  404460:	463b      	mov	r3, r7
  404462:	f001 fccd 	bl	405e00 <__aeabi_dcmpgt>
  404466:	b908      	cbnz	r0, 40446c <_dtoa_r+0xd7c>
  404468:	e6ae      	b.n	4041c8 <_dtoa_r+0xad8>
  40446a:	4615      	mov	r5, r2
  40446c:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  404470:	2b30      	cmp	r3, #48	; 0x30
  404472:	f105 32ff 	add.w	r2, r5, #4294967295
  404476:	d0f8      	beq.n	40446a <_dtoa_r+0xd7a>
  404478:	e5d7      	b.n	40402a <_dtoa_r+0x93a>
  40447a:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  40447e:	9b15      	ldr	r3, [sp, #84]	; 0x54
  404480:	9302      	str	r3, [sp, #8]
  404482:	f7ff bae8 	b.w	403a56 <_dtoa_r+0x366>
  404486:	970c      	str	r7, [sp, #48]	; 0x30
  404488:	f7ff bba5 	b.w	403bd6 <_dtoa_r+0x4e6>
  40448c:	401c0000 	.word	0x401c0000
  404490:	40140000 	.word	0x40140000
  404494:	00406cc0 	.word	0x00406cc0
  404498:	00406c98 	.word	0x00406c98
  40449c:	3fe00000 	.word	0x3fe00000
  4044a0:	40240000 	.word	0x40240000
  4044a4:	2b39      	cmp	r3, #57	; 0x39
  4044a6:	f8cd b018 	str.w	fp, [sp, #24]
  4044aa:	46d0      	mov	r8, sl
  4044ac:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  4044b0:	469a      	mov	sl, r3
  4044b2:	d0c8      	beq.n	404446 <_dtoa_r+0xd56>
  4044b4:	f1bb 0f00 	cmp.w	fp, #0
  4044b8:	f73f aebf 	bgt.w	40423a <_dtoa_r+0xb4a>
  4044bc:	e6bf      	b.n	40423e <_dtoa_r+0xb4e>
  4044be:	f47f aebe 	bne.w	40423e <_dtoa_r+0xb4e>
  4044c2:	f01a 0f01 	tst.w	sl, #1
  4044c6:	f43f aeba 	beq.w	40423e <_dtoa_r+0xb4e>
  4044ca:	e6b2      	b.n	404232 <_dtoa_r+0xb42>
  4044cc:	f04f 0800 	mov.w	r8, #0
  4044d0:	4646      	mov	r6, r8
  4044d2:	e5e9      	b.n	4040a8 <_dtoa_r+0x9b8>
  4044d4:	4631      	mov	r1, r6
  4044d6:	2300      	movs	r3, #0
  4044d8:	220a      	movs	r2, #10
  4044da:	4620      	mov	r0, r4
  4044dc:	f000 fc36 	bl	404d4c <__multadd>
  4044e0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4044e2:	2b00      	cmp	r3, #0
  4044e4:	4606      	mov	r6, r0
  4044e6:	dd0a      	ble.n	4044fe <_dtoa_r+0xe0e>
  4044e8:	930a      	str	r3, [sp, #40]	; 0x28
  4044ea:	f7ff bbaa 	b.w	403c42 <_dtoa_r+0x552>
  4044ee:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4044f0:	2b02      	cmp	r3, #2
  4044f2:	dc23      	bgt.n	40453c <_dtoa_r+0xe4c>
  4044f4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4044f6:	e43b      	b.n	403d70 <_dtoa_r+0x680>
  4044f8:	f04f 0a02 	mov.w	sl, #2
  4044fc:	e4ed      	b.n	403eda <_dtoa_r+0x7ea>
  4044fe:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404500:	2b02      	cmp	r3, #2
  404502:	dc1b      	bgt.n	40453c <_dtoa_r+0xe4c>
  404504:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404506:	e7ef      	b.n	4044e8 <_dtoa_r+0xdf8>
  404508:	2500      	movs	r5, #0
  40450a:	6465      	str	r5, [r4, #68]	; 0x44
  40450c:	4629      	mov	r1, r5
  40450e:	4620      	mov	r0, r4
  404510:	f000 fbec 	bl	404cec <_Balloc>
  404514:	f04f 33ff 	mov.w	r3, #4294967295
  404518:	930a      	str	r3, [sp, #40]	; 0x28
  40451a:	930f      	str	r3, [sp, #60]	; 0x3c
  40451c:	2301      	movs	r3, #1
  40451e:	9004      	str	r0, [sp, #16]
  404520:	9525      	str	r5, [sp, #148]	; 0x94
  404522:	6420      	str	r0, [r4, #64]	; 0x40
  404524:	930b      	str	r3, [sp, #44]	; 0x2c
  404526:	f7ff b9dd 	b.w	4038e4 <_dtoa_r+0x1f4>
  40452a:	2501      	movs	r5, #1
  40452c:	f7ff b9a5 	b.w	40387a <_dtoa_r+0x18a>
  404530:	f43f ab69 	beq.w	403c06 <_dtoa_r+0x516>
  404534:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  404538:	f7ff bbf9 	b.w	403d2e <_dtoa_r+0x63e>
  40453c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40453e:	930a      	str	r3, [sp, #40]	; 0x28
  404540:	e5e5      	b.n	40410e <_dtoa_r+0xa1e>
  404542:	bf00      	nop

00404544 <__libc_fini_array>:
  404544:	b538      	push	{r3, r4, r5, lr}
  404546:	4c0a      	ldr	r4, [pc, #40]	; (404570 <__libc_fini_array+0x2c>)
  404548:	4d0a      	ldr	r5, [pc, #40]	; (404574 <__libc_fini_array+0x30>)
  40454a:	1b64      	subs	r4, r4, r5
  40454c:	10a4      	asrs	r4, r4, #2
  40454e:	d00a      	beq.n	404566 <__libc_fini_array+0x22>
  404550:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  404554:	3b01      	subs	r3, #1
  404556:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  40455a:	3c01      	subs	r4, #1
  40455c:	f855 3904 	ldr.w	r3, [r5], #-4
  404560:	4798      	blx	r3
  404562:	2c00      	cmp	r4, #0
  404564:	d1f9      	bne.n	40455a <__libc_fini_array+0x16>
  404566:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  40456a:	f002 bca7 	b.w	406ebc <_fini>
  40456e:	bf00      	nop
  404570:	00406ecc 	.word	0x00406ecc
  404574:	00406ec8 	.word	0x00406ec8

00404578 <_localeconv_r>:
  404578:	4a04      	ldr	r2, [pc, #16]	; (40458c <_localeconv_r+0x14>)
  40457a:	4b05      	ldr	r3, [pc, #20]	; (404590 <_localeconv_r+0x18>)
  40457c:	6812      	ldr	r2, [r2, #0]
  40457e:	6b50      	ldr	r0, [r2, #52]	; 0x34
  404580:	2800      	cmp	r0, #0
  404582:	bf08      	it	eq
  404584:	4618      	moveq	r0, r3
  404586:	30f0      	adds	r0, #240	; 0xf0
  404588:	4770      	bx	lr
  40458a:	bf00      	nop
  40458c:	20400020 	.word	0x20400020
  404590:	20400864 	.word	0x20400864

00404594 <__retarget_lock_acquire_recursive>:
  404594:	4770      	bx	lr
  404596:	bf00      	nop

00404598 <__retarget_lock_release_recursive>:
  404598:	4770      	bx	lr
  40459a:	bf00      	nop

0040459c <_malloc_r>:
  40459c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4045a0:	f101 060b 	add.w	r6, r1, #11
  4045a4:	2e16      	cmp	r6, #22
  4045a6:	b083      	sub	sp, #12
  4045a8:	4605      	mov	r5, r0
  4045aa:	f240 809e 	bls.w	4046ea <_malloc_r+0x14e>
  4045ae:	f036 0607 	bics.w	r6, r6, #7
  4045b2:	f100 80bd 	bmi.w	404730 <_malloc_r+0x194>
  4045b6:	42b1      	cmp	r1, r6
  4045b8:	f200 80ba 	bhi.w	404730 <_malloc_r+0x194>
  4045bc:	f000 fb8a 	bl	404cd4 <__malloc_lock>
  4045c0:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  4045c4:	f0c0 8293 	bcc.w	404aee <_malloc_r+0x552>
  4045c8:	0a73      	lsrs	r3, r6, #9
  4045ca:	f000 80b8 	beq.w	40473e <_malloc_r+0x1a2>
  4045ce:	2b04      	cmp	r3, #4
  4045d0:	f200 8179 	bhi.w	4048c6 <_malloc_r+0x32a>
  4045d4:	09b3      	lsrs	r3, r6, #6
  4045d6:	f103 0039 	add.w	r0, r3, #57	; 0x39
  4045da:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  4045de:	00c3      	lsls	r3, r0, #3
  4045e0:	4fbf      	ldr	r7, [pc, #764]	; (4048e0 <_malloc_r+0x344>)
  4045e2:	443b      	add	r3, r7
  4045e4:	f1a3 0108 	sub.w	r1, r3, #8
  4045e8:	685c      	ldr	r4, [r3, #4]
  4045ea:	42a1      	cmp	r1, r4
  4045ec:	d106      	bne.n	4045fc <_malloc_r+0x60>
  4045ee:	e00c      	b.n	40460a <_malloc_r+0x6e>
  4045f0:	2a00      	cmp	r2, #0
  4045f2:	f280 80aa 	bge.w	40474a <_malloc_r+0x1ae>
  4045f6:	68e4      	ldr	r4, [r4, #12]
  4045f8:	42a1      	cmp	r1, r4
  4045fa:	d006      	beq.n	40460a <_malloc_r+0x6e>
  4045fc:	6863      	ldr	r3, [r4, #4]
  4045fe:	f023 0303 	bic.w	r3, r3, #3
  404602:	1b9a      	subs	r2, r3, r6
  404604:	2a0f      	cmp	r2, #15
  404606:	ddf3      	ble.n	4045f0 <_malloc_r+0x54>
  404608:	4670      	mov	r0, lr
  40460a:	693c      	ldr	r4, [r7, #16]
  40460c:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 4048f4 <_malloc_r+0x358>
  404610:	4574      	cmp	r4, lr
  404612:	f000 81ab 	beq.w	40496c <_malloc_r+0x3d0>
  404616:	6863      	ldr	r3, [r4, #4]
  404618:	f023 0303 	bic.w	r3, r3, #3
  40461c:	1b9a      	subs	r2, r3, r6
  40461e:	2a0f      	cmp	r2, #15
  404620:	f300 8190 	bgt.w	404944 <_malloc_r+0x3a8>
  404624:	2a00      	cmp	r2, #0
  404626:	f8c7 e014 	str.w	lr, [r7, #20]
  40462a:	f8c7 e010 	str.w	lr, [r7, #16]
  40462e:	f280 809d 	bge.w	40476c <_malloc_r+0x1d0>
  404632:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  404636:	f080 8161 	bcs.w	4048fc <_malloc_r+0x360>
  40463a:	08db      	lsrs	r3, r3, #3
  40463c:	f103 0c01 	add.w	ip, r3, #1
  404640:	1099      	asrs	r1, r3, #2
  404642:	687a      	ldr	r2, [r7, #4]
  404644:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  404648:	f8c4 8008 	str.w	r8, [r4, #8]
  40464c:	2301      	movs	r3, #1
  40464e:	408b      	lsls	r3, r1
  404650:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  404654:	4313      	orrs	r3, r2
  404656:	3908      	subs	r1, #8
  404658:	60e1      	str	r1, [r4, #12]
  40465a:	607b      	str	r3, [r7, #4]
  40465c:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  404660:	f8c8 400c 	str.w	r4, [r8, #12]
  404664:	1082      	asrs	r2, r0, #2
  404666:	2401      	movs	r4, #1
  404668:	4094      	lsls	r4, r2
  40466a:	429c      	cmp	r4, r3
  40466c:	f200 808b 	bhi.w	404786 <_malloc_r+0x1ea>
  404670:	421c      	tst	r4, r3
  404672:	d106      	bne.n	404682 <_malloc_r+0xe6>
  404674:	f020 0003 	bic.w	r0, r0, #3
  404678:	0064      	lsls	r4, r4, #1
  40467a:	421c      	tst	r4, r3
  40467c:	f100 0004 	add.w	r0, r0, #4
  404680:	d0fa      	beq.n	404678 <_malloc_r+0xdc>
  404682:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  404686:	46cc      	mov	ip, r9
  404688:	4680      	mov	r8, r0
  40468a:	f8dc 300c 	ldr.w	r3, [ip, #12]
  40468e:	459c      	cmp	ip, r3
  404690:	d107      	bne.n	4046a2 <_malloc_r+0x106>
  404692:	e16d      	b.n	404970 <_malloc_r+0x3d4>
  404694:	2a00      	cmp	r2, #0
  404696:	f280 817b 	bge.w	404990 <_malloc_r+0x3f4>
  40469a:	68db      	ldr	r3, [r3, #12]
  40469c:	459c      	cmp	ip, r3
  40469e:	f000 8167 	beq.w	404970 <_malloc_r+0x3d4>
  4046a2:	6859      	ldr	r1, [r3, #4]
  4046a4:	f021 0103 	bic.w	r1, r1, #3
  4046a8:	1b8a      	subs	r2, r1, r6
  4046aa:	2a0f      	cmp	r2, #15
  4046ac:	ddf2      	ble.n	404694 <_malloc_r+0xf8>
  4046ae:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  4046b2:	f8d3 8008 	ldr.w	r8, [r3, #8]
  4046b6:	9300      	str	r3, [sp, #0]
  4046b8:	199c      	adds	r4, r3, r6
  4046ba:	4628      	mov	r0, r5
  4046bc:	f046 0601 	orr.w	r6, r6, #1
  4046c0:	f042 0501 	orr.w	r5, r2, #1
  4046c4:	605e      	str	r6, [r3, #4]
  4046c6:	f8c8 c00c 	str.w	ip, [r8, #12]
  4046ca:	f8cc 8008 	str.w	r8, [ip, #8]
  4046ce:	617c      	str	r4, [r7, #20]
  4046d0:	613c      	str	r4, [r7, #16]
  4046d2:	f8c4 e00c 	str.w	lr, [r4, #12]
  4046d6:	f8c4 e008 	str.w	lr, [r4, #8]
  4046da:	6065      	str	r5, [r4, #4]
  4046dc:	505a      	str	r2, [r3, r1]
  4046de:	f000 faff 	bl	404ce0 <__malloc_unlock>
  4046e2:	9b00      	ldr	r3, [sp, #0]
  4046e4:	f103 0408 	add.w	r4, r3, #8
  4046e8:	e01e      	b.n	404728 <_malloc_r+0x18c>
  4046ea:	2910      	cmp	r1, #16
  4046ec:	d820      	bhi.n	404730 <_malloc_r+0x194>
  4046ee:	f000 faf1 	bl	404cd4 <__malloc_lock>
  4046f2:	2610      	movs	r6, #16
  4046f4:	2318      	movs	r3, #24
  4046f6:	2002      	movs	r0, #2
  4046f8:	4f79      	ldr	r7, [pc, #484]	; (4048e0 <_malloc_r+0x344>)
  4046fa:	443b      	add	r3, r7
  4046fc:	f1a3 0208 	sub.w	r2, r3, #8
  404700:	685c      	ldr	r4, [r3, #4]
  404702:	4294      	cmp	r4, r2
  404704:	f000 813d 	beq.w	404982 <_malloc_r+0x3e6>
  404708:	6863      	ldr	r3, [r4, #4]
  40470a:	68e1      	ldr	r1, [r4, #12]
  40470c:	68a6      	ldr	r6, [r4, #8]
  40470e:	f023 0303 	bic.w	r3, r3, #3
  404712:	4423      	add	r3, r4
  404714:	4628      	mov	r0, r5
  404716:	685a      	ldr	r2, [r3, #4]
  404718:	60f1      	str	r1, [r6, #12]
  40471a:	f042 0201 	orr.w	r2, r2, #1
  40471e:	608e      	str	r6, [r1, #8]
  404720:	605a      	str	r2, [r3, #4]
  404722:	f000 fadd 	bl	404ce0 <__malloc_unlock>
  404726:	3408      	adds	r4, #8
  404728:	4620      	mov	r0, r4
  40472a:	b003      	add	sp, #12
  40472c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404730:	2400      	movs	r4, #0
  404732:	230c      	movs	r3, #12
  404734:	4620      	mov	r0, r4
  404736:	602b      	str	r3, [r5, #0]
  404738:	b003      	add	sp, #12
  40473a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40473e:	2040      	movs	r0, #64	; 0x40
  404740:	f44f 7300 	mov.w	r3, #512	; 0x200
  404744:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  404748:	e74a      	b.n	4045e0 <_malloc_r+0x44>
  40474a:	4423      	add	r3, r4
  40474c:	68e1      	ldr	r1, [r4, #12]
  40474e:	685a      	ldr	r2, [r3, #4]
  404750:	68a6      	ldr	r6, [r4, #8]
  404752:	f042 0201 	orr.w	r2, r2, #1
  404756:	60f1      	str	r1, [r6, #12]
  404758:	4628      	mov	r0, r5
  40475a:	608e      	str	r6, [r1, #8]
  40475c:	605a      	str	r2, [r3, #4]
  40475e:	f000 fabf 	bl	404ce0 <__malloc_unlock>
  404762:	3408      	adds	r4, #8
  404764:	4620      	mov	r0, r4
  404766:	b003      	add	sp, #12
  404768:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40476c:	4423      	add	r3, r4
  40476e:	4628      	mov	r0, r5
  404770:	685a      	ldr	r2, [r3, #4]
  404772:	f042 0201 	orr.w	r2, r2, #1
  404776:	605a      	str	r2, [r3, #4]
  404778:	f000 fab2 	bl	404ce0 <__malloc_unlock>
  40477c:	3408      	adds	r4, #8
  40477e:	4620      	mov	r0, r4
  404780:	b003      	add	sp, #12
  404782:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404786:	68bc      	ldr	r4, [r7, #8]
  404788:	6863      	ldr	r3, [r4, #4]
  40478a:	f023 0803 	bic.w	r8, r3, #3
  40478e:	45b0      	cmp	r8, r6
  404790:	d304      	bcc.n	40479c <_malloc_r+0x200>
  404792:	eba8 0306 	sub.w	r3, r8, r6
  404796:	2b0f      	cmp	r3, #15
  404798:	f300 8085 	bgt.w	4048a6 <_malloc_r+0x30a>
  40479c:	f8df 9158 	ldr.w	r9, [pc, #344]	; 4048f8 <_malloc_r+0x35c>
  4047a0:	4b50      	ldr	r3, [pc, #320]	; (4048e4 <_malloc_r+0x348>)
  4047a2:	f8d9 2000 	ldr.w	r2, [r9]
  4047a6:	681b      	ldr	r3, [r3, #0]
  4047a8:	3201      	adds	r2, #1
  4047aa:	4433      	add	r3, r6
  4047ac:	eb04 0a08 	add.w	sl, r4, r8
  4047b0:	f000 8155 	beq.w	404a5e <_malloc_r+0x4c2>
  4047b4:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  4047b8:	330f      	adds	r3, #15
  4047ba:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  4047be:	f02b 0b0f 	bic.w	fp, fp, #15
  4047c2:	4659      	mov	r1, fp
  4047c4:	4628      	mov	r0, r5
  4047c6:	f000 fd8b 	bl	4052e0 <_sbrk_r>
  4047ca:	1c41      	adds	r1, r0, #1
  4047cc:	4602      	mov	r2, r0
  4047ce:	f000 80fc 	beq.w	4049ca <_malloc_r+0x42e>
  4047d2:	4582      	cmp	sl, r0
  4047d4:	f200 80f7 	bhi.w	4049c6 <_malloc_r+0x42a>
  4047d8:	4b43      	ldr	r3, [pc, #268]	; (4048e8 <_malloc_r+0x34c>)
  4047da:	6819      	ldr	r1, [r3, #0]
  4047dc:	4459      	add	r1, fp
  4047de:	6019      	str	r1, [r3, #0]
  4047e0:	f000 814d 	beq.w	404a7e <_malloc_r+0x4e2>
  4047e4:	f8d9 0000 	ldr.w	r0, [r9]
  4047e8:	3001      	adds	r0, #1
  4047ea:	bf1b      	ittet	ne
  4047ec:	eba2 0a0a 	subne.w	sl, r2, sl
  4047f0:	4451      	addne	r1, sl
  4047f2:	f8c9 2000 	streq.w	r2, [r9]
  4047f6:	6019      	strne	r1, [r3, #0]
  4047f8:	f012 0107 	ands.w	r1, r2, #7
  4047fc:	f000 8115 	beq.w	404a2a <_malloc_r+0x48e>
  404800:	f1c1 0008 	rsb	r0, r1, #8
  404804:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  404808:	4402      	add	r2, r0
  40480a:	3108      	adds	r1, #8
  40480c:	eb02 090b 	add.w	r9, r2, fp
  404810:	f3c9 090b 	ubfx	r9, r9, #0, #12
  404814:	eba1 0909 	sub.w	r9, r1, r9
  404818:	4649      	mov	r1, r9
  40481a:	4628      	mov	r0, r5
  40481c:	9301      	str	r3, [sp, #4]
  40481e:	9200      	str	r2, [sp, #0]
  404820:	f000 fd5e 	bl	4052e0 <_sbrk_r>
  404824:	1c43      	adds	r3, r0, #1
  404826:	e89d 000c 	ldmia.w	sp, {r2, r3}
  40482a:	f000 8143 	beq.w	404ab4 <_malloc_r+0x518>
  40482e:	1a80      	subs	r0, r0, r2
  404830:	4448      	add	r0, r9
  404832:	f040 0001 	orr.w	r0, r0, #1
  404836:	6819      	ldr	r1, [r3, #0]
  404838:	60ba      	str	r2, [r7, #8]
  40483a:	4449      	add	r1, r9
  40483c:	42bc      	cmp	r4, r7
  40483e:	6050      	str	r0, [r2, #4]
  404840:	6019      	str	r1, [r3, #0]
  404842:	d017      	beq.n	404874 <_malloc_r+0x2d8>
  404844:	f1b8 0f0f 	cmp.w	r8, #15
  404848:	f240 80fb 	bls.w	404a42 <_malloc_r+0x4a6>
  40484c:	6860      	ldr	r0, [r4, #4]
  40484e:	f1a8 020c 	sub.w	r2, r8, #12
  404852:	f022 0207 	bic.w	r2, r2, #7
  404856:	eb04 0e02 	add.w	lr, r4, r2
  40485a:	f000 0001 	and.w	r0, r0, #1
  40485e:	f04f 0c05 	mov.w	ip, #5
  404862:	4310      	orrs	r0, r2
  404864:	2a0f      	cmp	r2, #15
  404866:	6060      	str	r0, [r4, #4]
  404868:	f8ce c004 	str.w	ip, [lr, #4]
  40486c:	f8ce c008 	str.w	ip, [lr, #8]
  404870:	f200 8117 	bhi.w	404aa2 <_malloc_r+0x506>
  404874:	4b1d      	ldr	r3, [pc, #116]	; (4048ec <_malloc_r+0x350>)
  404876:	68bc      	ldr	r4, [r7, #8]
  404878:	681a      	ldr	r2, [r3, #0]
  40487a:	4291      	cmp	r1, r2
  40487c:	bf88      	it	hi
  40487e:	6019      	strhi	r1, [r3, #0]
  404880:	4b1b      	ldr	r3, [pc, #108]	; (4048f0 <_malloc_r+0x354>)
  404882:	681a      	ldr	r2, [r3, #0]
  404884:	4291      	cmp	r1, r2
  404886:	6862      	ldr	r2, [r4, #4]
  404888:	bf88      	it	hi
  40488a:	6019      	strhi	r1, [r3, #0]
  40488c:	f022 0203 	bic.w	r2, r2, #3
  404890:	4296      	cmp	r6, r2
  404892:	eba2 0306 	sub.w	r3, r2, r6
  404896:	d801      	bhi.n	40489c <_malloc_r+0x300>
  404898:	2b0f      	cmp	r3, #15
  40489a:	dc04      	bgt.n	4048a6 <_malloc_r+0x30a>
  40489c:	4628      	mov	r0, r5
  40489e:	f000 fa1f 	bl	404ce0 <__malloc_unlock>
  4048a2:	2400      	movs	r4, #0
  4048a4:	e740      	b.n	404728 <_malloc_r+0x18c>
  4048a6:	19a2      	adds	r2, r4, r6
  4048a8:	f043 0301 	orr.w	r3, r3, #1
  4048ac:	f046 0601 	orr.w	r6, r6, #1
  4048b0:	6066      	str	r6, [r4, #4]
  4048b2:	4628      	mov	r0, r5
  4048b4:	60ba      	str	r2, [r7, #8]
  4048b6:	6053      	str	r3, [r2, #4]
  4048b8:	f000 fa12 	bl	404ce0 <__malloc_unlock>
  4048bc:	3408      	adds	r4, #8
  4048be:	4620      	mov	r0, r4
  4048c0:	b003      	add	sp, #12
  4048c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4048c6:	2b14      	cmp	r3, #20
  4048c8:	d971      	bls.n	4049ae <_malloc_r+0x412>
  4048ca:	2b54      	cmp	r3, #84	; 0x54
  4048cc:	f200 80a3 	bhi.w	404a16 <_malloc_r+0x47a>
  4048d0:	0b33      	lsrs	r3, r6, #12
  4048d2:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  4048d6:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  4048da:	00c3      	lsls	r3, r0, #3
  4048dc:	e680      	b.n	4045e0 <_malloc_r+0x44>
  4048de:	bf00      	nop
  4048e0:	20400454 	.word	0x20400454
  4048e4:	20400cac 	.word	0x20400cac
  4048e8:	20400c7c 	.word	0x20400c7c
  4048ec:	20400ca4 	.word	0x20400ca4
  4048f0:	20400ca8 	.word	0x20400ca8
  4048f4:	2040045c 	.word	0x2040045c
  4048f8:	2040085c 	.word	0x2040085c
  4048fc:	0a5a      	lsrs	r2, r3, #9
  4048fe:	2a04      	cmp	r2, #4
  404900:	d95b      	bls.n	4049ba <_malloc_r+0x41e>
  404902:	2a14      	cmp	r2, #20
  404904:	f200 80ae 	bhi.w	404a64 <_malloc_r+0x4c8>
  404908:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  40490c:	00c9      	lsls	r1, r1, #3
  40490e:	325b      	adds	r2, #91	; 0x5b
  404910:	eb07 0c01 	add.w	ip, r7, r1
  404914:	5879      	ldr	r1, [r7, r1]
  404916:	f1ac 0c08 	sub.w	ip, ip, #8
  40491a:	458c      	cmp	ip, r1
  40491c:	f000 8088 	beq.w	404a30 <_malloc_r+0x494>
  404920:	684a      	ldr	r2, [r1, #4]
  404922:	f022 0203 	bic.w	r2, r2, #3
  404926:	4293      	cmp	r3, r2
  404928:	d273      	bcs.n	404a12 <_malloc_r+0x476>
  40492a:	6889      	ldr	r1, [r1, #8]
  40492c:	458c      	cmp	ip, r1
  40492e:	d1f7      	bne.n	404920 <_malloc_r+0x384>
  404930:	f8dc 200c 	ldr.w	r2, [ip, #12]
  404934:	687b      	ldr	r3, [r7, #4]
  404936:	60e2      	str	r2, [r4, #12]
  404938:	f8c4 c008 	str.w	ip, [r4, #8]
  40493c:	6094      	str	r4, [r2, #8]
  40493e:	f8cc 400c 	str.w	r4, [ip, #12]
  404942:	e68f      	b.n	404664 <_malloc_r+0xc8>
  404944:	19a1      	adds	r1, r4, r6
  404946:	f046 0c01 	orr.w	ip, r6, #1
  40494a:	f042 0601 	orr.w	r6, r2, #1
  40494e:	f8c4 c004 	str.w	ip, [r4, #4]
  404952:	4628      	mov	r0, r5
  404954:	6179      	str	r1, [r7, #20]
  404956:	6139      	str	r1, [r7, #16]
  404958:	f8c1 e00c 	str.w	lr, [r1, #12]
  40495c:	f8c1 e008 	str.w	lr, [r1, #8]
  404960:	604e      	str	r6, [r1, #4]
  404962:	50e2      	str	r2, [r4, r3]
  404964:	f000 f9bc 	bl	404ce0 <__malloc_unlock>
  404968:	3408      	adds	r4, #8
  40496a:	e6dd      	b.n	404728 <_malloc_r+0x18c>
  40496c:	687b      	ldr	r3, [r7, #4]
  40496e:	e679      	b.n	404664 <_malloc_r+0xc8>
  404970:	f108 0801 	add.w	r8, r8, #1
  404974:	f018 0f03 	tst.w	r8, #3
  404978:	f10c 0c08 	add.w	ip, ip, #8
  40497c:	f47f ae85 	bne.w	40468a <_malloc_r+0xee>
  404980:	e02d      	b.n	4049de <_malloc_r+0x442>
  404982:	68dc      	ldr	r4, [r3, #12]
  404984:	42a3      	cmp	r3, r4
  404986:	bf08      	it	eq
  404988:	3002      	addeq	r0, #2
  40498a:	f43f ae3e 	beq.w	40460a <_malloc_r+0x6e>
  40498e:	e6bb      	b.n	404708 <_malloc_r+0x16c>
  404990:	4419      	add	r1, r3
  404992:	461c      	mov	r4, r3
  404994:	684a      	ldr	r2, [r1, #4]
  404996:	68db      	ldr	r3, [r3, #12]
  404998:	f854 6f08 	ldr.w	r6, [r4, #8]!
  40499c:	f042 0201 	orr.w	r2, r2, #1
  4049a0:	604a      	str	r2, [r1, #4]
  4049a2:	4628      	mov	r0, r5
  4049a4:	60f3      	str	r3, [r6, #12]
  4049a6:	609e      	str	r6, [r3, #8]
  4049a8:	f000 f99a 	bl	404ce0 <__malloc_unlock>
  4049ac:	e6bc      	b.n	404728 <_malloc_r+0x18c>
  4049ae:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  4049b2:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  4049b6:	00c3      	lsls	r3, r0, #3
  4049b8:	e612      	b.n	4045e0 <_malloc_r+0x44>
  4049ba:	099a      	lsrs	r2, r3, #6
  4049bc:	f102 0139 	add.w	r1, r2, #57	; 0x39
  4049c0:	00c9      	lsls	r1, r1, #3
  4049c2:	3238      	adds	r2, #56	; 0x38
  4049c4:	e7a4      	b.n	404910 <_malloc_r+0x374>
  4049c6:	42bc      	cmp	r4, r7
  4049c8:	d054      	beq.n	404a74 <_malloc_r+0x4d8>
  4049ca:	68bc      	ldr	r4, [r7, #8]
  4049cc:	6862      	ldr	r2, [r4, #4]
  4049ce:	f022 0203 	bic.w	r2, r2, #3
  4049d2:	e75d      	b.n	404890 <_malloc_r+0x2f4>
  4049d4:	f859 3908 	ldr.w	r3, [r9], #-8
  4049d8:	4599      	cmp	r9, r3
  4049da:	f040 8086 	bne.w	404aea <_malloc_r+0x54e>
  4049de:	f010 0f03 	tst.w	r0, #3
  4049e2:	f100 30ff 	add.w	r0, r0, #4294967295
  4049e6:	d1f5      	bne.n	4049d4 <_malloc_r+0x438>
  4049e8:	687b      	ldr	r3, [r7, #4]
  4049ea:	ea23 0304 	bic.w	r3, r3, r4
  4049ee:	607b      	str	r3, [r7, #4]
  4049f0:	0064      	lsls	r4, r4, #1
  4049f2:	429c      	cmp	r4, r3
  4049f4:	f63f aec7 	bhi.w	404786 <_malloc_r+0x1ea>
  4049f8:	2c00      	cmp	r4, #0
  4049fa:	f43f aec4 	beq.w	404786 <_malloc_r+0x1ea>
  4049fe:	421c      	tst	r4, r3
  404a00:	4640      	mov	r0, r8
  404a02:	f47f ae3e 	bne.w	404682 <_malloc_r+0xe6>
  404a06:	0064      	lsls	r4, r4, #1
  404a08:	421c      	tst	r4, r3
  404a0a:	f100 0004 	add.w	r0, r0, #4
  404a0e:	d0fa      	beq.n	404a06 <_malloc_r+0x46a>
  404a10:	e637      	b.n	404682 <_malloc_r+0xe6>
  404a12:	468c      	mov	ip, r1
  404a14:	e78c      	b.n	404930 <_malloc_r+0x394>
  404a16:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  404a1a:	d815      	bhi.n	404a48 <_malloc_r+0x4ac>
  404a1c:	0bf3      	lsrs	r3, r6, #15
  404a1e:	f103 0078 	add.w	r0, r3, #120	; 0x78
  404a22:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  404a26:	00c3      	lsls	r3, r0, #3
  404a28:	e5da      	b.n	4045e0 <_malloc_r+0x44>
  404a2a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  404a2e:	e6ed      	b.n	40480c <_malloc_r+0x270>
  404a30:	687b      	ldr	r3, [r7, #4]
  404a32:	1092      	asrs	r2, r2, #2
  404a34:	2101      	movs	r1, #1
  404a36:	fa01 f202 	lsl.w	r2, r1, r2
  404a3a:	4313      	orrs	r3, r2
  404a3c:	607b      	str	r3, [r7, #4]
  404a3e:	4662      	mov	r2, ip
  404a40:	e779      	b.n	404936 <_malloc_r+0x39a>
  404a42:	2301      	movs	r3, #1
  404a44:	6053      	str	r3, [r2, #4]
  404a46:	e729      	b.n	40489c <_malloc_r+0x300>
  404a48:	f240 5254 	movw	r2, #1364	; 0x554
  404a4c:	4293      	cmp	r3, r2
  404a4e:	d822      	bhi.n	404a96 <_malloc_r+0x4fa>
  404a50:	0cb3      	lsrs	r3, r6, #18
  404a52:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  404a56:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  404a5a:	00c3      	lsls	r3, r0, #3
  404a5c:	e5c0      	b.n	4045e0 <_malloc_r+0x44>
  404a5e:	f103 0b10 	add.w	fp, r3, #16
  404a62:	e6ae      	b.n	4047c2 <_malloc_r+0x226>
  404a64:	2a54      	cmp	r2, #84	; 0x54
  404a66:	d829      	bhi.n	404abc <_malloc_r+0x520>
  404a68:	0b1a      	lsrs	r2, r3, #12
  404a6a:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  404a6e:	00c9      	lsls	r1, r1, #3
  404a70:	326e      	adds	r2, #110	; 0x6e
  404a72:	e74d      	b.n	404910 <_malloc_r+0x374>
  404a74:	4b20      	ldr	r3, [pc, #128]	; (404af8 <_malloc_r+0x55c>)
  404a76:	6819      	ldr	r1, [r3, #0]
  404a78:	4459      	add	r1, fp
  404a7a:	6019      	str	r1, [r3, #0]
  404a7c:	e6b2      	b.n	4047e4 <_malloc_r+0x248>
  404a7e:	f3ca 000b 	ubfx	r0, sl, #0, #12
  404a82:	2800      	cmp	r0, #0
  404a84:	f47f aeae 	bne.w	4047e4 <_malloc_r+0x248>
  404a88:	eb08 030b 	add.w	r3, r8, fp
  404a8c:	68ba      	ldr	r2, [r7, #8]
  404a8e:	f043 0301 	orr.w	r3, r3, #1
  404a92:	6053      	str	r3, [r2, #4]
  404a94:	e6ee      	b.n	404874 <_malloc_r+0x2d8>
  404a96:	207f      	movs	r0, #127	; 0x7f
  404a98:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  404a9c:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  404aa0:	e59e      	b.n	4045e0 <_malloc_r+0x44>
  404aa2:	f104 0108 	add.w	r1, r4, #8
  404aa6:	4628      	mov	r0, r5
  404aa8:	9300      	str	r3, [sp, #0]
  404aaa:	f000 fe17 	bl	4056dc <_free_r>
  404aae:	9b00      	ldr	r3, [sp, #0]
  404ab0:	6819      	ldr	r1, [r3, #0]
  404ab2:	e6df      	b.n	404874 <_malloc_r+0x2d8>
  404ab4:	2001      	movs	r0, #1
  404ab6:	f04f 0900 	mov.w	r9, #0
  404aba:	e6bc      	b.n	404836 <_malloc_r+0x29a>
  404abc:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  404ac0:	d805      	bhi.n	404ace <_malloc_r+0x532>
  404ac2:	0bda      	lsrs	r2, r3, #15
  404ac4:	f102 0178 	add.w	r1, r2, #120	; 0x78
  404ac8:	00c9      	lsls	r1, r1, #3
  404aca:	3277      	adds	r2, #119	; 0x77
  404acc:	e720      	b.n	404910 <_malloc_r+0x374>
  404ace:	f240 5154 	movw	r1, #1364	; 0x554
  404ad2:	428a      	cmp	r2, r1
  404ad4:	d805      	bhi.n	404ae2 <_malloc_r+0x546>
  404ad6:	0c9a      	lsrs	r2, r3, #18
  404ad8:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  404adc:	00c9      	lsls	r1, r1, #3
  404ade:	327c      	adds	r2, #124	; 0x7c
  404ae0:	e716      	b.n	404910 <_malloc_r+0x374>
  404ae2:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  404ae6:	227e      	movs	r2, #126	; 0x7e
  404ae8:	e712      	b.n	404910 <_malloc_r+0x374>
  404aea:	687b      	ldr	r3, [r7, #4]
  404aec:	e780      	b.n	4049f0 <_malloc_r+0x454>
  404aee:	08f0      	lsrs	r0, r6, #3
  404af0:	f106 0308 	add.w	r3, r6, #8
  404af4:	e600      	b.n	4046f8 <_malloc_r+0x15c>
  404af6:	bf00      	nop
  404af8:	20400c7c 	.word	0x20400c7c
  404afc:	00000000 	.word	0x00000000

00404b00 <memchr>:
  404b00:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  404b04:	2a10      	cmp	r2, #16
  404b06:	db2b      	blt.n	404b60 <memchr+0x60>
  404b08:	f010 0f07 	tst.w	r0, #7
  404b0c:	d008      	beq.n	404b20 <memchr+0x20>
  404b0e:	f810 3b01 	ldrb.w	r3, [r0], #1
  404b12:	3a01      	subs	r2, #1
  404b14:	428b      	cmp	r3, r1
  404b16:	d02d      	beq.n	404b74 <memchr+0x74>
  404b18:	f010 0f07 	tst.w	r0, #7
  404b1c:	b342      	cbz	r2, 404b70 <memchr+0x70>
  404b1e:	d1f6      	bne.n	404b0e <memchr+0xe>
  404b20:	b4f0      	push	{r4, r5, r6, r7}
  404b22:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  404b26:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  404b2a:	f022 0407 	bic.w	r4, r2, #7
  404b2e:	f07f 0700 	mvns.w	r7, #0
  404b32:	2300      	movs	r3, #0
  404b34:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  404b38:	3c08      	subs	r4, #8
  404b3a:	ea85 0501 	eor.w	r5, r5, r1
  404b3e:	ea86 0601 	eor.w	r6, r6, r1
  404b42:	fa85 f547 	uadd8	r5, r5, r7
  404b46:	faa3 f587 	sel	r5, r3, r7
  404b4a:	fa86 f647 	uadd8	r6, r6, r7
  404b4e:	faa5 f687 	sel	r6, r5, r7
  404b52:	b98e      	cbnz	r6, 404b78 <memchr+0x78>
  404b54:	d1ee      	bne.n	404b34 <memchr+0x34>
  404b56:	bcf0      	pop	{r4, r5, r6, r7}
  404b58:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  404b5c:	f002 0207 	and.w	r2, r2, #7
  404b60:	b132      	cbz	r2, 404b70 <memchr+0x70>
  404b62:	f810 3b01 	ldrb.w	r3, [r0], #1
  404b66:	3a01      	subs	r2, #1
  404b68:	ea83 0301 	eor.w	r3, r3, r1
  404b6c:	b113      	cbz	r3, 404b74 <memchr+0x74>
  404b6e:	d1f8      	bne.n	404b62 <memchr+0x62>
  404b70:	2000      	movs	r0, #0
  404b72:	4770      	bx	lr
  404b74:	3801      	subs	r0, #1
  404b76:	4770      	bx	lr
  404b78:	2d00      	cmp	r5, #0
  404b7a:	bf06      	itte	eq
  404b7c:	4635      	moveq	r5, r6
  404b7e:	3803      	subeq	r0, #3
  404b80:	3807      	subne	r0, #7
  404b82:	f015 0f01 	tst.w	r5, #1
  404b86:	d107      	bne.n	404b98 <memchr+0x98>
  404b88:	3001      	adds	r0, #1
  404b8a:	f415 7f80 	tst.w	r5, #256	; 0x100
  404b8e:	bf02      	ittt	eq
  404b90:	3001      	addeq	r0, #1
  404b92:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  404b96:	3001      	addeq	r0, #1
  404b98:	bcf0      	pop	{r4, r5, r6, r7}
  404b9a:	3801      	subs	r0, #1
  404b9c:	4770      	bx	lr
  404b9e:	bf00      	nop

00404ba0 <memcpy>:
  404ba0:	4684      	mov	ip, r0
  404ba2:	ea41 0300 	orr.w	r3, r1, r0
  404ba6:	f013 0303 	ands.w	r3, r3, #3
  404baa:	d16d      	bne.n	404c88 <memcpy+0xe8>
  404bac:	3a40      	subs	r2, #64	; 0x40
  404bae:	d341      	bcc.n	404c34 <memcpy+0x94>
  404bb0:	f851 3b04 	ldr.w	r3, [r1], #4
  404bb4:	f840 3b04 	str.w	r3, [r0], #4
  404bb8:	f851 3b04 	ldr.w	r3, [r1], #4
  404bbc:	f840 3b04 	str.w	r3, [r0], #4
  404bc0:	f851 3b04 	ldr.w	r3, [r1], #4
  404bc4:	f840 3b04 	str.w	r3, [r0], #4
  404bc8:	f851 3b04 	ldr.w	r3, [r1], #4
  404bcc:	f840 3b04 	str.w	r3, [r0], #4
  404bd0:	f851 3b04 	ldr.w	r3, [r1], #4
  404bd4:	f840 3b04 	str.w	r3, [r0], #4
  404bd8:	f851 3b04 	ldr.w	r3, [r1], #4
  404bdc:	f840 3b04 	str.w	r3, [r0], #4
  404be0:	f851 3b04 	ldr.w	r3, [r1], #4
  404be4:	f840 3b04 	str.w	r3, [r0], #4
  404be8:	f851 3b04 	ldr.w	r3, [r1], #4
  404bec:	f840 3b04 	str.w	r3, [r0], #4
  404bf0:	f851 3b04 	ldr.w	r3, [r1], #4
  404bf4:	f840 3b04 	str.w	r3, [r0], #4
  404bf8:	f851 3b04 	ldr.w	r3, [r1], #4
  404bfc:	f840 3b04 	str.w	r3, [r0], #4
  404c00:	f851 3b04 	ldr.w	r3, [r1], #4
  404c04:	f840 3b04 	str.w	r3, [r0], #4
  404c08:	f851 3b04 	ldr.w	r3, [r1], #4
  404c0c:	f840 3b04 	str.w	r3, [r0], #4
  404c10:	f851 3b04 	ldr.w	r3, [r1], #4
  404c14:	f840 3b04 	str.w	r3, [r0], #4
  404c18:	f851 3b04 	ldr.w	r3, [r1], #4
  404c1c:	f840 3b04 	str.w	r3, [r0], #4
  404c20:	f851 3b04 	ldr.w	r3, [r1], #4
  404c24:	f840 3b04 	str.w	r3, [r0], #4
  404c28:	f851 3b04 	ldr.w	r3, [r1], #4
  404c2c:	f840 3b04 	str.w	r3, [r0], #4
  404c30:	3a40      	subs	r2, #64	; 0x40
  404c32:	d2bd      	bcs.n	404bb0 <memcpy+0x10>
  404c34:	3230      	adds	r2, #48	; 0x30
  404c36:	d311      	bcc.n	404c5c <memcpy+0xbc>
  404c38:	f851 3b04 	ldr.w	r3, [r1], #4
  404c3c:	f840 3b04 	str.w	r3, [r0], #4
  404c40:	f851 3b04 	ldr.w	r3, [r1], #4
  404c44:	f840 3b04 	str.w	r3, [r0], #4
  404c48:	f851 3b04 	ldr.w	r3, [r1], #4
  404c4c:	f840 3b04 	str.w	r3, [r0], #4
  404c50:	f851 3b04 	ldr.w	r3, [r1], #4
  404c54:	f840 3b04 	str.w	r3, [r0], #4
  404c58:	3a10      	subs	r2, #16
  404c5a:	d2ed      	bcs.n	404c38 <memcpy+0x98>
  404c5c:	320c      	adds	r2, #12
  404c5e:	d305      	bcc.n	404c6c <memcpy+0xcc>
  404c60:	f851 3b04 	ldr.w	r3, [r1], #4
  404c64:	f840 3b04 	str.w	r3, [r0], #4
  404c68:	3a04      	subs	r2, #4
  404c6a:	d2f9      	bcs.n	404c60 <memcpy+0xc0>
  404c6c:	3204      	adds	r2, #4
  404c6e:	d008      	beq.n	404c82 <memcpy+0xe2>
  404c70:	07d2      	lsls	r2, r2, #31
  404c72:	bf1c      	itt	ne
  404c74:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404c78:	f800 3b01 	strbne.w	r3, [r0], #1
  404c7c:	d301      	bcc.n	404c82 <memcpy+0xe2>
  404c7e:	880b      	ldrh	r3, [r1, #0]
  404c80:	8003      	strh	r3, [r0, #0]
  404c82:	4660      	mov	r0, ip
  404c84:	4770      	bx	lr
  404c86:	bf00      	nop
  404c88:	2a08      	cmp	r2, #8
  404c8a:	d313      	bcc.n	404cb4 <memcpy+0x114>
  404c8c:	078b      	lsls	r3, r1, #30
  404c8e:	d08d      	beq.n	404bac <memcpy+0xc>
  404c90:	f010 0303 	ands.w	r3, r0, #3
  404c94:	d08a      	beq.n	404bac <memcpy+0xc>
  404c96:	f1c3 0304 	rsb	r3, r3, #4
  404c9a:	1ad2      	subs	r2, r2, r3
  404c9c:	07db      	lsls	r3, r3, #31
  404c9e:	bf1c      	itt	ne
  404ca0:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404ca4:	f800 3b01 	strbne.w	r3, [r0], #1
  404ca8:	d380      	bcc.n	404bac <memcpy+0xc>
  404caa:	f831 3b02 	ldrh.w	r3, [r1], #2
  404cae:	f820 3b02 	strh.w	r3, [r0], #2
  404cb2:	e77b      	b.n	404bac <memcpy+0xc>
  404cb4:	3a04      	subs	r2, #4
  404cb6:	d3d9      	bcc.n	404c6c <memcpy+0xcc>
  404cb8:	3a01      	subs	r2, #1
  404cba:	f811 3b01 	ldrb.w	r3, [r1], #1
  404cbe:	f800 3b01 	strb.w	r3, [r0], #1
  404cc2:	d2f9      	bcs.n	404cb8 <memcpy+0x118>
  404cc4:	780b      	ldrb	r3, [r1, #0]
  404cc6:	7003      	strb	r3, [r0, #0]
  404cc8:	784b      	ldrb	r3, [r1, #1]
  404cca:	7043      	strb	r3, [r0, #1]
  404ccc:	788b      	ldrb	r3, [r1, #2]
  404cce:	7083      	strb	r3, [r0, #2]
  404cd0:	4660      	mov	r0, ip
  404cd2:	4770      	bx	lr

00404cd4 <__malloc_lock>:
  404cd4:	4801      	ldr	r0, [pc, #4]	; (404cdc <__malloc_lock+0x8>)
  404cd6:	f7ff bc5d 	b.w	404594 <__retarget_lock_acquire_recursive>
  404cda:	bf00      	nop
  404cdc:	20400cc0 	.word	0x20400cc0

00404ce0 <__malloc_unlock>:
  404ce0:	4801      	ldr	r0, [pc, #4]	; (404ce8 <__malloc_unlock+0x8>)
  404ce2:	f7ff bc59 	b.w	404598 <__retarget_lock_release_recursive>
  404ce6:	bf00      	nop
  404ce8:	20400cc0 	.word	0x20400cc0

00404cec <_Balloc>:
  404cec:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  404cee:	b570      	push	{r4, r5, r6, lr}
  404cf0:	4605      	mov	r5, r0
  404cf2:	460c      	mov	r4, r1
  404cf4:	b14b      	cbz	r3, 404d0a <_Balloc+0x1e>
  404cf6:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  404cfa:	b180      	cbz	r0, 404d1e <_Balloc+0x32>
  404cfc:	6802      	ldr	r2, [r0, #0]
  404cfe:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  404d02:	2300      	movs	r3, #0
  404d04:	6103      	str	r3, [r0, #16]
  404d06:	60c3      	str	r3, [r0, #12]
  404d08:	bd70      	pop	{r4, r5, r6, pc}
  404d0a:	2221      	movs	r2, #33	; 0x21
  404d0c:	2104      	movs	r1, #4
  404d0e:	f000 fc65 	bl	4055dc <_calloc_r>
  404d12:	64e8      	str	r0, [r5, #76]	; 0x4c
  404d14:	4603      	mov	r3, r0
  404d16:	2800      	cmp	r0, #0
  404d18:	d1ed      	bne.n	404cf6 <_Balloc+0xa>
  404d1a:	2000      	movs	r0, #0
  404d1c:	bd70      	pop	{r4, r5, r6, pc}
  404d1e:	2101      	movs	r1, #1
  404d20:	fa01 f604 	lsl.w	r6, r1, r4
  404d24:	1d72      	adds	r2, r6, #5
  404d26:	4628      	mov	r0, r5
  404d28:	0092      	lsls	r2, r2, #2
  404d2a:	f000 fc57 	bl	4055dc <_calloc_r>
  404d2e:	2800      	cmp	r0, #0
  404d30:	d0f3      	beq.n	404d1a <_Balloc+0x2e>
  404d32:	6044      	str	r4, [r0, #4]
  404d34:	6086      	str	r6, [r0, #8]
  404d36:	e7e4      	b.n	404d02 <_Balloc+0x16>

00404d38 <_Bfree>:
  404d38:	b131      	cbz	r1, 404d48 <_Bfree+0x10>
  404d3a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  404d3c:	684a      	ldr	r2, [r1, #4]
  404d3e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  404d42:	6008      	str	r0, [r1, #0]
  404d44:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  404d48:	4770      	bx	lr
  404d4a:	bf00      	nop

00404d4c <__multadd>:
  404d4c:	b5f0      	push	{r4, r5, r6, r7, lr}
  404d4e:	690c      	ldr	r4, [r1, #16]
  404d50:	b083      	sub	sp, #12
  404d52:	460d      	mov	r5, r1
  404d54:	4606      	mov	r6, r0
  404d56:	f101 0e14 	add.w	lr, r1, #20
  404d5a:	2700      	movs	r7, #0
  404d5c:	f8de 0000 	ldr.w	r0, [lr]
  404d60:	b281      	uxth	r1, r0
  404d62:	fb02 3301 	mla	r3, r2, r1, r3
  404d66:	0c01      	lsrs	r1, r0, #16
  404d68:	0c18      	lsrs	r0, r3, #16
  404d6a:	fb02 0101 	mla	r1, r2, r1, r0
  404d6e:	b29b      	uxth	r3, r3
  404d70:	3701      	adds	r7, #1
  404d72:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  404d76:	42bc      	cmp	r4, r7
  404d78:	f84e 3b04 	str.w	r3, [lr], #4
  404d7c:	ea4f 4311 	mov.w	r3, r1, lsr #16
  404d80:	dcec      	bgt.n	404d5c <__multadd+0x10>
  404d82:	b13b      	cbz	r3, 404d94 <__multadd+0x48>
  404d84:	68aa      	ldr	r2, [r5, #8]
  404d86:	4294      	cmp	r4, r2
  404d88:	da07      	bge.n	404d9a <__multadd+0x4e>
  404d8a:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  404d8e:	3401      	adds	r4, #1
  404d90:	6153      	str	r3, [r2, #20]
  404d92:	612c      	str	r4, [r5, #16]
  404d94:	4628      	mov	r0, r5
  404d96:	b003      	add	sp, #12
  404d98:	bdf0      	pop	{r4, r5, r6, r7, pc}
  404d9a:	6869      	ldr	r1, [r5, #4]
  404d9c:	9301      	str	r3, [sp, #4]
  404d9e:	3101      	adds	r1, #1
  404da0:	4630      	mov	r0, r6
  404da2:	f7ff ffa3 	bl	404cec <_Balloc>
  404da6:	692a      	ldr	r2, [r5, #16]
  404da8:	3202      	adds	r2, #2
  404daa:	f105 010c 	add.w	r1, r5, #12
  404dae:	4607      	mov	r7, r0
  404db0:	0092      	lsls	r2, r2, #2
  404db2:	300c      	adds	r0, #12
  404db4:	f7ff fef4 	bl	404ba0 <memcpy>
  404db8:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  404dba:	6869      	ldr	r1, [r5, #4]
  404dbc:	9b01      	ldr	r3, [sp, #4]
  404dbe:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  404dc2:	6028      	str	r0, [r5, #0]
  404dc4:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  404dc8:	463d      	mov	r5, r7
  404dca:	e7de      	b.n	404d8a <__multadd+0x3e>

00404dcc <__hi0bits>:
  404dcc:	0c02      	lsrs	r2, r0, #16
  404dce:	0412      	lsls	r2, r2, #16
  404dd0:	4603      	mov	r3, r0
  404dd2:	b9b2      	cbnz	r2, 404e02 <__hi0bits+0x36>
  404dd4:	0403      	lsls	r3, r0, #16
  404dd6:	2010      	movs	r0, #16
  404dd8:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  404ddc:	bf04      	itt	eq
  404dde:	021b      	lsleq	r3, r3, #8
  404de0:	3008      	addeq	r0, #8
  404de2:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  404de6:	bf04      	itt	eq
  404de8:	011b      	lsleq	r3, r3, #4
  404dea:	3004      	addeq	r0, #4
  404dec:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  404df0:	bf04      	itt	eq
  404df2:	009b      	lsleq	r3, r3, #2
  404df4:	3002      	addeq	r0, #2
  404df6:	2b00      	cmp	r3, #0
  404df8:	db02      	blt.n	404e00 <__hi0bits+0x34>
  404dfa:	005b      	lsls	r3, r3, #1
  404dfc:	d403      	bmi.n	404e06 <__hi0bits+0x3a>
  404dfe:	2020      	movs	r0, #32
  404e00:	4770      	bx	lr
  404e02:	2000      	movs	r0, #0
  404e04:	e7e8      	b.n	404dd8 <__hi0bits+0xc>
  404e06:	3001      	adds	r0, #1
  404e08:	4770      	bx	lr
  404e0a:	bf00      	nop

00404e0c <__lo0bits>:
  404e0c:	6803      	ldr	r3, [r0, #0]
  404e0e:	f013 0207 	ands.w	r2, r3, #7
  404e12:	4601      	mov	r1, r0
  404e14:	d007      	beq.n	404e26 <__lo0bits+0x1a>
  404e16:	07da      	lsls	r2, r3, #31
  404e18:	d421      	bmi.n	404e5e <__lo0bits+0x52>
  404e1a:	0798      	lsls	r0, r3, #30
  404e1c:	d421      	bmi.n	404e62 <__lo0bits+0x56>
  404e1e:	089b      	lsrs	r3, r3, #2
  404e20:	600b      	str	r3, [r1, #0]
  404e22:	2002      	movs	r0, #2
  404e24:	4770      	bx	lr
  404e26:	b298      	uxth	r0, r3
  404e28:	b198      	cbz	r0, 404e52 <__lo0bits+0x46>
  404e2a:	4610      	mov	r0, r2
  404e2c:	f013 0fff 	tst.w	r3, #255	; 0xff
  404e30:	bf04      	itt	eq
  404e32:	0a1b      	lsreq	r3, r3, #8
  404e34:	3008      	addeq	r0, #8
  404e36:	071a      	lsls	r2, r3, #28
  404e38:	bf04      	itt	eq
  404e3a:	091b      	lsreq	r3, r3, #4
  404e3c:	3004      	addeq	r0, #4
  404e3e:	079a      	lsls	r2, r3, #30
  404e40:	bf04      	itt	eq
  404e42:	089b      	lsreq	r3, r3, #2
  404e44:	3002      	addeq	r0, #2
  404e46:	07da      	lsls	r2, r3, #31
  404e48:	d407      	bmi.n	404e5a <__lo0bits+0x4e>
  404e4a:	085b      	lsrs	r3, r3, #1
  404e4c:	d104      	bne.n	404e58 <__lo0bits+0x4c>
  404e4e:	2020      	movs	r0, #32
  404e50:	4770      	bx	lr
  404e52:	0c1b      	lsrs	r3, r3, #16
  404e54:	2010      	movs	r0, #16
  404e56:	e7e9      	b.n	404e2c <__lo0bits+0x20>
  404e58:	3001      	adds	r0, #1
  404e5a:	600b      	str	r3, [r1, #0]
  404e5c:	4770      	bx	lr
  404e5e:	2000      	movs	r0, #0
  404e60:	4770      	bx	lr
  404e62:	085b      	lsrs	r3, r3, #1
  404e64:	600b      	str	r3, [r1, #0]
  404e66:	2001      	movs	r0, #1
  404e68:	4770      	bx	lr
  404e6a:	bf00      	nop

00404e6c <__i2b>:
  404e6c:	b510      	push	{r4, lr}
  404e6e:	460c      	mov	r4, r1
  404e70:	2101      	movs	r1, #1
  404e72:	f7ff ff3b 	bl	404cec <_Balloc>
  404e76:	2201      	movs	r2, #1
  404e78:	6144      	str	r4, [r0, #20]
  404e7a:	6102      	str	r2, [r0, #16]
  404e7c:	bd10      	pop	{r4, pc}
  404e7e:	bf00      	nop

00404e80 <__multiply>:
  404e80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404e84:	690c      	ldr	r4, [r1, #16]
  404e86:	6915      	ldr	r5, [r2, #16]
  404e88:	42ac      	cmp	r4, r5
  404e8a:	b083      	sub	sp, #12
  404e8c:	468b      	mov	fp, r1
  404e8e:	4616      	mov	r6, r2
  404e90:	da04      	bge.n	404e9c <__multiply+0x1c>
  404e92:	4622      	mov	r2, r4
  404e94:	46b3      	mov	fp, r6
  404e96:	462c      	mov	r4, r5
  404e98:	460e      	mov	r6, r1
  404e9a:	4615      	mov	r5, r2
  404e9c:	f8db 3008 	ldr.w	r3, [fp, #8]
  404ea0:	f8db 1004 	ldr.w	r1, [fp, #4]
  404ea4:	eb04 0805 	add.w	r8, r4, r5
  404ea8:	4598      	cmp	r8, r3
  404eaa:	bfc8      	it	gt
  404eac:	3101      	addgt	r1, #1
  404eae:	f7ff ff1d 	bl	404cec <_Balloc>
  404eb2:	f100 0914 	add.w	r9, r0, #20
  404eb6:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  404eba:	45d1      	cmp	r9, sl
  404ebc:	9000      	str	r0, [sp, #0]
  404ebe:	d205      	bcs.n	404ecc <__multiply+0x4c>
  404ec0:	464b      	mov	r3, r9
  404ec2:	2100      	movs	r1, #0
  404ec4:	f843 1b04 	str.w	r1, [r3], #4
  404ec8:	459a      	cmp	sl, r3
  404eca:	d8fb      	bhi.n	404ec4 <__multiply+0x44>
  404ecc:	f106 0c14 	add.w	ip, r6, #20
  404ed0:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  404ed4:	f10b 0b14 	add.w	fp, fp, #20
  404ed8:	459c      	cmp	ip, r3
  404eda:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
  404ede:	d24c      	bcs.n	404f7a <__multiply+0xfa>
  404ee0:	f8cd a004 	str.w	sl, [sp, #4]
  404ee4:	469a      	mov	sl, r3
  404ee6:	f8dc 5000 	ldr.w	r5, [ip]
  404eea:	b2af      	uxth	r7, r5
  404eec:	b1ef      	cbz	r7, 404f2a <__multiply+0xaa>
  404eee:	2100      	movs	r1, #0
  404ef0:	464d      	mov	r5, r9
  404ef2:	465e      	mov	r6, fp
  404ef4:	460c      	mov	r4, r1
  404ef6:	f856 2b04 	ldr.w	r2, [r6], #4
  404efa:	6828      	ldr	r0, [r5, #0]
  404efc:	b293      	uxth	r3, r2
  404efe:	b281      	uxth	r1, r0
  404f00:	fb07 1303 	mla	r3, r7, r3, r1
  404f04:	0c12      	lsrs	r2, r2, #16
  404f06:	0c01      	lsrs	r1, r0, #16
  404f08:	4423      	add	r3, r4
  404f0a:	fb07 1102 	mla	r1, r7, r2, r1
  404f0e:	eb01 4113 	add.w	r1, r1, r3, lsr #16
  404f12:	b29b      	uxth	r3, r3
  404f14:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  404f18:	45b6      	cmp	lr, r6
  404f1a:	f845 3b04 	str.w	r3, [r5], #4
  404f1e:	ea4f 4411 	mov.w	r4, r1, lsr #16
  404f22:	d8e8      	bhi.n	404ef6 <__multiply+0x76>
  404f24:	602c      	str	r4, [r5, #0]
  404f26:	f8dc 5000 	ldr.w	r5, [ip]
  404f2a:	0c2d      	lsrs	r5, r5, #16
  404f2c:	d01d      	beq.n	404f6a <__multiply+0xea>
  404f2e:	f8d9 3000 	ldr.w	r3, [r9]
  404f32:	4648      	mov	r0, r9
  404f34:	461c      	mov	r4, r3
  404f36:	4659      	mov	r1, fp
  404f38:	2200      	movs	r2, #0
  404f3a:	880e      	ldrh	r6, [r1, #0]
  404f3c:	0c24      	lsrs	r4, r4, #16
  404f3e:	fb05 4406 	mla	r4, r5, r6, r4
  404f42:	4422      	add	r2, r4
  404f44:	b29b      	uxth	r3, r3
  404f46:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  404f4a:	f840 3b04 	str.w	r3, [r0], #4
  404f4e:	f851 3b04 	ldr.w	r3, [r1], #4
  404f52:	6804      	ldr	r4, [r0, #0]
  404f54:	0c1b      	lsrs	r3, r3, #16
  404f56:	b2a6      	uxth	r6, r4
  404f58:	fb05 6303 	mla	r3, r5, r3, r6
  404f5c:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  404f60:	458e      	cmp	lr, r1
  404f62:	ea4f 4213 	mov.w	r2, r3, lsr #16
  404f66:	d8e8      	bhi.n	404f3a <__multiply+0xba>
  404f68:	6003      	str	r3, [r0, #0]
  404f6a:	f10c 0c04 	add.w	ip, ip, #4
  404f6e:	45e2      	cmp	sl, ip
  404f70:	f109 0904 	add.w	r9, r9, #4
  404f74:	d8b7      	bhi.n	404ee6 <__multiply+0x66>
  404f76:	f8dd a004 	ldr.w	sl, [sp, #4]
  404f7a:	f1b8 0f00 	cmp.w	r8, #0
  404f7e:	dd0b      	ble.n	404f98 <__multiply+0x118>
  404f80:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  404f84:	f1aa 0a04 	sub.w	sl, sl, #4
  404f88:	b11b      	cbz	r3, 404f92 <__multiply+0x112>
  404f8a:	e005      	b.n	404f98 <__multiply+0x118>
  404f8c:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
  404f90:	b913      	cbnz	r3, 404f98 <__multiply+0x118>
  404f92:	f1b8 0801 	subs.w	r8, r8, #1
  404f96:	d1f9      	bne.n	404f8c <__multiply+0x10c>
  404f98:	9800      	ldr	r0, [sp, #0]
  404f9a:	f8c0 8010 	str.w	r8, [r0, #16]
  404f9e:	b003      	add	sp, #12
  404fa0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00404fa4 <__pow5mult>:
  404fa4:	f012 0303 	ands.w	r3, r2, #3
  404fa8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404fac:	4614      	mov	r4, r2
  404fae:	4607      	mov	r7, r0
  404fb0:	d12e      	bne.n	405010 <__pow5mult+0x6c>
  404fb2:	460d      	mov	r5, r1
  404fb4:	10a4      	asrs	r4, r4, #2
  404fb6:	d01c      	beq.n	404ff2 <__pow5mult+0x4e>
  404fb8:	6cbe      	ldr	r6, [r7, #72]	; 0x48
  404fba:	b396      	cbz	r6, 405022 <__pow5mult+0x7e>
  404fbc:	07e3      	lsls	r3, r4, #31
  404fbe:	f04f 0800 	mov.w	r8, #0
  404fc2:	d406      	bmi.n	404fd2 <__pow5mult+0x2e>
  404fc4:	1064      	asrs	r4, r4, #1
  404fc6:	d014      	beq.n	404ff2 <__pow5mult+0x4e>
  404fc8:	6830      	ldr	r0, [r6, #0]
  404fca:	b1a8      	cbz	r0, 404ff8 <__pow5mult+0x54>
  404fcc:	4606      	mov	r6, r0
  404fce:	07e3      	lsls	r3, r4, #31
  404fd0:	d5f8      	bpl.n	404fc4 <__pow5mult+0x20>
  404fd2:	4632      	mov	r2, r6
  404fd4:	4629      	mov	r1, r5
  404fd6:	4638      	mov	r0, r7
  404fd8:	f7ff ff52 	bl	404e80 <__multiply>
  404fdc:	b1b5      	cbz	r5, 40500c <__pow5mult+0x68>
  404fde:	686a      	ldr	r2, [r5, #4]
  404fe0:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  404fe2:	1064      	asrs	r4, r4, #1
  404fe4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  404fe8:	6029      	str	r1, [r5, #0]
  404fea:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  404fee:	4605      	mov	r5, r0
  404ff0:	d1ea      	bne.n	404fc8 <__pow5mult+0x24>
  404ff2:	4628      	mov	r0, r5
  404ff4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404ff8:	4632      	mov	r2, r6
  404ffa:	4631      	mov	r1, r6
  404ffc:	4638      	mov	r0, r7
  404ffe:	f7ff ff3f 	bl	404e80 <__multiply>
  405002:	6030      	str	r0, [r6, #0]
  405004:	f8c0 8000 	str.w	r8, [r0]
  405008:	4606      	mov	r6, r0
  40500a:	e7e0      	b.n	404fce <__pow5mult+0x2a>
  40500c:	4605      	mov	r5, r0
  40500e:	e7d9      	b.n	404fc4 <__pow5mult+0x20>
  405010:	1e5a      	subs	r2, r3, #1
  405012:	4d0b      	ldr	r5, [pc, #44]	; (405040 <__pow5mult+0x9c>)
  405014:	2300      	movs	r3, #0
  405016:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  40501a:	f7ff fe97 	bl	404d4c <__multadd>
  40501e:	4605      	mov	r5, r0
  405020:	e7c8      	b.n	404fb4 <__pow5mult+0x10>
  405022:	2101      	movs	r1, #1
  405024:	4638      	mov	r0, r7
  405026:	f7ff fe61 	bl	404cec <_Balloc>
  40502a:	f240 2171 	movw	r1, #625	; 0x271
  40502e:	2201      	movs	r2, #1
  405030:	2300      	movs	r3, #0
  405032:	6141      	str	r1, [r0, #20]
  405034:	6102      	str	r2, [r0, #16]
  405036:	4606      	mov	r6, r0
  405038:	64b8      	str	r0, [r7, #72]	; 0x48
  40503a:	6003      	str	r3, [r0, #0]
  40503c:	e7be      	b.n	404fbc <__pow5mult+0x18>
  40503e:	bf00      	nop
  405040:	00406d88 	.word	0x00406d88

00405044 <__lshift>:
  405044:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  405048:	4691      	mov	r9, r2
  40504a:	690a      	ldr	r2, [r1, #16]
  40504c:	688b      	ldr	r3, [r1, #8]
  40504e:	ea4f 1469 	mov.w	r4, r9, asr #5
  405052:	eb04 0802 	add.w	r8, r4, r2
  405056:	f108 0501 	add.w	r5, r8, #1
  40505a:	429d      	cmp	r5, r3
  40505c:	460e      	mov	r6, r1
  40505e:	4607      	mov	r7, r0
  405060:	6849      	ldr	r1, [r1, #4]
  405062:	dd04      	ble.n	40506e <__lshift+0x2a>
  405064:	005b      	lsls	r3, r3, #1
  405066:	429d      	cmp	r5, r3
  405068:	f101 0101 	add.w	r1, r1, #1
  40506c:	dcfa      	bgt.n	405064 <__lshift+0x20>
  40506e:	4638      	mov	r0, r7
  405070:	f7ff fe3c 	bl	404cec <_Balloc>
  405074:	2c00      	cmp	r4, #0
  405076:	f100 0314 	add.w	r3, r0, #20
  40507a:	dd06      	ble.n	40508a <__lshift+0x46>
  40507c:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  405080:	2100      	movs	r1, #0
  405082:	f843 1b04 	str.w	r1, [r3], #4
  405086:	429a      	cmp	r2, r3
  405088:	d1fb      	bne.n	405082 <__lshift+0x3e>
  40508a:	6934      	ldr	r4, [r6, #16]
  40508c:	f106 0114 	add.w	r1, r6, #20
  405090:	f019 091f 	ands.w	r9, r9, #31
  405094:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  405098:	d01d      	beq.n	4050d6 <__lshift+0x92>
  40509a:	f1c9 0c20 	rsb	ip, r9, #32
  40509e:	2200      	movs	r2, #0
  4050a0:	680c      	ldr	r4, [r1, #0]
  4050a2:	fa04 f409 	lsl.w	r4, r4, r9
  4050a6:	4314      	orrs	r4, r2
  4050a8:	f843 4b04 	str.w	r4, [r3], #4
  4050ac:	f851 2b04 	ldr.w	r2, [r1], #4
  4050b0:	458e      	cmp	lr, r1
  4050b2:	fa22 f20c 	lsr.w	r2, r2, ip
  4050b6:	d8f3      	bhi.n	4050a0 <__lshift+0x5c>
  4050b8:	601a      	str	r2, [r3, #0]
  4050ba:	b10a      	cbz	r2, 4050c0 <__lshift+0x7c>
  4050bc:	f108 0502 	add.w	r5, r8, #2
  4050c0:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  4050c2:	6872      	ldr	r2, [r6, #4]
  4050c4:	3d01      	subs	r5, #1
  4050c6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  4050ca:	6105      	str	r5, [r0, #16]
  4050cc:	6031      	str	r1, [r6, #0]
  4050ce:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  4050d2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4050d6:	3b04      	subs	r3, #4
  4050d8:	f851 2b04 	ldr.w	r2, [r1], #4
  4050dc:	f843 2f04 	str.w	r2, [r3, #4]!
  4050e0:	458e      	cmp	lr, r1
  4050e2:	d8f9      	bhi.n	4050d8 <__lshift+0x94>
  4050e4:	e7ec      	b.n	4050c0 <__lshift+0x7c>
  4050e6:	bf00      	nop

004050e8 <__mcmp>:
  4050e8:	b430      	push	{r4, r5}
  4050ea:	690b      	ldr	r3, [r1, #16]
  4050ec:	4605      	mov	r5, r0
  4050ee:	6900      	ldr	r0, [r0, #16]
  4050f0:	1ac0      	subs	r0, r0, r3
  4050f2:	d10f      	bne.n	405114 <__mcmp+0x2c>
  4050f4:	009b      	lsls	r3, r3, #2
  4050f6:	3514      	adds	r5, #20
  4050f8:	3114      	adds	r1, #20
  4050fa:	4419      	add	r1, r3
  4050fc:	442b      	add	r3, r5
  4050fe:	e001      	b.n	405104 <__mcmp+0x1c>
  405100:	429d      	cmp	r5, r3
  405102:	d207      	bcs.n	405114 <__mcmp+0x2c>
  405104:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  405108:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  40510c:	4294      	cmp	r4, r2
  40510e:	d0f7      	beq.n	405100 <__mcmp+0x18>
  405110:	d302      	bcc.n	405118 <__mcmp+0x30>
  405112:	2001      	movs	r0, #1
  405114:	bc30      	pop	{r4, r5}
  405116:	4770      	bx	lr
  405118:	f04f 30ff 	mov.w	r0, #4294967295
  40511c:	e7fa      	b.n	405114 <__mcmp+0x2c>
  40511e:	bf00      	nop

00405120 <__mdiff>:
  405120:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405124:	690f      	ldr	r7, [r1, #16]
  405126:	460e      	mov	r6, r1
  405128:	6911      	ldr	r1, [r2, #16]
  40512a:	1a7f      	subs	r7, r7, r1
  40512c:	2f00      	cmp	r7, #0
  40512e:	4690      	mov	r8, r2
  405130:	d117      	bne.n	405162 <__mdiff+0x42>
  405132:	0089      	lsls	r1, r1, #2
  405134:	f106 0514 	add.w	r5, r6, #20
  405138:	f102 0e14 	add.w	lr, r2, #20
  40513c:	186b      	adds	r3, r5, r1
  40513e:	4471      	add	r1, lr
  405140:	e001      	b.n	405146 <__mdiff+0x26>
  405142:	429d      	cmp	r5, r3
  405144:	d25c      	bcs.n	405200 <__mdiff+0xe0>
  405146:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  40514a:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  40514e:	42a2      	cmp	r2, r4
  405150:	d0f7      	beq.n	405142 <__mdiff+0x22>
  405152:	d25e      	bcs.n	405212 <__mdiff+0xf2>
  405154:	4633      	mov	r3, r6
  405156:	462c      	mov	r4, r5
  405158:	4646      	mov	r6, r8
  40515a:	4675      	mov	r5, lr
  40515c:	4698      	mov	r8, r3
  40515e:	2701      	movs	r7, #1
  405160:	e005      	b.n	40516e <__mdiff+0x4e>
  405162:	db58      	blt.n	405216 <__mdiff+0xf6>
  405164:	f106 0514 	add.w	r5, r6, #20
  405168:	f108 0414 	add.w	r4, r8, #20
  40516c:	2700      	movs	r7, #0
  40516e:	6871      	ldr	r1, [r6, #4]
  405170:	f7ff fdbc 	bl	404cec <_Balloc>
  405174:	f8d8 3010 	ldr.w	r3, [r8, #16]
  405178:	6936      	ldr	r6, [r6, #16]
  40517a:	60c7      	str	r7, [r0, #12]
  40517c:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  405180:	46a6      	mov	lr, r4
  405182:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  405186:	f100 0414 	add.w	r4, r0, #20
  40518a:	2300      	movs	r3, #0
  40518c:	f85e 1b04 	ldr.w	r1, [lr], #4
  405190:	f855 8b04 	ldr.w	r8, [r5], #4
  405194:	b28a      	uxth	r2, r1
  405196:	fa13 f388 	uxtah	r3, r3, r8
  40519a:	0c09      	lsrs	r1, r1, #16
  40519c:	1a9a      	subs	r2, r3, r2
  40519e:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  4051a2:	eb03 4322 	add.w	r3, r3, r2, asr #16
  4051a6:	b292      	uxth	r2, r2
  4051a8:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  4051ac:	45f4      	cmp	ip, lr
  4051ae:	f844 2b04 	str.w	r2, [r4], #4
  4051b2:	ea4f 4323 	mov.w	r3, r3, asr #16
  4051b6:	d8e9      	bhi.n	40518c <__mdiff+0x6c>
  4051b8:	42af      	cmp	r7, r5
  4051ba:	d917      	bls.n	4051ec <__mdiff+0xcc>
  4051bc:	46a4      	mov	ip, r4
  4051be:	46ae      	mov	lr, r5
  4051c0:	f85e 2b04 	ldr.w	r2, [lr], #4
  4051c4:	fa13 f382 	uxtah	r3, r3, r2
  4051c8:	1419      	asrs	r1, r3, #16
  4051ca:	eb01 4112 	add.w	r1, r1, r2, lsr #16
  4051ce:	b29b      	uxth	r3, r3
  4051d0:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
  4051d4:	4577      	cmp	r7, lr
  4051d6:	f84c 2b04 	str.w	r2, [ip], #4
  4051da:	ea4f 4321 	mov.w	r3, r1, asr #16
  4051de:	d8ef      	bhi.n	4051c0 <__mdiff+0xa0>
  4051e0:	43ed      	mvns	r5, r5
  4051e2:	442f      	add	r7, r5
  4051e4:	f027 0703 	bic.w	r7, r7, #3
  4051e8:	3704      	adds	r7, #4
  4051ea:	443c      	add	r4, r7
  4051ec:	3c04      	subs	r4, #4
  4051ee:	b922      	cbnz	r2, 4051fa <__mdiff+0xda>
  4051f0:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  4051f4:	3e01      	subs	r6, #1
  4051f6:	2b00      	cmp	r3, #0
  4051f8:	d0fa      	beq.n	4051f0 <__mdiff+0xd0>
  4051fa:	6106      	str	r6, [r0, #16]
  4051fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405200:	2100      	movs	r1, #0
  405202:	f7ff fd73 	bl	404cec <_Balloc>
  405206:	2201      	movs	r2, #1
  405208:	2300      	movs	r3, #0
  40520a:	6102      	str	r2, [r0, #16]
  40520c:	6143      	str	r3, [r0, #20]
  40520e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405212:	4674      	mov	r4, lr
  405214:	e7ab      	b.n	40516e <__mdiff+0x4e>
  405216:	4633      	mov	r3, r6
  405218:	f106 0414 	add.w	r4, r6, #20
  40521c:	f102 0514 	add.w	r5, r2, #20
  405220:	4616      	mov	r6, r2
  405222:	2701      	movs	r7, #1
  405224:	4698      	mov	r8, r3
  405226:	e7a2      	b.n	40516e <__mdiff+0x4e>

00405228 <__d2b>:
  405228:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40522c:	b082      	sub	sp, #8
  40522e:	2101      	movs	r1, #1
  405230:	461c      	mov	r4, r3
  405232:	f3c3 570a 	ubfx	r7, r3, #20, #11
  405236:	4615      	mov	r5, r2
  405238:	9e08      	ldr	r6, [sp, #32]
  40523a:	f7ff fd57 	bl	404cec <_Balloc>
  40523e:	f3c4 0413 	ubfx	r4, r4, #0, #20
  405242:	4680      	mov	r8, r0
  405244:	b10f      	cbz	r7, 40524a <__d2b+0x22>
  405246:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  40524a:	9401      	str	r4, [sp, #4]
  40524c:	b31d      	cbz	r5, 405296 <__d2b+0x6e>
  40524e:	a802      	add	r0, sp, #8
  405250:	f840 5d08 	str.w	r5, [r0, #-8]!
  405254:	f7ff fdda 	bl	404e0c <__lo0bits>
  405258:	2800      	cmp	r0, #0
  40525a:	d134      	bne.n	4052c6 <__d2b+0x9e>
  40525c:	e89d 000c 	ldmia.w	sp, {r2, r3}
  405260:	f8c8 2014 	str.w	r2, [r8, #20]
  405264:	2b00      	cmp	r3, #0
  405266:	bf0c      	ite	eq
  405268:	2101      	moveq	r1, #1
  40526a:	2102      	movne	r1, #2
  40526c:	f8c8 3018 	str.w	r3, [r8, #24]
  405270:	f8c8 1010 	str.w	r1, [r8, #16]
  405274:	b9df      	cbnz	r7, 4052ae <__d2b+0x86>
  405276:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  40527a:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  40527e:	6030      	str	r0, [r6, #0]
  405280:	6918      	ldr	r0, [r3, #16]
  405282:	f7ff fda3 	bl	404dcc <__hi0bits>
  405286:	9b09      	ldr	r3, [sp, #36]	; 0x24
  405288:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  40528c:	6018      	str	r0, [r3, #0]
  40528e:	4640      	mov	r0, r8
  405290:	b002      	add	sp, #8
  405292:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405296:	a801      	add	r0, sp, #4
  405298:	f7ff fdb8 	bl	404e0c <__lo0bits>
  40529c:	9b01      	ldr	r3, [sp, #4]
  40529e:	f8c8 3014 	str.w	r3, [r8, #20]
  4052a2:	2101      	movs	r1, #1
  4052a4:	3020      	adds	r0, #32
  4052a6:	f8c8 1010 	str.w	r1, [r8, #16]
  4052aa:	2f00      	cmp	r7, #0
  4052ac:	d0e3      	beq.n	405276 <__d2b+0x4e>
  4052ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4052b0:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  4052b4:	4407      	add	r7, r0
  4052b6:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  4052ba:	6037      	str	r7, [r6, #0]
  4052bc:	6018      	str	r0, [r3, #0]
  4052be:	4640      	mov	r0, r8
  4052c0:	b002      	add	sp, #8
  4052c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4052c6:	e89d 000a 	ldmia.w	sp, {r1, r3}
  4052ca:	f1c0 0220 	rsb	r2, r0, #32
  4052ce:	fa03 f202 	lsl.w	r2, r3, r2
  4052d2:	430a      	orrs	r2, r1
  4052d4:	40c3      	lsrs	r3, r0
  4052d6:	9301      	str	r3, [sp, #4]
  4052d8:	f8c8 2014 	str.w	r2, [r8, #20]
  4052dc:	e7c2      	b.n	405264 <__d2b+0x3c>
  4052de:	bf00      	nop

004052e0 <_sbrk_r>:
  4052e0:	b538      	push	{r3, r4, r5, lr}
  4052e2:	4c07      	ldr	r4, [pc, #28]	; (405300 <_sbrk_r+0x20>)
  4052e4:	2300      	movs	r3, #0
  4052e6:	4605      	mov	r5, r0
  4052e8:	4608      	mov	r0, r1
  4052ea:	6023      	str	r3, [r4, #0]
  4052ec:	f7fc f8bc 	bl	401468 <_sbrk>
  4052f0:	1c43      	adds	r3, r0, #1
  4052f2:	d000      	beq.n	4052f6 <_sbrk_r+0x16>
  4052f4:	bd38      	pop	{r3, r4, r5, pc}
  4052f6:	6823      	ldr	r3, [r4, #0]
  4052f8:	2b00      	cmp	r3, #0
  4052fa:	d0fb      	beq.n	4052f4 <_sbrk_r+0x14>
  4052fc:	602b      	str	r3, [r5, #0]
  4052fe:	bd38      	pop	{r3, r4, r5, pc}
  405300:	20400cd4 	.word	0x20400cd4
	...

00405340 <strlen>:
  405340:	f890 f000 	pld	[r0]
  405344:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  405348:	f020 0107 	bic.w	r1, r0, #7
  40534c:	f06f 0c00 	mvn.w	ip, #0
  405350:	f010 0407 	ands.w	r4, r0, #7
  405354:	f891 f020 	pld	[r1, #32]
  405358:	f040 8049 	bne.w	4053ee <strlen+0xae>
  40535c:	f04f 0400 	mov.w	r4, #0
  405360:	f06f 0007 	mvn.w	r0, #7
  405364:	e9d1 2300 	ldrd	r2, r3, [r1]
  405368:	f891 f040 	pld	[r1, #64]	; 0x40
  40536c:	f100 0008 	add.w	r0, r0, #8
  405370:	fa82 f24c 	uadd8	r2, r2, ip
  405374:	faa4 f28c 	sel	r2, r4, ip
  405378:	fa83 f34c 	uadd8	r3, r3, ip
  40537c:	faa2 f38c 	sel	r3, r2, ip
  405380:	bb4b      	cbnz	r3, 4053d6 <strlen+0x96>
  405382:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  405386:	fa82 f24c 	uadd8	r2, r2, ip
  40538a:	f100 0008 	add.w	r0, r0, #8
  40538e:	faa4 f28c 	sel	r2, r4, ip
  405392:	fa83 f34c 	uadd8	r3, r3, ip
  405396:	faa2 f38c 	sel	r3, r2, ip
  40539a:	b9e3      	cbnz	r3, 4053d6 <strlen+0x96>
  40539c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  4053a0:	fa82 f24c 	uadd8	r2, r2, ip
  4053a4:	f100 0008 	add.w	r0, r0, #8
  4053a8:	faa4 f28c 	sel	r2, r4, ip
  4053ac:	fa83 f34c 	uadd8	r3, r3, ip
  4053b0:	faa2 f38c 	sel	r3, r2, ip
  4053b4:	b97b      	cbnz	r3, 4053d6 <strlen+0x96>
  4053b6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  4053ba:	f101 0120 	add.w	r1, r1, #32
  4053be:	fa82 f24c 	uadd8	r2, r2, ip
  4053c2:	f100 0008 	add.w	r0, r0, #8
  4053c6:	faa4 f28c 	sel	r2, r4, ip
  4053ca:	fa83 f34c 	uadd8	r3, r3, ip
  4053ce:	faa2 f38c 	sel	r3, r2, ip
  4053d2:	2b00      	cmp	r3, #0
  4053d4:	d0c6      	beq.n	405364 <strlen+0x24>
  4053d6:	2a00      	cmp	r2, #0
  4053d8:	bf04      	itt	eq
  4053da:	3004      	addeq	r0, #4
  4053dc:	461a      	moveq	r2, r3
  4053de:	ba12      	rev	r2, r2
  4053e0:	fab2 f282 	clz	r2, r2
  4053e4:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  4053e8:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  4053ec:	4770      	bx	lr
  4053ee:	e9d1 2300 	ldrd	r2, r3, [r1]
  4053f2:	f004 0503 	and.w	r5, r4, #3
  4053f6:	f1c4 0000 	rsb	r0, r4, #0
  4053fa:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  4053fe:	f014 0f04 	tst.w	r4, #4
  405402:	f891 f040 	pld	[r1, #64]	; 0x40
  405406:	fa0c f505 	lsl.w	r5, ip, r5
  40540a:	ea62 0205 	orn	r2, r2, r5
  40540e:	bf1c      	itt	ne
  405410:	ea63 0305 	ornne	r3, r3, r5
  405414:	4662      	movne	r2, ip
  405416:	f04f 0400 	mov.w	r4, #0
  40541a:	e7a9      	b.n	405370 <strlen+0x30>

0040541c <__ssprint_r>:
  40541c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405420:	6893      	ldr	r3, [r2, #8]
  405422:	b083      	sub	sp, #12
  405424:	4690      	mov	r8, r2
  405426:	2b00      	cmp	r3, #0
  405428:	d070      	beq.n	40550c <__ssprint_r+0xf0>
  40542a:	4682      	mov	sl, r0
  40542c:	460c      	mov	r4, r1
  40542e:	6817      	ldr	r7, [r2, #0]
  405430:	688d      	ldr	r5, [r1, #8]
  405432:	6808      	ldr	r0, [r1, #0]
  405434:	e042      	b.n	4054bc <__ssprint_r+0xa0>
  405436:	89a3      	ldrh	r3, [r4, #12]
  405438:	f413 6f90 	tst.w	r3, #1152	; 0x480
  40543c:	d02e      	beq.n	40549c <__ssprint_r+0x80>
  40543e:	6965      	ldr	r5, [r4, #20]
  405440:	6921      	ldr	r1, [r4, #16]
  405442:	eb05 0545 	add.w	r5, r5, r5, lsl #1
  405446:	eba0 0b01 	sub.w	fp, r0, r1
  40544a:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
  40544e:	f10b 0001 	add.w	r0, fp, #1
  405452:	106d      	asrs	r5, r5, #1
  405454:	4430      	add	r0, r6
  405456:	42a8      	cmp	r0, r5
  405458:	462a      	mov	r2, r5
  40545a:	bf84      	itt	hi
  40545c:	4605      	movhi	r5, r0
  40545e:	462a      	movhi	r2, r5
  405460:	055b      	lsls	r3, r3, #21
  405462:	d538      	bpl.n	4054d6 <__ssprint_r+0xba>
  405464:	4611      	mov	r1, r2
  405466:	4650      	mov	r0, sl
  405468:	f7ff f898 	bl	40459c <_malloc_r>
  40546c:	2800      	cmp	r0, #0
  40546e:	d03c      	beq.n	4054ea <__ssprint_r+0xce>
  405470:	465a      	mov	r2, fp
  405472:	6921      	ldr	r1, [r4, #16]
  405474:	9001      	str	r0, [sp, #4]
  405476:	f7ff fb93 	bl	404ba0 <memcpy>
  40547a:	89a2      	ldrh	r2, [r4, #12]
  40547c:	9b01      	ldr	r3, [sp, #4]
  40547e:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  405482:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  405486:	81a2      	strh	r2, [r4, #12]
  405488:	eba5 020b 	sub.w	r2, r5, fp
  40548c:	eb03 000b 	add.w	r0, r3, fp
  405490:	6165      	str	r5, [r4, #20]
  405492:	6123      	str	r3, [r4, #16]
  405494:	6020      	str	r0, [r4, #0]
  405496:	60a2      	str	r2, [r4, #8]
  405498:	4635      	mov	r5, r6
  40549a:	46b3      	mov	fp, r6
  40549c:	465a      	mov	r2, fp
  40549e:	4649      	mov	r1, r9
  4054a0:	f000 fa18 	bl	4058d4 <memmove>
  4054a4:	f8d8 3008 	ldr.w	r3, [r8, #8]
  4054a8:	68a2      	ldr	r2, [r4, #8]
  4054aa:	6820      	ldr	r0, [r4, #0]
  4054ac:	1b55      	subs	r5, r2, r5
  4054ae:	4458      	add	r0, fp
  4054b0:	1b9e      	subs	r6, r3, r6
  4054b2:	60a5      	str	r5, [r4, #8]
  4054b4:	6020      	str	r0, [r4, #0]
  4054b6:	f8c8 6008 	str.w	r6, [r8, #8]
  4054ba:	b33e      	cbz	r6, 40550c <__ssprint_r+0xf0>
  4054bc:	687e      	ldr	r6, [r7, #4]
  4054be:	463b      	mov	r3, r7
  4054c0:	3708      	adds	r7, #8
  4054c2:	2e00      	cmp	r6, #0
  4054c4:	d0fa      	beq.n	4054bc <__ssprint_r+0xa0>
  4054c6:	42ae      	cmp	r6, r5
  4054c8:	f8d3 9000 	ldr.w	r9, [r3]
  4054cc:	46ab      	mov	fp, r5
  4054ce:	d2b2      	bcs.n	405436 <__ssprint_r+0x1a>
  4054d0:	4635      	mov	r5, r6
  4054d2:	46b3      	mov	fp, r6
  4054d4:	e7e2      	b.n	40549c <__ssprint_r+0x80>
  4054d6:	4650      	mov	r0, sl
  4054d8:	f000 fa60 	bl	40599c <_realloc_r>
  4054dc:	4603      	mov	r3, r0
  4054de:	2800      	cmp	r0, #0
  4054e0:	d1d2      	bne.n	405488 <__ssprint_r+0x6c>
  4054e2:	6921      	ldr	r1, [r4, #16]
  4054e4:	4650      	mov	r0, sl
  4054e6:	f000 f8f9 	bl	4056dc <_free_r>
  4054ea:	230c      	movs	r3, #12
  4054ec:	f8ca 3000 	str.w	r3, [sl]
  4054f0:	89a3      	ldrh	r3, [r4, #12]
  4054f2:	2200      	movs	r2, #0
  4054f4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4054f8:	f04f 30ff 	mov.w	r0, #4294967295
  4054fc:	81a3      	strh	r3, [r4, #12]
  4054fe:	f8c8 2008 	str.w	r2, [r8, #8]
  405502:	f8c8 2004 	str.w	r2, [r8, #4]
  405506:	b003      	add	sp, #12
  405508:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40550c:	2000      	movs	r0, #0
  40550e:	f8c8 0004 	str.w	r0, [r8, #4]
  405512:	b003      	add	sp, #12
  405514:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00405518 <__register_exitproc>:
  405518:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  40551c:	4d2c      	ldr	r5, [pc, #176]	; (4055d0 <__register_exitproc+0xb8>)
  40551e:	4606      	mov	r6, r0
  405520:	6828      	ldr	r0, [r5, #0]
  405522:	4698      	mov	r8, r3
  405524:	460f      	mov	r7, r1
  405526:	4691      	mov	r9, r2
  405528:	f7ff f834 	bl	404594 <__retarget_lock_acquire_recursive>
  40552c:	4b29      	ldr	r3, [pc, #164]	; (4055d4 <__register_exitproc+0xbc>)
  40552e:	681c      	ldr	r4, [r3, #0]
  405530:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  405534:	2b00      	cmp	r3, #0
  405536:	d03e      	beq.n	4055b6 <__register_exitproc+0x9e>
  405538:	685a      	ldr	r2, [r3, #4]
  40553a:	2a1f      	cmp	r2, #31
  40553c:	dc1c      	bgt.n	405578 <__register_exitproc+0x60>
  40553e:	f102 0e01 	add.w	lr, r2, #1
  405542:	b176      	cbz	r6, 405562 <__register_exitproc+0x4a>
  405544:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  405548:	2401      	movs	r4, #1
  40554a:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  40554e:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  405552:	4094      	lsls	r4, r2
  405554:	4320      	orrs	r0, r4
  405556:	2e02      	cmp	r6, #2
  405558:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  40555c:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  405560:	d023      	beq.n	4055aa <__register_exitproc+0x92>
  405562:	3202      	adds	r2, #2
  405564:	f8c3 e004 	str.w	lr, [r3, #4]
  405568:	6828      	ldr	r0, [r5, #0]
  40556a:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  40556e:	f7ff f813 	bl	404598 <__retarget_lock_release_recursive>
  405572:	2000      	movs	r0, #0
  405574:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  405578:	4b17      	ldr	r3, [pc, #92]	; (4055d8 <__register_exitproc+0xc0>)
  40557a:	b30b      	cbz	r3, 4055c0 <__register_exitproc+0xa8>
  40557c:	f44f 70c8 	mov.w	r0, #400	; 0x190
  405580:	f3af 8000 	nop.w
  405584:	4603      	mov	r3, r0
  405586:	b1d8      	cbz	r0, 4055c0 <__register_exitproc+0xa8>
  405588:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  40558c:	6002      	str	r2, [r0, #0]
  40558e:	2100      	movs	r1, #0
  405590:	6041      	str	r1, [r0, #4]
  405592:	460a      	mov	r2, r1
  405594:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  405598:	f04f 0e01 	mov.w	lr, #1
  40559c:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  4055a0:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  4055a4:	2e00      	cmp	r6, #0
  4055a6:	d0dc      	beq.n	405562 <__register_exitproc+0x4a>
  4055a8:	e7cc      	b.n	405544 <__register_exitproc+0x2c>
  4055aa:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  4055ae:	430c      	orrs	r4, r1
  4055b0:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  4055b4:	e7d5      	b.n	405562 <__register_exitproc+0x4a>
  4055b6:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  4055ba:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  4055be:	e7bb      	b.n	405538 <__register_exitproc+0x20>
  4055c0:	6828      	ldr	r0, [r5, #0]
  4055c2:	f7fe ffe9 	bl	404598 <__retarget_lock_release_recursive>
  4055c6:	f04f 30ff 	mov.w	r0, #4294967295
  4055ca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4055ce:	bf00      	nop
  4055d0:	20400450 	.word	0x20400450
  4055d4:	00406c20 	.word	0x00406c20
  4055d8:	00000000 	.word	0x00000000

004055dc <_calloc_r>:
  4055dc:	b510      	push	{r4, lr}
  4055de:	fb02 f101 	mul.w	r1, r2, r1
  4055e2:	f7fe ffdb 	bl	40459c <_malloc_r>
  4055e6:	4604      	mov	r4, r0
  4055e8:	b1d8      	cbz	r0, 405622 <_calloc_r+0x46>
  4055ea:	f850 2c04 	ldr.w	r2, [r0, #-4]
  4055ee:	f022 0203 	bic.w	r2, r2, #3
  4055f2:	3a04      	subs	r2, #4
  4055f4:	2a24      	cmp	r2, #36	; 0x24
  4055f6:	d818      	bhi.n	40562a <_calloc_r+0x4e>
  4055f8:	2a13      	cmp	r2, #19
  4055fa:	d914      	bls.n	405626 <_calloc_r+0x4a>
  4055fc:	2300      	movs	r3, #0
  4055fe:	2a1b      	cmp	r2, #27
  405600:	6003      	str	r3, [r0, #0]
  405602:	6043      	str	r3, [r0, #4]
  405604:	d916      	bls.n	405634 <_calloc_r+0x58>
  405606:	2a24      	cmp	r2, #36	; 0x24
  405608:	6083      	str	r3, [r0, #8]
  40560a:	60c3      	str	r3, [r0, #12]
  40560c:	bf11      	iteee	ne
  40560e:	f100 0210 	addne.w	r2, r0, #16
  405612:	6103      	streq	r3, [r0, #16]
  405614:	6143      	streq	r3, [r0, #20]
  405616:	f100 0218 	addeq.w	r2, r0, #24
  40561a:	2300      	movs	r3, #0
  40561c:	6013      	str	r3, [r2, #0]
  40561e:	6053      	str	r3, [r2, #4]
  405620:	6093      	str	r3, [r2, #8]
  405622:	4620      	mov	r0, r4
  405624:	bd10      	pop	{r4, pc}
  405626:	4602      	mov	r2, r0
  405628:	e7f7      	b.n	40561a <_calloc_r+0x3e>
  40562a:	2100      	movs	r1, #0
  40562c:	f7fc fd18 	bl	402060 <memset>
  405630:	4620      	mov	r0, r4
  405632:	bd10      	pop	{r4, pc}
  405634:	f100 0208 	add.w	r2, r0, #8
  405638:	e7ef      	b.n	40561a <_calloc_r+0x3e>
  40563a:	bf00      	nop

0040563c <_malloc_trim_r>:
  40563c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40563e:	4f24      	ldr	r7, [pc, #144]	; (4056d0 <_malloc_trim_r+0x94>)
  405640:	460c      	mov	r4, r1
  405642:	4606      	mov	r6, r0
  405644:	f7ff fb46 	bl	404cd4 <__malloc_lock>
  405648:	68bb      	ldr	r3, [r7, #8]
  40564a:	685d      	ldr	r5, [r3, #4]
  40564c:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  405650:	310f      	adds	r1, #15
  405652:	f025 0503 	bic.w	r5, r5, #3
  405656:	4429      	add	r1, r5
  405658:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  40565c:	f021 010f 	bic.w	r1, r1, #15
  405660:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  405664:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  405668:	db07      	blt.n	40567a <_malloc_trim_r+0x3e>
  40566a:	2100      	movs	r1, #0
  40566c:	4630      	mov	r0, r6
  40566e:	f7ff fe37 	bl	4052e0 <_sbrk_r>
  405672:	68bb      	ldr	r3, [r7, #8]
  405674:	442b      	add	r3, r5
  405676:	4298      	cmp	r0, r3
  405678:	d004      	beq.n	405684 <_malloc_trim_r+0x48>
  40567a:	4630      	mov	r0, r6
  40567c:	f7ff fb30 	bl	404ce0 <__malloc_unlock>
  405680:	2000      	movs	r0, #0
  405682:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  405684:	4261      	negs	r1, r4
  405686:	4630      	mov	r0, r6
  405688:	f7ff fe2a 	bl	4052e0 <_sbrk_r>
  40568c:	3001      	adds	r0, #1
  40568e:	d00d      	beq.n	4056ac <_malloc_trim_r+0x70>
  405690:	4b10      	ldr	r3, [pc, #64]	; (4056d4 <_malloc_trim_r+0x98>)
  405692:	68ba      	ldr	r2, [r7, #8]
  405694:	6819      	ldr	r1, [r3, #0]
  405696:	1b2d      	subs	r5, r5, r4
  405698:	f045 0501 	orr.w	r5, r5, #1
  40569c:	4630      	mov	r0, r6
  40569e:	1b09      	subs	r1, r1, r4
  4056a0:	6055      	str	r5, [r2, #4]
  4056a2:	6019      	str	r1, [r3, #0]
  4056a4:	f7ff fb1c 	bl	404ce0 <__malloc_unlock>
  4056a8:	2001      	movs	r0, #1
  4056aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4056ac:	2100      	movs	r1, #0
  4056ae:	4630      	mov	r0, r6
  4056b0:	f7ff fe16 	bl	4052e0 <_sbrk_r>
  4056b4:	68ba      	ldr	r2, [r7, #8]
  4056b6:	1a83      	subs	r3, r0, r2
  4056b8:	2b0f      	cmp	r3, #15
  4056ba:	ddde      	ble.n	40567a <_malloc_trim_r+0x3e>
  4056bc:	4c06      	ldr	r4, [pc, #24]	; (4056d8 <_malloc_trim_r+0x9c>)
  4056be:	4905      	ldr	r1, [pc, #20]	; (4056d4 <_malloc_trim_r+0x98>)
  4056c0:	6824      	ldr	r4, [r4, #0]
  4056c2:	f043 0301 	orr.w	r3, r3, #1
  4056c6:	1b00      	subs	r0, r0, r4
  4056c8:	6053      	str	r3, [r2, #4]
  4056ca:	6008      	str	r0, [r1, #0]
  4056cc:	e7d5      	b.n	40567a <_malloc_trim_r+0x3e>
  4056ce:	bf00      	nop
  4056d0:	20400454 	.word	0x20400454
  4056d4:	20400c7c 	.word	0x20400c7c
  4056d8:	2040085c 	.word	0x2040085c

004056dc <_free_r>:
  4056dc:	2900      	cmp	r1, #0
  4056de:	d044      	beq.n	40576a <_free_r+0x8e>
  4056e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4056e4:	460d      	mov	r5, r1
  4056e6:	4680      	mov	r8, r0
  4056e8:	f7ff faf4 	bl	404cd4 <__malloc_lock>
  4056ec:	f855 7c04 	ldr.w	r7, [r5, #-4]
  4056f0:	4969      	ldr	r1, [pc, #420]	; (405898 <_free_r+0x1bc>)
  4056f2:	f027 0301 	bic.w	r3, r7, #1
  4056f6:	f1a5 0408 	sub.w	r4, r5, #8
  4056fa:	18e2      	adds	r2, r4, r3
  4056fc:	688e      	ldr	r6, [r1, #8]
  4056fe:	6850      	ldr	r0, [r2, #4]
  405700:	42b2      	cmp	r2, r6
  405702:	f020 0003 	bic.w	r0, r0, #3
  405706:	d05e      	beq.n	4057c6 <_free_r+0xea>
  405708:	07fe      	lsls	r6, r7, #31
  40570a:	6050      	str	r0, [r2, #4]
  40570c:	d40b      	bmi.n	405726 <_free_r+0x4a>
  40570e:	f855 7c08 	ldr.w	r7, [r5, #-8]
  405712:	1be4      	subs	r4, r4, r7
  405714:	f101 0e08 	add.w	lr, r1, #8
  405718:	68a5      	ldr	r5, [r4, #8]
  40571a:	4575      	cmp	r5, lr
  40571c:	443b      	add	r3, r7
  40571e:	d06d      	beq.n	4057fc <_free_r+0x120>
  405720:	68e7      	ldr	r7, [r4, #12]
  405722:	60ef      	str	r7, [r5, #12]
  405724:	60bd      	str	r5, [r7, #8]
  405726:	1815      	adds	r5, r2, r0
  405728:	686d      	ldr	r5, [r5, #4]
  40572a:	07ed      	lsls	r5, r5, #31
  40572c:	d53e      	bpl.n	4057ac <_free_r+0xd0>
  40572e:	f043 0201 	orr.w	r2, r3, #1
  405732:	6062      	str	r2, [r4, #4]
  405734:	50e3      	str	r3, [r4, r3]
  405736:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  40573a:	d217      	bcs.n	40576c <_free_r+0x90>
  40573c:	08db      	lsrs	r3, r3, #3
  40573e:	1c58      	adds	r0, r3, #1
  405740:	109a      	asrs	r2, r3, #2
  405742:	684d      	ldr	r5, [r1, #4]
  405744:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  405748:	60a7      	str	r7, [r4, #8]
  40574a:	2301      	movs	r3, #1
  40574c:	4093      	lsls	r3, r2
  40574e:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  405752:	432b      	orrs	r3, r5
  405754:	3a08      	subs	r2, #8
  405756:	60e2      	str	r2, [r4, #12]
  405758:	604b      	str	r3, [r1, #4]
  40575a:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  40575e:	60fc      	str	r4, [r7, #12]
  405760:	4640      	mov	r0, r8
  405762:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  405766:	f7ff babb 	b.w	404ce0 <__malloc_unlock>
  40576a:	4770      	bx	lr
  40576c:	0a5a      	lsrs	r2, r3, #9
  40576e:	2a04      	cmp	r2, #4
  405770:	d852      	bhi.n	405818 <_free_r+0x13c>
  405772:	099a      	lsrs	r2, r3, #6
  405774:	f102 0739 	add.w	r7, r2, #57	; 0x39
  405778:	00ff      	lsls	r7, r7, #3
  40577a:	f102 0538 	add.w	r5, r2, #56	; 0x38
  40577e:	19c8      	adds	r0, r1, r7
  405780:	59ca      	ldr	r2, [r1, r7]
  405782:	3808      	subs	r0, #8
  405784:	4290      	cmp	r0, r2
  405786:	d04f      	beq.n	405828 <_free_r+0x14c>
  405788:	6851      	ldr	r1, [r2, #4]
  40578a:	f021 0103 	bic.w	r1, r1, #3
  40578e:	428b      	cmp	r3, r1
  405790:	d232      	bcs.n	4057f8 <_free_r+0x11c>
  405792:	6892      	ldr	r2, [r2, #8]
  405794:	4290      	cmp	r0, r2
  405796:	d1f7      	bne.n	405788 <_free_r+0xac>
  405798:	68c3      	ldr	r3, [r0, #12]
  40579a:	60a0      	str	r0, [r4, #8]
  40579c:	60e3      	str	r3, [r4, #12]
  40579e:	609c      	str	r4, [r3, #8]
  4057a0:	60c4      	str	r4, [r0, #12]
  4057a2:	4640      	mov	r0, r8
  4057a4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4057a8:	f7ff ba9a 	b.w	404ce0 <__malloc_unlock>
  4057ac:	6895      	ldr	r5, [r2, #8]
  4057ae:	4f3b      	ldr	r7, [pc, #236]	; (40589c <_free_r+0x1c0>)
  4057b0:	42bd      	cmp	r5, r7
  4057b2:	4403      	add	r3, r0
  4057b4:	d040      	beq.n	405838 <_free_r+0x15c>
  4057b6:	68d0      	ldr	r0, [r2, #12]
  4057b8:	60e8      	str	r0, [r5, #12]
  4057ba:	f043 0201 	orr.w	r2, r3, #1
  4057be:	6085      	str	r5, [r0, #8]
  4057c0:	6062      	str	r2, [r4, #4]
  4057c2:	50e3      	str	r3, [r4, r3]
  4057c4:	e7b7      	b.n	405736 <_free_r+0x5a>
  4057c6:	07ff      	lsls	r7, r7, #31
  4057c8:	4403      	add	r3, r0
  4057ca:	d407      	bmi.n	4057dc <_free_r+0x100>
  4057cc:	f855 2c08 	ldr.w	r2, [r5, #-8]
  4057d0:	1aa4      	subs	r4, r4, r2
  4057d2:	4413      	add	r3, r2
  4057d4:	68a0      	ldr	r0, [r4, #8]
  4057d6:	68e2      	ldr	r2, [r4, #12]
  4057d8:	60c2      	str	r2, [r0, #12]
  4057da:	6090      	str	r0, [r2, #8]
  4057dc:	4a30      	ldr	r2, [pc, #192]	; (4058a0 <_free_r+0x1c4>)
  4057de:	6812      	ldr	r2, [r2, #0]
  4057e0:	f043 0001 	orr.w	r0, r3, #1
  4057e4:	4293      	cmp	r3, r2
  4057e6:	6060      	str	r0, [r4, #4]
  4057e8:	608c      	str	r4, [r1, #8]
  4057ea:	d3b9      	bcc.n	405760 <_free_r+0x84>
  4057ec:	4b2d      	ldr	r3, [pc, #180]	; (4058a4 <_free_r+0x1c8>)
  4057ee:	4640      	mov	r0, r8
  4057f0:	6819      	ldr	r1, [r3, #0]
  4057f2:	f7ff ff23 	bl	40563c <_malloc_trim_r>
  4057f6:	e7b3      	b.n	405760 <_free_r+0x84>
  4057f8:	4610      	mov	r0, r2
  4057fa:	e7cd      	b.n	405798 <_free_r+0xbc>
  4057fc:	1811      	adds	r1, r2, r0
  4057fe:	6849      	ldr	r1, [r1, #4]
  405800:	07c9      	lsls	r1, r1, #31
  405802:	d444      	bmi.n	40588e <_free_r+0x1b2>
  405804:	6891      	ldr	r1, [r2, #8]
  405806:	68d2      	ldr	r2, [r2, #12]
  405808:	60ca      	str	r2, [r1, #12]
  40580a:	4403      	add	r3, r0
  40580c:	f043 0001 	orr.w	r0, r3, #1
  405810:	6091      	str	r1, [r2, #8]
  405812:	6060      	str	r0, [r4, #4]
  405814:	50e3      	str	r3, [r4, r3]
  405816:	e7a3      	b.n	405760 <_free_r+0x84>
  405818:	2a14      	cmp	r2, #20
  40581a:	d816      	bhi.n	40584a <_free_r+0x16e>
  40581c:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  405820:	00ff      	lsls	r7, r7, #3
  405822:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  405826:	e7aa      	b.n	40577e <_free_r+0xa2>
  405828:	10aa      	asrs	r2, r5, #2
  40582a:	2301      	movs	r3, #1
  40582c:	684d      	ldr	r5, [r1, #4]
  40582e:	4093      	lsls	r3, r2
  405830:	432b      	orrs	r3, r5
  405832:	604b      	str	r3, [r1, #4]
  405834:	4603      	mov	r3, r0
  405836:	e7b0      	b.n	40579a <_free_r+0xbe>
  405838:	f043 0201 	orr.w	r2, r3, #1
  40583c:	614c      	str	r4, [r1, #20]
  40583e:	610c      	str	r4, [r1, #16]
  405840:	60e5      	str	r5, [r4, #12]
  405842:	60a5      	str	r5, [r4, #8]
  405844:	6062      	str	r2, [r4, #4]
  405846:	50e3      	str	r3, [r4, r3]
  405848:	e78a      	b.n	405760 <_free_r+0x84>
  40584a:	2a54      	cmp	r2, #84	; 0x54
  40584c:	d806      	bhi.n	40585c <_free_r+0x180>
  40584e:	0b1a      	lsrs	r2, r3, #12
  405850:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  405854:	00ff      	lsls	r7, r7, #3
  405856:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  40585a:	e790      	b.n	40577e <_free_r+0xa2>
  40585c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  405860:	d806      	bhi.n	405870 <_free_r+0x194>
  405862:	0bda      	lsrs	r2, r3, #15
  405864:	f102 0778 	add.w	r7, r2, #120	; 0x78
  405868:	00ff      	lsls	r7, r7, #3
  40586a:	f102 0577 	add.w	r5, r2, #119	; 0x77
  40586e:	e786      	b.n	40577e <_free_r+0xa2>
  405870:	f240 5054 	movw	r0, #1364	; 0x554
  405874:	4282      	cmp	r2, r0
  405876:	d806      	bhi.n	405886 <_free_r+0x1aa>
  405878:	0c9a      	lsrs	r2, r3, #18
  40587a:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  40587e:	00ff      	lsls	r7, r7, #3
  405880:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  405884:	e77b      	b.n	40577e <_free_r+0xa2>
  405886:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  40588a:	257e      	movs	r5, #126	; 0x7e
  40588c:	e777      	b.n	40577e <_free_r+0xa2>
  40588e:	f043 0101 	orr.w	r1, r3, #1
  405892:	6061      	str	r1, [r4, #4]
  405894:	6013      	str	r3, [r2, #0]
  405896:	e763      	b.n	405760 <_free_r+0x84>
  405898:	20400454 	.word	0x20400454
  40589c:	2040045c 	.word	0x2040045c
  4058a0:	20400860 	.word	0x20400860
  4058a4:	20400cac 	.word	0x20400cac

004058a8 <__ascii_mbtowc>:
  4058a8:	b082      	sub	sp, #8
  4058aa:	b149      	cbz	r1, 4058c0 <__ascii_mbtowc+0x18>
  4058ac:	b15a      	cbz	r2, 4058c6 <__ascii_mbtowc+0x1e>
  4058ae:	b16b      	cbz	r3, 4058cc <__ascii_mbtowc+0x24>
  4058b0:	7813      	ldrb	r3, [r2, #0]
  4058b2:	600b      	str	r3, [r1, #0]
  4058b4:	7812      	ldrb	r2, [r2, #0]
  4058b6:	1c10      	adds	r0, r2, #0
  4058b8:	bf18      	it	ne
  4058ba:	2001      	movne	r0, #1
  4058bc:	b002      	add	sp, #8
  4058be:	4770      	bx	lr
  4058c0:	a901      	add	r1, sp, #4
  4058c2:	2a00      	cmp	r2, #0
  4058c4:	d1f3      	bne.n	4058ae <__ascii_mbtowc+0x6>
  4058c6:	4610      	mov	r0, r2
  4058c8:	b002      	add	sp, #8
  4058ca:	4770      	bx	lr
  4058cc:	f06f 0001 	mvn.w	r0, #1
  4058d0:	e7f4      	b.n	4058bc <__ascii_mbtowc+0x14>
  4058d2:	bf00      	nop

004058d4 <memmove>:
  4058d4:	4288      	cmp	r0, r1
  4058d6:	b5f0      	push	{r4, r5, r6, r7, lr}
  4058d8:	d90d      	bls.n	4058f6 <memmove+0x22>
  4058da:	188b      	adds	r3, r1, r2
  4058dc:	4298      	cmp	r0, r3
  4058de:	d20a      	bcs.n	4058f6 <memmove+0x22>
  4058e0:	1884      	adds	r4, r0, r2
  4058e2:	2a00      	cmp	r2, #0
  4058e4:	d051      	beq.n	40598a <memmove+0xb6>
  4058e6:	4622      	mov	r2, r4
  4058e8:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  4058ec:	f802 4d01 	strb.w	r4, [r2, #-1]!
  4058f0:	4299      	cmp	r1, r3
  4058f2:	d1f9      	bne.n	4058e8 <memmove+0x14>
  4058f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4058f6:	2a0f      	cmp	r2, #15
  4058f8:	d948      	bls.n	40598c <memmove+0xb8>
  4058fa:	ea41 0300 	orr.w	r3, r1, r0
  4058fe:	079b      	lsls	r3, r3, #30
  405900:	d146      	bne.n	405990 <memmove+0xbc>
  405902:	f100 0410 	add.w	r4, r0, #16
  405906:	f101 0310 	add.w	r3, r1, #16
  40590a:	4615      	mov	r5, r2
  40590c:	f853 6c10 	ldr.w	r6, [r3, #-16]
  405910:	f844 6c10 	str.w	r6, [r4, #-16]
  405914:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  405918:	f844 6c0c 	str.w	r6, [r4, #-12]
  40591c:	f853 6c08 	ldr.w	r6, [r3, #-8]
  405920:	f844 6c08 	str.w	r6, [r4, #-8]
  405924:	3d10      	subs	r5, #16
  405926:	f853 6c04 	ldr.w	r6, [r3, #-4]
  40592a:	f844 6c04 	str.w	r6, [r4, #-4]
  40592e:	2d0f      	cmp	r5, #15
  405930:	f103 0310 	add.w	r3, r3, #16
  405934:	f104 0410 	add.w	r4, r4, #16
  405938:	d8e8      	bhi.n	40590c <memmove+0x38>
  40593a:	f1a2 0310 	sub.w	r3, r2, #16
  40593e:	f023 030f 	bic.w	r3, r3, #15
  405942:	f002 0e0f 	and.w	lr, r2, #15
  405946:	3310      	adds	r3, #16
  405948:	f1be 0f03 	cmp.w	lr, #3
  40594c:	4419      	add	r1, r3
  40594e:	4403      	add	r3, r0
  405950:	d921      	bls.n	405996 <memmove+0xc2>
  405952:	1f1e      	subs	r6, r3, #4
  405954:	460d      	mov	r5, r1
  405956:	4674      	mov	r4, lr
  405958:	3c04      	subs	r4, #4
  40595a:	f855 7b04 	ldr.w	r7, [r5], #4
  40595e:	f846 7f04 	str.w	r7, [r6, #4]!
  405962:	2c03      	cmp	r4, #3
  405964:	d8f8      	bhi.n	405958 <memmove+0x84>
  405966:	f1ae 0404 	sub.w	r4, lr, #4
  40596a:	f024 0403 	bic.w	r4, r4, #3
  40596e:	3404      	adds	r4, #4
  405970:	4421      	add	r1, r4
  405972:	4423      	add	r3, r4
  405974:	f002 0203 	and.w	r2, r2, #3
  405978:	b162      	cbz	r2, 405994 <memmove+0xc0>
  40597a:	3b01      	subs	r3, #1
  40597c:	440a      	add	r2, r1
  40597e:	f811 4b01 	ldrb.w	r4, [r1], #1
  405982:	f803 4f01 	strb.w	r4, [r3, #1]!
  405986:	428a      	cmp	r2, r1
  405988:	d1f9      	bne.n	40597e <memmove+0xaa>
  40598a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40598c:	4603      	mov	r3, r0
  40598e:	e7f3      	b.n	405978 <memmove+0xa4>
  405990:	4603      	mov	r3, r0
  405992:	e7f2      	b.n	40597a <memmove+0xa6>
  405994:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405996:	4672      	mov	r2, lr
  405998:	e7ee      	b.n	405978 <memmove+0xa4>
  40599a:	bf00      	nop

0040599c <_realloc_r>:
  40599c:	2900      	cmp	r1, #0
  40599e:	f000 8095 	beq.w	405acc <_realloc_r+0x130>
  4059a2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4059a6:	460d      	mov	r5, r1
  4059a8:	4616      	mov	r6, r2
  4059aa:	b083      	sub	sp, #12
  4059ac:	4680      	mov	r8, r0
  4059ae:	f106 070b 	add.w	r7, r6, #11
  4059b2:	f7ff f98f 	bl	404cd4 <__malloc_lock>
  4059b6:	f855 ec04 	ldr.w	lr, [r5, #-4]
  4059ba:	2f16      	cmp	r7, #22
  4059bc:	f02e 0403 	bic.w	r4, lr, #3
  4059c0:	f1a5 0908 	sub.w	r9, r5, #8
  4059c4:	d83c      	bhi.n	405a40 <_realloc_r+0xa4>
  4059c6:	2210      	movs	r2, #16
  4059c8:	4617      	mov	r7, r2
  4059ca:	42be      	cmp	r6, r7
  4059cc:	d83d      	bhi.n	405a4a <_realloc_r+0xae>
  4059ce:	4294      	cmp	r4, r2
  4059d0:	da43      	bge.n	405a5a <_realloc_r+0xbe>
  4059d2:	4bc4      	ldr	r3, [pc, #784]	; (405ce4 <_realloc_r+0x348>)
  4059d4:	6899      	ldr	r1, [r3, #8]
  4059d6:	eb09 0004 	add.w	r0, r9, r4
  4059da:	4288      	cmp	r0, r1
  4059dc:	f000 80b4 	beq.w	405b48 <_realloc_r+0x1ac>
  4059e0:	6843      	ldr	r3, [r0, #4]
  4059e2:	f023 0101 	bic.w	r1, r3, #1
  4059e6:	4401      	add	r1, r0
  4059e8:	6849      	ldr	r1, [r1, #4]
  4059ea:	07c9      	lsls	r1, r1, #31
  4059ec:	d54c      	bpl.n	405a88 <_realloc_r+0xec>
  4059ee:	f01e 0f01 	tst.w	lr, #1
  4059f2:	f000 809b 	beq.w	405b2c <_realloc_r+0x190>
  4059f6:	4631      	mov	r1, r6
  4059f8:	4640      	mov	r0, r8
  4059fa:	f7fe fdcf 	bl	40459c <_malloc_r>
  4059fe:	4606      	mov	r6, r0
  405a00:	2800      	cmp	r0, #0
  405a02:	d03a      	beq.n	405a7a <_realloc_r+0xde>
  405a04:	f855 3c04 	ldr.w	r3, [r5, #-4]
  405a08:	f023 0301 	bic.w	r3, r3, #1
  405a0c:	444b      	add	r3, r9
  405a0e:	f1a0 0208 	sub.w	r2, r0, #8
  405a12:	429a      	cmp	r2, r3
  405a14:	f000 8121 	beq.w	405c5a <_realloc_r+0x2be>
  405a18:	1f22      	subs	r2, r4, #4
  405a1a:	2a24      	cmp	r2, #36	; 0x24
  405a1c:	f200 8107 	bhi.w	405c2e <_realloc_r+0x292>
  405a20:	2a13      	cmp	r2, #19
  405a22:	f200 80db 	bhi.w	405bdc <_realloc_r+0x240>
  405a26:	4603      	mov	r3, r0
  405a28:	462a      	mov	r2, r5
  405a2a:	6811      	ldr	r1, [r2, #0]
  405a2c:	6019      	str	r1, [r3, #0]
  405a2e:	6851      	ldr	r1, [r2, #4]
  405a30:	6059      	str	r1, [r3, #4]
  405a32:	6892      	ldr	r2, [r2, #8]
  405a34:	609a      	str	r2, [r3, #8]
  405a36:	4629      	mov	r1, r5
  405a38:	4640      	mov	r0, r8
  405a3a:	f7ff fe4f 	bl	4056dc <_free_r>
  405a3e:	e01c      	b.n	405a7a <_realloc_r+0xde>
  405a40:	f027 0707 	bic.w	r7, r7, #7
  405a44:	2f00      	cmp	r7, #0
  405a46:	463a      	mov	r2, r7
  405a48:	dabf      	bge.n	4059ca <_realloc_r+0x2e>
  405a4a:	2600      	movs	r6, #0
  405a4c:	230c      	movs	r3, #12
  405a4e:	4630      	mov	r0, r6
  405a50:	f8c8 3000 	str.w	r3, [r8]
  405a54:	b003      	add	sp, #12
  405a56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405a5a:	462e      	mov	r6, r5
  405a5c:	1be3      	subs	r3, r4, r7
  405a5e:	2b0f      	cmp	r3, #15
  405a60:	d81e      	bhi.n	405aa0 <_realloc_r+0x104>
  405a62:	f8d9 3004 	ldr.w	r3, [r9, #4]
  405a66:	f003 0301 	and.w	r3, r3, #1
  405a6a:	4323      	orrs	r3, r4
  405a6c:	444c      	add	r4, r9
  405a6e:	f8c9 3004 	str.w	r3, [r9, #4]
  405a72:	6863      	ldr	r3, [r4, #4]
  405a74:	f043 0301 	orr.w	r3, r3, #1
  405a78:	6063      	str	r3, [r4, #4]
  405a7a:	4640      	mov	r0, r8
  405a7c:	f7ff f930 	bl	404ce0 <__malloc_unlock>
  405a80:	4630      	mov	r0, r6
  405a82:	b003      	add	sp, #12
  405a84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405a88:	f023 0303 	bic.w	r3, r3, #3
  405a8c:	18e1      	adds	r1, r4, r3
  405a8e:	4291      	cmp	r1, r2
  405a90:	db1f      	blt.n	405ad2 <_realloc_r+0x136>
  405a92:	68c3      	ldr	r3, [r0, #12]
  405a94:	6882      	ldr	r2, [r0, #8]
  405a96:	462e      	mov	r6, r5
  405a98:	60d3      	str	r3, [r2, #12]
  405a9a:	460c      	mov	r4, r1
  405a9c:	609a      	str	r2, [r3, #8]
  405a9e:	e7dd      	b.n	405a5c <_realloc_r+0xc0>
  405aa0:	f8d9 2004 	ldr.w	r2, [r9, #4]
  405aa4:	eb09 0107 	add.w	r1, r9, r7
  405aa8:	f002 0201 	and.w	r2, r2, #1
  405aac:	444c      	add	r4, r9
  405aae:	f043 0301 	orr.w	r3, r3, #1
  405ab2:	4317      	orrs	r7, r2
  405ab4:	f8c9 7004 	str.w	r7, [r9, #4]
  405ab8:	604b      	str	r3, [r1, #4]
  405aba:	6863      	ldr	r3, [r4, #4]
  405abc:	f043 0301 	orr.w	r3, r3, #1
  405ac0:	3108      	adds	r1, #8
  405ac2:	6063      	str	r3, [r4, #4]
  405ac4:	4640      	mov	r0, r8
  405ac6:	f7ff fe09 	bl	4056dc <_free_r>
  405aca:	e7d6      	b.n	405a7a <_realloc_r+0xde>
  405acc:	4611      	mov	r1, r2
  405ace:	f7fe bd65 	b.w	40459c <_malloc_r>
  405ad2:	f01e 0f01 	tst.w	lr, #1
  405ad6:	d18e      	bne.n	4059f6 <_realloc_r+0x5a>
  405ad8:	f855 1c08 	ldr.w	r1, [r5, #-8]
  405adc:	eba9 0a01 	sub.w	sl, r9, r1
  405ae0:	f8da 1004 	ldr.w	r1, [sl, #4]
  405ae4:	f021 0103 	bic.w	r1, r1, #3
  405ae8:	440b      	add	r3, r1
  405aea:	4423      	add	r3, r4
  405aec:	4293      	cmp	r3, r2
  405aee:	db25      	blt.n	405b3c <_realloc_r+0x1a0>
  405af0:	68c2      	ldr	r2, [r0, #12]
  405af2:	6881      	ldr	r1, [r0, #8]
  405af4:	4656      	mov	r6, sl
  405af6:	60ca      	str	r2, [r1, #12]
  405af8:	6091      	str	r1, [r2, #8]
  405afa:	f8da 100c 	ldr.w	r1, [sl, #12]
  405afe:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405b02:	1f22      	subs	r2, r4, #4
  405b04:	2a24      	cmp	r2, #36	; 0x24
  405b06:	60c1      	str	r1, [r0, #12]
  405b08:	6088      	str	r0, [r1, #8]
  405b0a:	f200 8094 	bhi.w	405c36 <_realloc_r+0x29a>
  405b0e:	2a13      	cmp	r2, #19
  405b10:	d96f      	bls.n	405bf2 <_realloc_r+0x256>
  405b12:	6829      	ldr	r1, [r5, #0]
  405b14:	f8ca 1008 	str.w	r1, [sl, #8]
  405b18:	6869      	ldr	r1, [r5, #4]
  405b1a:	f8ca 100c 	str.w	r1, [sl, #12]
  405b1e:	2a1b      	cmp	r2, #27
  405b20:	f200 80a2 	bhi.w	405c68 <_realloc_r+0x2cc>
  405b24:	3508      	adds	r5, #8
  405b26:	f10a 0210 	add.w	r2, sl, #16
  405b2a:	e063      	b.n	405bf4 <_realloc_r+0x258>
  405b2c:	f855 3c08 	ldr.w	r3, [r5, #-8]
  405b30:	eba9 0a03 	sub.w	sl, r9, r3
  405b34:	f8da 1004 	ldr.w	r1, [sl, #4]
  405b38:	f021 0103 	bic.w	r1, r1, #3
  405b3c:	1863      	adds	r3, r4, r1
  405b3e:	4293      	cmp	r3, r2
  405b40:	f6ff af59 	blt.w	4059f6 <_realloc_r+0x5a>
  405b44:	4656      	mov	r6, sl
  405b46:	e7d8      	b.n	405afa <_realloc_r+0x15e>
  405b48:	6841      	ldr	r1, [r0, #4]
  405b4a:	f021 0b03 	bic.w	fp, r1, #3
  405b4e:	44a3      	add	fp, r4
  405b50:	f107 0010 	add.w	r0, r7, #16
  405b54:	4583      	cmp	fp, r0
  405b56:	da56      	bge.n	405c06 <_realloc_r+0x26a>
  405b58:	f01e 0f01 	tst.w	lr, #1
  405b5c:	f47f af4b 	bne.w	4059f6 <_realloc_r+0x5a>
  405b60:	f855 1c08 	ldr.w	r1, [r5, #-8]
  405b64:	eba9 0a01 	sub.w	sl, r9, r1
  405b68:	f8da 1004 	ldr.w	r1, [sl, #4]
  405b6c:	f021 0103 	bic.w	r1, r1, #3
  405b70:	448b      	add	fp, r1
  405b72:	4558      	cmp	r0, fp
  405b74:	dce2      	bgt.n	405b3c <_realloc_r+0x1a0>
  405b76:	4656      	mov	r6, sl
  405b78:	f8da 100c 	ldr.w	r1, [sl, #12]
  405b7c:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405b80:	1f22      	subs	r2, r4, #4
  405b82:	2a24      	cmp	r2, #36	; 0x24
  405b84:	60c1      	str	r1, [r0, #12]
  405b86:	6088      	str	r0, [r1, #8]
  405b88:	f200 808f 	bhi.w	405caa <_realloc_r+0x30e>
  405b8c:	2a13      	cmp	r2, #19
  405b8e:	f240 808a 	bls.w	405ca6 <_realloc_r+0x30a>
  405b92:	6829      	ldr	r1, [r5, #0]
  405b94:	f8ca 1008 	str.w	r1, [sl, #8]
  405b98:	6869      	ldr	r1, [r5, #4]
  405b9a:	f8ca 100c 	str.w	r1, [sl, #12]
  405b9e:	2a1b      	cmp	r2, #27
  405ba0:	f200 808a 	bhi.w	405cb8 <_realloc_r+0x31c>
  405ba4:	3508      	adds	r5, #8
  405ba6:	f10a 0210 	add.w	r2, sl, #16
  405baa:	6829      	ldr	r1, [r5, #0]
  405bac:	6011      	str	r1, [r2, #0]
  405bae:	6869      	ldr	r1, [r5, #4]
  405bb0:	6051      	str	r1, [r2, #4]
  405bb2:	68a9      	ldr	r1, [r5, #8]
  405bb4:	6091      	str	r1, [r2, #8]
  405bb6:	eb0a 0107 	add.w	r1, sl, r7
  405bba:	ebab 0207 	sub.w	r2, fp, r7
  405bbe:	f042 0201 	orr.w	r2, r2, #1
  405bc2:	6099      	str	r1, [r3, #8]
  405bc4:	604a      	str	r2, [r1, #4]
  405bc6:	f8da 3004 	ldr.w	r3, [sl, #4]
  405bca:	f003 0301 	and.w	r3, r3, #1
  405bce:	431f      	orrs	r7, r3
  405bd0:	4640      	mov	r0, r8
  405bd2:	f8ca 7004 	str.w	r7, [sl, #4]
  405bd6:	f7ff f883 	bl	404ce0 <__malloc_unlock>
  405bda:	e751      	b.n	405a80 <_realloc_r+0xe4>
  405bdc:	682b      	ldr	r3, [r5, #0]
  405bde:	6003      	str	r3, [r0, #0]
  405be0:	686b      	ldr	r3, [r5, #4]
  405be2:	6043      	str	r3, [r0, #4]
  405be4:	2a1b      	cmp	r2, #27
  405be6:	d82d      	bhi.n	405c44 <_realloc_r+0x2a8>
  405be8:	f100 0308 	add.w	r3, r0, #8
  405bec:	f105 0208 	add.w	r2, r5, #8
  405bf0:	e71b      	b.n	405a2a <_realloc_r+0x8e>
  405bf2:	4632      	mov	r2, r6
  405bf4:	6829      	ldr	r1, [r5, #0]
  405bf6:	6011      	str	r1, [r2, #0]
  405bf8:	6869      	ldr	r1, [r5, #4]
  405bfa:	6051      	str	r1, [r2, #4]
  405bfc:	68a9      	ldr	r1, [r5, #8]
  405bfe:	6091      	str	r1, [r2, #8]
  405c00:	461c      	mov	r4, r3
  405c02:	46d1      	mov	r9, sl
  405c04:	e72a      	b.n	405a5c <_realloc_r+0xc0>
  405c06:	eb09 0107 	add.w	r1, r9, r7
  405c0a:	ebab 0b07 	sub.w	fp, fp, r7
  405c0e:	f04b 0201 	orr.w	r2, fp, #1
  405c12:	6099      	str	r1, [r3, #8]
  405c14:	604a      	str	r2, [r1, #4]
  405c16:	f855 3c04 	ldr.w	r3, [r5, #-4]
  405c1a:	f003 0301 	and.w	r3, r3, #1
  405c1e:	431f      	orrs	r7, r3
  405c20:	4640      	mov	r0, r8
  405c22:	f845 7c04 	str.w	r7, [r5, #-4]
  405c26:	f7ff f85b 	bl	404ce0 <__malloc_unlock>
  405c2a:	462e      	mov	r6, r5
  405c2c:	e728      	b.n	405a80 <_realloc_r+0xe4>
  405c2e:	4629      	mov	r1, r5
  405c30:	f7ff fe50 	bl	4058d4 <memmove>
  405c34:	e6ff      	b.n	405a36 <_realloc_r+0x9a>
  405c36:	4629      	mov	r1, r5
  405c38:	4630      	mov	r0, r6
  405c3a:	461c      	mov	r4, r3
  405c3c:	46d1      	mov	r9, sl
  405c3e:	f7ff fe49 	bl	4058d4 <memmove>
  405c42:	e70b      	b.n	405a5c <_realloc_r+0xc0>
  405c44:	68ab      	ldr	r3, [r5, #8]
  405c46:	6083      	str	r3, [r0, #8]
  405c48:	68eb      	ldr	r3, [r5, #12]
  405c4a:	60c3      	str	r3, [r0, #12]
  405c4c:	2a24      	cmp	r2, #36	; 0x24
  405c4e:	d017      	beq.n	405c80 <_realloc_r+0x2e4>
  405c50:	f100 0310 	add.w	r3, r0, #16
  405c54:	f105 0210 	add.w	r2, r5, #16
  405c58:	e6e7      	b.n	405a2a <_realloc_r+0x8e>
  405c5a:	f850 3c04 	ldr.w	r3, [r0, #-4]
  405c5e:	f023 0303 	bic.w	r3, r3, #3
  405c62:	441c      	add	r4, r3
  405c64:	462e      	mov	r6, r5
  405c66:	e6f9      	b.n	405a5c <_realloc_r+0xc0>
  405c68:	68a9      	ldr	r1, [r5, #8]
  405c6a:	f8ca 1010 	str.w	r1, [sl, #16]
  405c6e:	68e9      	ldr	r1, [r5, #12]
  405c70:	f8ca 1014 	str.w	r1, [sl, #20]
  405c74:	2a24      	cmp	r2, #36	; 0x24
  405c76:	d00c      	beq.n	405c92 <_realloc_r+0x2f6>
  405c78:	3510      	adds	r5, #16
  405c7a:	f10a 0218 	add.w	r2, sl, #24
  405c7e:	e7b9      	b.n	405bf4 <_realloc_r+0x258>
  405c80:	692b      	ldr	r3, [r5, #16]
  405c82:	6103      	str	r3, [r0, #16]
  405c84:	696b      	ldr	r3, [r5, #20]
  405c86:	6143      	str	r3, [r0, #20]
  405c88:	f105 0218 	add.w	r2, r5, #24
  405c8c:	f100 0318 	add.w	r3, r0, #24
  405c90:	e6cb      	b.n	405a2a <_realloc_r+0x8e>
  405c92:	692a      	ldr	r2, [r5, #16]
  405c94:	f8ca 2018 	str.w	r2, [sl, #24]
  405c98:	696a      	ldr	r2, [r5, #20]
  405c9a:	f8ca 201c 	str.w	r2, [sl, #28]
  405c9e:	3518      	adds	r5, #24
  405ca0:	f10a 0220 	add.w	r2, sl, #32
  405ca4:	e7a6      	b.n	405bf4 <_realloc_r+0x258>
  405ca6:	4632      	mov	r2, r6
  405ca8:	e77f      	b.n	405baa <_realloc_r+0x20e>
  405caa:	4629      	mov	r1, r5
  405cac:	4630      	mov	r0, r6
  405cae:	9301      	str	r3, [sp, #4]
  405cb0:	f7ff fe10 	bl	4058d4 <memmove>
  405cb4:	9b01      	ldr	r3, [sp, #4]
  405cb6:	e77e      	b.n	405bb6 <_realloc_r+0x21a>
  405cb8:	68a9      	ldr	r1, [r5, #8]
  405cba:	f8ca 1010 	str.w	r1, [sl, #16]
  405cbe:	68e9      	ldr	r1, [r5, #12]
  405cc0:	f8ca 1014 	str.w	r1, [sl, #20]
  405cc4:	2a24      	cmp	r2, #36	; 0x24
  405cc6:	d003      	beq.n	405cd0 <_realloc_r+0x334>
  405cc8:	3510      	adds	r5, #16
  405cca:	f10a 0218 	add.w	r2, sl, #24
  405cce:	e76c      	b.n	405baa <_realloc_r+0x20e>
  405cd0:	692a      	ldr	r2, [r5, #16]
  405cd2:	f8ca 2018 	str.w	r2, [sl, #24]
  405cd6:	696a      	ldr	r2, [r5, #20]
  405cd8:	f8ca 201c 	str.w	r2, [sl, #28]
  405cdc:	3518      	adds	r5, #24
  405cde:	f10a 0220 	add.w	r2, sl, #32
  405ce2:	e762      	b.n	405baa <_realloc_r+0x20e>
  405ce4:	20400454 	.word	0x20400454

00405ce8 <__ascii_wctomb>:
  405ce8:	b121      	cbz	r1, 405cf4 <__ascii_wctomb+0xc>
  405cea:	2aff      	cmp	r2, #255	; 0xff
  405cec:	d804      	bhi.n	405cf8 <__ascii_wctomb+0x10>
  405cee:	700a      	strb	r2, [r1, #0]
  405cf0:	2001      	movs	r0, #1
  405cf2:	4770      	bx	lr
  405cf4:	4608      	mov	r0, r1
  405cf6:	4770      	bx	lr
  405cf8:	238a      	movs	r3, #138	; 0x8a
  405cfa:	6003      	str	r3, [r0, #0]
  405cfc:	f04f 30ff 	mov.w	r0, #4294967295
  405d00:	4770      	bx	lr
  405d02:	bf00      	nop

00405d04 <__gedf2>:
  405d04:	f04f 3cff 	mov.w	ip, #4294967295
  405d08:	e006      	b.n	405d18 <__cmpdf2+0x4>
  405d0a:	bf00      	nop

00405d0c <__ledf2>:
  405d0c:	f04f 0c01 	mov.w	ip, #1
  405d10:	e002      	b.n	405d18 <__cmpdf2+0x4>
  405d12:	bf00      	nop

00405d14 <__cmpdf2>:
  405d14:	f04f 0c01 	mov.w	ip, #1
  405d18:	f84d cd04 	str.w	ip, [sp, #-4]!
  405d1c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  405d20:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405d24:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  405d28:	bf18      	it	ne
  405d2a:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  405d2e:	d01b      	beq.n	405d68 <__cmpdf2+0x54>
  405d30:	b001      	add	sp, #4
  405d32:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  405d36:	bf0c      	ite	eq
  405d38:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  405d3c:	ea91 0f03 	teqne	r1, r3
  405d40:	bf02      	ittt	eq
  405d42:	ea90 0f02 	teqeq	r0, r2
  405d46:	2000      	moveq	r0, #0
  405d48:	4770      	bxeq	lr
  405d4a:	f110 0f00 	cmn.w	r0, #0
  405d4e:	ea91 0f03 	teq	r1, r3
  405d52:	bf58      	it	pl
  405d54:	4299      	cmppl	r1, r3
  405d56:	bf08      	it	eq
  405d58:	4290      	cmpeq	r0, r2
  405d5a:	bf2c      	ite	cs
  405d5c:	17d8      	asrcs	r0, r3, #31
  405d5e:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  405d62:	f040 0001 	orr.w	r0, r0, #1
  405d66:	4770      	bx	lr
  405d68:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  405d6c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405d70:	d102      	bne.n	405d78 <__cmpdf2+0x64>
  405d72:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  405d76:	d107      	bne.n	405d88 <__cmpdf2+0x74>
  405d78:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  405d7c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405d80:	d1d6      	bne.n	405d30 <__cmpdf2+0x1c>
  405d82:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  405d86:	d0d3      	beq.n	405d30 <__cmpdf2+0x1c>
  405d88:	f85d 0b04 	ldr.w	r0, [sp], #4
  405d8c:	4770      	bx	lr
  405d8e:	bf00      	nop

00405d90 <__aeabi_cdrcmple>:
  405d90:	4684      	mov	ip, r0
  405d92:	4610      	mov	r0, r2
  405d94:	4662      	mov	r2, ip
  405d96:	468c      	mov	ip, r1
  405d98:	4619      	mov	r1, r3
  405d9a:	4663      	mov	r3, ip
  405d9c:	e000      	b.n	405da0 <__aeabi_cdcmpeq>
  405d9e:	bf00      	nop

00405da0 <__aeabi_cdcmpeq>:
  405da0:	b501      	push	{r0, lr}
  405da2:	f7ff ffb7 	bl	405d14 <__cmpdf2>
  405da6:	2800      	cmp	r0, #0
  405da8:	bf48      	it	mi
  405daa:	f110 0f00 	cmnmi.w	r0, #0
  405dae:	bd01      	pop	{r0, pc}

00405db0 <__aeabi_dcmpeq>:
  405db0:	f84d ed08 	str.w	lr, [sp, #-8]!
  405db4:	f7ff fff4 	bl	405da0 <__aeabi_cdcmpeq>
  405db8:	bf0c      	ite	eq
  405dba:	2001      	moveq	r0, #1
  405dbc:	2000      	movne	r0, #0
  405dbe:	f85d fb08 	ldr.w	pc, [sp], #8
  405dc2:	bf00      	nop

00405dc4 <__aeabi_dcmplt>:
  405dc4:	f84d ed08 	str.w	lr, [sp, #-8]!
  405dc8:	f7ff ffea 	bl	405da0 <__aeabi_cdcmpeq>
  405dcc:	bf34      	ite	cc
  405dce:	2001      	movcc	r0, #1
  405dd0:	2000      	movcs	r0, #0
  405dd2:	f85d fb08 	ldr.w	pc, [sp], #8
  405dd6:	bf00      	nop

00405dd8 <__aeabi_dcmple>:
  405dd8:	f84d ed08 	str.w	lr, [sp, #-8]!
  405ddc:	f7ff ffe0 	bl	405da0 <__aeabi_cdcmpeq>
  405de0:	bf94      	ite	ls
  405de2:	2001      	movls	r0, #1
  405de4:	2000      	movhi	r0, #0
  405de6:	f85d fb08 	ldr.w	pc, [sp], #8
  405dea:	bf00      	nop

00405dec <__aeabi_dcmpge>:
  405dec:	f84d ed08 	str.w	lr, [sp, #-8]!
  405df0:	f7ff ffce 	bl	405d90 <__aeabi_cdrcmple>
  405df4:	bf94      	ite	ls
  405df6:	2001      	movls	r0, #1
  405df8:	2000      	movhi	r0, #0
  405dfa:	f85d fb08 	ldr.w	pc, [sp], #8
  405dfe:	bf00      	nop

00405e00 <__aeabi_dcmpgt>:
  405e00:	f84d ed08 	str.w	lr, [sp, #-8]!
  405e04:	f7ff ffc4 	bl	405d90 <__aeabi_cdrcmple>
  405e08:	bf34      	ite	cc
  405e0a:	2001      	movcc	r0, #1
  405e0c:	2000      	movcs	r0, #0
  405e0e:	f85d fb08 	ldr.w	pc, [sp], #8
  405e12:	bf00      	nop

00405e14 <__aeabi_dcmpun>:
  405e14:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  405e18:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405e1c:	d102      	bne.n	405e24 <__aeabi_dcmpun+0x10>
  405e1e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  405e22:	d10a      	bne.n	405e3a <__aeabi_dcmpun+0x26>
  405e24:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  405e28:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405e2c:	d102      	bne.n	405e34 <__aeabi_dcmpun+0x20>
  405e2e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  405e32:	d102      	bne.n	405e3a <__aeabi_dcmpun+0x26>
  405e34:	f04f 0000 	mov.w	r0, #0
  405e38:	4770      	bx	lr
  405e3a:	f04f 0001 	mov.w	r0, #1
  405e3e:	4770      	bx	lr

00405e40 <__aeabi_d2iz>:
  405e40:	ea4f 0241 	mov.w	r2, r1, lsl #1
  405e44:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  405e48:	d215      	bcs.n	405e76 <__aeabi_d2iz+0x36>
  405e4a:	d511      	bpl.n	405e70 <__aeabi_d2iz+0x30>
  405e4c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  405e50:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  405e54:	d912      	bls.n	405e7c <__aeabi_d2iz+0x3c>
  405e56:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  405e5a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  405e5e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  405e62:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  405e66:	fa23 f002 	lsr.w	r0, r3, r2
  405e6a:	bf18      	it	ne
  405e6c:	4240      	negne	r0, r0
  405e6e:	4770      	bx	lr
  405e70:	f04f 0000 	mov.w	r0, #0
  405e74:	4770      	bx	lr
  405e76:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  405e7a:	d105      	bne.n	405e88 <__aeabi_d2iz+0x48>
  405e7c:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  405e80:	bf08      	it	eq
  405e82:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  405e86:	4770      	bx	lr
  405e88:	f04f 0000 	mov.w	r0, #0
  405e8c:	4770      	bx	lr
  405e8e:	bf00      	nop

00405e90 <__aeabi_uldivmod>:
  405e90:	b953      	cbnz	r3, 405ea8 <__aeabi_uldivmod+0x18>
  405e92:	b94a      	cbnz	r2, 405ea8 <__aeabi_uldivmod+0x18>
  405e94:	2900      	cmp	r1, #0
  405e96:	bf08      	it	eq
  405e98:	2800      	cmpeq	r0, #0
  405e9a:	bf1c      	itt	ne
  405e9c:	f04f 31ff 	movne.w	r1, #4294967295
  405ea0:	f04f 30ff 	movne.w	r0, #4294967295
  405ea4:	f000 b97a 	b.w	40619c <__aeabi_idiv0>
  405ea8:	f1ad 0c08 	sub.w	ip, sp, #8
  405eac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  405eb0:	f000 f806 	bl	405ec0 <__udivmoddi4>
  405eb4:	f8dd e004 	ldr.w	lr, [sp, #4]
  405eb8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  405ebc:	b004      	add	sp, #16
  405ebe:	4770      	bx	lr

00405ec0 <__udivmoddi4>:
  405ec0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  405ec4:	468c      	mov	ip, r1
  405ec6:	460d      	mov	r5, r1
  405ec8:	4604      	mov	r4, r0
  405eca:	9e08      	ldr	r6, [sp, #32]
  405ecc:	2b00      	cmp	r3, #0
  405ece:	d151      	bne.n	405f74 <__udivmoddi4+0xb4>
  405ed0:	428a      	cmp	r2, r1
  405ed2:	4617      	mov	r7, r2
  405ed4:	d96d      	bls.n	405fb2 <__udivmoddi4+0xf2>
  405ed6:	fab2 fe82 	clz	lr, r2
  405eda:	f1be 0f00 	cmp.w	lr, #0
  405ede:	d00b      	beq.n	405ef8 <__udivmoddi4+0x38>
  405ee0:	f1ce 0c20 	rsb	ip, lr, #32
  405ee4:	fa01 f50e 	lsl.w	r5, r1, lr
  405ee8:	fa20 fc0c 	lsr.w	ip, r0, ip
  405eec:	fa02 f70e 	lsl.w	r7, r2, lr
  405ef0:	ea4c 0c05 	orr.w	ip, ip, r5
  405ef4:	fa00 f40e 	lsl.w	r4, r0, lr
  405ef8:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  405efc:	0c25      	lsrs	r5, r4, #16
  405efe:	fbbc f8fa 	udiv	r8, ip, sl
  405f02:	fa1f f987 	uxth.w	r9, r7
  405f06:	fb0a cc18 	mls	ip, sl, r8, ip
  405f0a:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  405f0e:	fb08 f309 	mul.w	r3, r8, r9
  405f12:	42ab      	cmp	r3, r5
  405f14:	d90a      	bls.n	405f2c <__udivmoddi4+0x6c>
  405f16:	19ed      	adds	r5, r5, r7
  405f18:	f108 32ff 	add.w	r2, r8, #4294967295
  405f1c:	f080 8123 	bcs.w	406166 <__udivmoddi4+0x2a6>
  405f20:	42ab      	cmp	r3, r5
  405f22:	f240 8120 	bls.w	406166 <__udivmoddi4+0x2a6>
  405f26:	f1a8 0802 	sub.w	r8, r8, #2
  405f2a:	443d      	add	r5, r7
  405f2c:	1aed      	subs	r5, r5, r3
  405f2e:	b2a4      	uxth	r4, r4
  405f30:	fbb5 f0fa 	udiv	r0, r5, sl
  405f34:	fb0a 5510 	mls	r5, sl, r0, r5
  405f38:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  405f3c:	fb00 f909 	mul.w	r9, r0, r9
  405f40:	45a1      	cmp	r9, r4
  405f42:	d909      	bls.n	405f58 <__udivmoddi4+0x98>
  405f44:	19e4      	adds	r4, r4, r7
  405f46:	f100 33ff 	add.w	r3, r0, #4294967295
  405f4a:	f080 810a 	bcs.w	406162 <__udivmoddi4+0x2a2>
  405f4e:	45a1      	cmp	r9, r4
  405f50:	f240 8107 	bls.w	406162 <__udivmoddi4+0x2a2>
  405f54:	3802      	subs	r0, #2
  405f56:	443c      	add	r4, r7
  405f58:	eba4 0409 	sub.w	r4, r4, r9
  405f5c:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  405f60:	2100      	movs	r1, #0
  405f62:	2e00      	cmp	r6, #0
  405f64:	d061      	beq.n	40602a <__udivmoddi4+0x16a>
  405f66:	fa24 f40e 	lsr.w	r4, r4, lr
  405f6a:	2300      	movs	r3, #0
  405f6c:	6034      	str	r4, [r6, #0]
  405f6e:	6073      	str	r3, [r6, #4]
  405f70:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  405f74:	428b      	cmp	r3, r1
  405f76:	d907      	bls.n	405f88 <__udivmoddi4+0xc8>
  405f78:	2e00      	cmp	r6, #0
  405f7a:	d054      	beq.n	406026 <__udivmoddi4+0x166>
  405f7c:	2100      	movs	r1, #0
  405f7e:	e886 0021 	stmia.w	r6, {r0, r5}
  405f82:	4608      	mov	r0, r1
  405f84:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  405f88:	fab3 f183 	clz	r1, r3
  405f8c:	2900      	cmp	r1, #0
  405f8e:	f040 808e 	bne.w	4060ae <__udivmoddi4+0x1ee>
  405f92:	42ab      	cmp	r3, r5
  405f94:	d302      	bcc.n	405f9c <__udivmoddi4+0xdc>
  405f96:	4282      	cmp	r2, r0
  405f98:	f200 80fa 	bhi.w	406190 <__udivmoddi4+0x2d0>
  405f9c:	1a84      	subs	r4, r0, r2
  405f9e:	eb65 0503 	sbc.w	r5, r5, r3
  405fa2:	2001      	movs	r0, #1
  405fa4:	46ac      	mov	ip, r5
  405fa6:	2e00      	cmp	r6, #0
  405fa8:	d03f      	beq.n	40602a <__udivmoddi4+0x16a>
  405faa:	e886 1010 	stmia.w	r6, {r4, ip}
  405fae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  405fb2:	b912      	cbnz	r2, 405fba <__udivmoddi4+0xfa>
  405fb4:	2701      	movs	r7, #1
  405fb6:	fbb7 f7f2 	udiv	r7, r7, r2
  405fba:	fab7 fe87 	clz	lr, r7
  405fbe:	f1be 0f00 	cmp.w	lr, #0
  405fc2:	d134      	bne.n	40602e <__udivmoddi4+0x16e>
  405fc4:	1beb      	subs	r3, r5, r7
  405fc6:	0c3a      	lsrs	r2, r7, #16
  405fc8:	fa1f fc87 	uxth.w	ip, r7
  405fcc:	2101      	movs	r1, #1
  405fce:	fbb3 f8f2 	udiv	r8, r3, r2
  405fd2:	0c25      	lsrs	r5, r4, #16
  405fd4:	fb02 3318 	mls	r3, r2, r8, r3
  405fd8:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  405fdc:	fb0c f308 	mul.w	r3, ip, r8
  405fe0:	42ab      	cmp	r3, r5
  405fe2:	d907      	bls.n	405ff4 <__udivmoddi4+0x134>
  405fe4:	19ed      	adds	r5, r5, r7
  405fe6:	f108 30ff 	add.w	r0, r8, #4294967295
  405fea:	d202      	bcs.n	405ff2 <__udivmoddi4+0x132>
  405fec:	42ab      	cmp	r3, r5
  405fee:	f200 80d1 	bhi.w	406194 <__udivmoddi4+0x2d4>
  405ff2:	4680      	mov	r8, r0
  405ff4:	1aed      	subs	r5, r5, r3
  405ff6:	b2a3      	uxth	r3, r4
  405ff8:	fbb5 f0f2 	udiv	r0, r5, r2
  405ffc:	fb02 5510 	mls	r5, r2, r0, r5
  406000:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  406004:	fb0c fc00 	mul.w	ip, ip, r0
  406008:	45a4      	cmp	ip, r4
  40600a:	d907      	bls.n	40601c <__udivmoddi4+0x15c>
  40600c:	19e4      	adds	r4, r4, r7
  40600e:	f100 33ff 	add.w	r3, r0, #4294967295
  406012:	d202      	bcs.n	40601a <__udivmoddi4+0x15a>
  406014:	45a4      	cmp	ip, r4
  406016:	f200 80b8 	bhi.w	40618a <__udivmoddi4+0x2ca>
  40601a:	4618      	mov	r0, r3
  40601c:	eba4 040c 	sub.w	r4, r4, ip
  406020:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  406024:	e79d      	b.n	405f62 <__udivmoddi4+0xa2>
  406026:	4631      	mov	r1, r6
  406028:	4630      	mov	r0, r6
  40602a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40602e:	f1ce 0420 	rsb	r4, lr, #32
  406032:	fa05 f30e 	lsl.w	r3, r5, lr
  406036:	fa07 f70e 	lsl.w	r7, r7, lr
  40603a:	fa20 f804 	lsr.w	r8, r0, r4
  40603e:	0c3a      	lsrs	r2, r7, #16
  406040:	fa25 f404 	lsr.w	r4, r5, r4
  406044:	ea48 0803 	orr.w	r8, r8, r3
  406048:	fbb4 f1f2 	udiv	r1, r4, r2
  40604c:	ea4f 4518 	mov.w	r5, r8, lsr #16
  406050:	fb02 4411 	mls	r4, r2, r1, r4
  406054:	fa1f fc87 	uxth.w	ip, r7
  406058:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  40605c:	fb01 f30c 	mul.w	r3, r1, ip
  406060:	42ab      	cmp	r3, r5
  406062:	fa00 f40e 	lsl.w	r4, r0, lr
  406066:	d909      	bls.n	40607c <__udivmoddi4+0x1bc>
  406068:	19ed      	adds	r5, r5, r7
  40606a:	f101 30ff 	add.w	r0, r1, #4294967295
  40606e:	f080 808a 	bcs.w	406186 <__udivmoddi4+0x2c6>
  406072:	42ab      	cmp	r3, r5
  406074:	f240 8087 	bls.w	406186 <__udivmoddi4+0x2c6>
  406078:	3902      	subs	r1, #2
  40607a:	443d      	add	r5, r7
  40607c:	1aeb      	subs	r3, r5, r3
  40607e:	fa1f f588 	uxth.w	r5, r8
  406082:	fbb3 f0f2 	udiv	r0, r3, r2
  406086:	fb02 3310 	mls	r3, r2, r0, r3
  40608a:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  40608e:	fb00 f30c 	mul.w	r3, r0, ip
  406092:	42ab      	cmp	r3, r5
  406094:	d907      	bls.n	4060a6 <__udivmoddi4+0x1e6>
  406096:	19ed      	adds	r5, r5, r7
  406098:	f100 38ff 	add.w	r8, r0, #4294967295
  40609c:	d26f      	bcs.n	40617e <__udivmoddi4+0x2be>
  40609e:	42ab      	cmp	r3, r5
  4060a0:	d96d      	bls.n	40617e <__udivmoddi4+0x2be>
  4060a2:	3802      	subs	r0, #2
  4060a4:	443d      	add	r5, r7
  4060a6:	1aeb      	subs	r3, r5, r3
  4060a8:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  4060ac:	e78f      	b.n	405fce <__udivmoddi4+0x10e>
  4060ae:	f1c1 0720 	rsb	r7, r1, #32
  4060b2:	fa22 f807 	lsr.w	r8, r2, r7
  4060b6:	408b      	lsls	r3, r1
  4060b8:	fa05 f401 	lsl.w	r4, r5, r1
  4060bc:	ea48 0303 	orr.w	r3, r8, r3
  4060c0:	fa20 fe07 	lsr.w	lr, r0, r7
  4060c4:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  4060c8:	40fd      	lsrs	r5, r7
  4060ca:	ea4e 0e04 	orr.w	lr, lr, r4
  4060ce:	fbb5 f9fc 	udiv	r9, r5, ip
  4060d2:	ea4f 441e 	mov.w	r4, lr, lsr #16
  4060d6:	fb0c 5519 	mls	r5, ip, r9, r5
  4060da:	fa1f f883 	uxth.w	r8, r3
  4060de:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  4060e2:	fb09 f408 	mul.w	r4, r9, r8
  4060e6:	42ac      	cmp	r4, r5
  4060e8:	fa02 f201 	lsl.w	r2, r2, r1
  4060ec:	fa00 fa01 	lsl.w	sl, r0, r1
  4060f0:	d908      	bls.n	406104 <__udivmoddi4+0x244>
  4060f2:	18ed      	adds	r5, r5, r3
  4060f4:	f109 30ff 	add.w	r0, r9, #4294967295
  4060f8:	d243      	bcs.n	406182 <__udivmoddi4+0x2c2>
  4060fa:	42ac      	cmp	r4, r5
  4060fc:	d941      	bls.n	406182 <__udivmoddi4+0x2c2>
  4060fe:	f1a9 0902 	sub.w	r9, r9, #2
  406102:	441d      	add	r5, r3
  406104:	1b2d      	subs	r5, r5, r4
  406106:	fa1f fe8e 	uxth.w	lr, lr
  40610a:	fbb5 f0fc 	udiv	r0, r5, ip
  40610e:	fb0c 5510 	mls	r5, ip, r0, r5
  406112:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  406116:	fb00 f808 	mul.w	r8, r0, r8
  40611a:	45a0      	cmp	r8, r4
  40611c:	d907      	bls.n	40612e <__udivmoddi4+0x26e>
  40611e:	18e4      	adds	r4, r4, r3
  406120:	f100 35ff 	add.w	r5, r0, #4294967295
  406124:	d229      	bcs.n	40617a <__udivmoddi4+0x2ba>
  406126:	45a0      	cmp	r8, r4
  406128:	d927      	bls.n	40617a <__udivmoddi4+0x2ba>
  40612a:	3802      	subs	r0, #2
  40612c:	441c      	add	r4, r3
  40612e:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  406132:	eba4 0408 	sub.w	r4, r4, r8
  406136:	fba0 8902 	umull	r8, r9, r0, r2
  40613a:	454c      	cmp	r4, r9
  40613c:	46c6      	mov	lr, r8
  40613e:	464d      	mov	r5, r9
  406140:	d315      	bcc.n	40616e <__udivmoddi4+0x2ae>
  406142:	d012      	beq.n	40616a <__udivmoddi4+0x2aa>
  406144:	b156      	cbz	r6, 40615c <__udivmoddi4+0x29c>
  406146:	ebba 030e 	subs.w	r3, sl, lr
  40614a:	eb64 0405 	sbc.w	r4, r4, r5
  40614e:	fa04 f707 	lsl.w	r7, r4, r7
  406152:	40cb      	lsrs	r3, r1
  406154:	431f      	orrs	r7, r3
  406156:	40cc      	lsrs	r4, r1
  406158:	6037      	str	r7, [r6, #0]
  40615a:	6074      	str	r4, [r6, #4]
  40615c:	2100      	movs	r1, #0
  40615e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406162:	4618      	mov	r0, r3
  406164:	e6f8      	b.n	405f58 <__udivmoddi4+0x98>
  406166:	4690      	mov	r8, r2
  406168:	e6e0      	b.n	405f2c <__udivmoddi4+0x6c>
  40616a:	45c2      	cmp	sl, r8
  40616c:	d2ea      	bcs.n	406144 <__udivmoddi4+0x284>
  40616e:	ebb8 0e02 	subs.w	lr, r8, r2
  406172:	eb69 0503 	sbc.w	r5, r9, r3
  406176:	3801      	subs	r0, #1
  406178:	e7e4      	b.n	406144 <__udivmoddi4+0x284>
  40617a:	4628      	mov	r0, r5
  40617c:	e7d7      	b.n	40612e <__udivmoddi4+0x26e>
  40617e:	4640      	mov	r0, r8
  406180:	e791      	b.n	4060a6 <__udivmoddi4+0x1e6>
  406182:	4681      	mov	r9, r0
  406184:	e7be      	b.n	406104 <__udivmoddi4+0x244>
  406186:	4601      	mov	r1, r0
  406188:	e778      	b.n	40607c <__udivmoddi4+0x1bc>
  40618a:	3802      	subs	r0, #2
  40618c:	443c      	add	r4, r7
  40618e:	e745      	b.n	40601c <__udivmoddi4+0x15c>
  406190:	4608      	mov	r0, r1
  406192:	e708      	b.n	405fa6 <__udivmoddi4+0xe6>
  406194:	f1a8 0802 	sub.w	r8, r8, #2
  406198:	443d      	add	r5, r7
  40619a:	e72b      	b.n	405ff4 <__udivmoddi4+0x134>

0040619c <__aeabi_idiv0>:
  40619c:	4770      	bx	lr
  40619e:	bf00      	nop

004061a0 <sysfont_glyphs>:
	...
  4061c0:	0030 0030 0030 0030 0030 0030 0000 0030     0.0.0.0.0.0...0.
  4061d0:	0030 0000 0000 0000 0000 0000 006c 006c     0...........l.l.
  4061e0:	006c 006c 0000 0000 0000 0000 0000 0000     l.l.............
	...
  4061f8:	0000 0028 0028 007c 0028 0028 007c 0028     ..(.(.|.(.(.|.(.
  406208:	0028 0000 0000 0000 0000 0000 0010 003c     (.............<.
  406218:	0040 0020 0010 0008 0004 0078 0010 0000     @. .......x.....
	...
  406230:	0000 007c 00a4 00a8 0050 0028 0054 0094     ..|.....P.(.T...
  406240:	0088 0000 0000 0000 0000 0000 0060 0090     ............`...
  406250:	0090 0090 0060 0094 0088 0088 0070 0000     ....`.......p...
	...
  406268:	0010 0010 0010 0000 0000 0000 0000 0000     ................
	...
  406284:	0008 0010 0020 0020 0020 0020 0020 0020     .... . . . . . .
  406294:	0010 0008 0000 0000 0000 0000 0020 0010     ............ ...
  4062a4:	0008 0008 0008 0008 0008 0008 0010 0020     .............. .
  4062b4:	0000 0000 0000 0028 0010 007c 0010 0028     ......(...|...(.
	...
  4062dc:	0010 0010 0010 00fe 0010 0010 0010 0000     ................
	...
  406304:	0010 0030 0020 0000 0000 0000 0000 0000     ..0. ...........
  406314:	0000 0000 0000 007c 0000 0000 0000 0000     ......|.........
	...
  406338:	0000 0030 0030 0000 0000 0000 0000 0000     ..0.0...........
  406348:	0000 0008 0008 0010 0010 0020 0020 0040     .......... . .@.
  406358:	0040 0000 0000 0000 0000 0000 0000 0078     @.............x.
  406368:	0084 008c 0094 00a4 00c4 0084 0078 0000     ............x...
	...
  406380:	0000 0010 0030 0050 0010 0010 0010 0010     ....0.P.........
  406390:	007c 0000 0000 0000 0000 0000 0000 0070     |.............p.
  4063a0:	0088 0008 0010 0020 0040 0080 00f8 0000     ...... .@.......
	...
  4063b8:	0000 0070 0088 0008 0030 0008 0008 0088     ..p.....0.......
  4063c8:	0070 0000 0000 0000 0000 0000 0000 0008     p...............
  4063d8:	0018 0028 0048 0088 00fc 0008 0008 0000     ..(.H...........
	...
  4063f0:	0000 0078 0080 0080 00f0 0008 0008 0008     ..x.............
  406400:	00f0 0000 0000 0000 0000 0000 0000 0030     ..............0.
  406410:	0040 0080 00f0 0088 0088 0088 0070 0000     @...........p...
	...
  406428:	0000 00f8 0008 0010 0010 0020 0020 0040     .......... . .@.
  406438:	0040 0000 0000 0000 0000 0000 0000 0070     @.............p.
  406448:	0088 0088 0070 0088 0088 0088 0070 0000     ....p.......p...
	...
  406460:	0000 0070 0088 0088 0088 0078 0008 0010     ..p.......x.....
  406470:	0060 0000 0000 0000 0000 0000 0000 0000     `...............
  406480:	0000 0030 0030 0000 0000 0030 0030 0000     ..0.0.....0.0...
	...
  40649c:	0000 0030 0030 0000 0000 0030 0030 0060     ..0.0.....0.0.`.
  4064ac:	0040 0000 0000 0000 0000 0000 0008 0010     @...............
  4064bc:	0020 0040 0020 0010 0008 0000 0000 0000      .@. ...........
	...
  4064d8:	007c 0000 007c 0000 0000 0000 0000 0000     |...|...........
	...
  4064f0:	0040 0020 0010 0008 0010 0020 0040 0000     @. ....... .@...
	...
  406508:	0000 0030 0048 0008 0010 0020 0000 0000     ..0.H..... .....
  406518:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
  406528:	003c 0042 009a 00aa 00aa 00be 0080 0078     <.B...........x.
	...
  406540:	0000 0010 0028 0028 0044 007c 0044 0044     ....(.(.D.|.D.D.
  406550:	0044 0000 0000 0000 0000 0000 0000 00f8     D...............
  406560:	0084 0084 00f8 0084 0084 0084 00f8 0000     ................
	...
  406578:	0000 003c 0040 0080 0080 0080 0080 0040     ..<.@.........@.
  406588:	003c 0000 0000 0000 0000 0000 0000 00f0     <...............
  406598:	0088 0084 0084 0084 0084 0088 00f0 0000     ................
	...
  4065b0:	0000 00f8 0080 0080 00f0 0080 0080 0080     ................
  4065c0:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  4065d0:	0080 0080 00f8 0080 0080 0080 0080 0000     ................
	...
  4065e8:	0000 003c 0040 0080 0080 009c 0084 0044     ..<.@.........D.
  4065f8:	0038 0000 0000 0000 0000 0000 0000 0088     8...............
  406608:	0088 0088 00f8 0088 0088 0088 0088 0000     ................
	...
  406620:	0000 00f8 0020 0020 0020 0020 0020 0020     .... . . . . . .
  406630:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  406640:	0008 0008 0008 0008 0008 0008 00f0 0000     ................
	...
  406658:	0000 0084 0088 0090 00a0 00d0 0088 0084     ................
  406668:	0084 0000 0000 0000 0000 0000 0000 0080     ................
  406678:	0080 0080 0080 0080 0080 0080 00fc 0000     ................
	...
  406690:	0000 0084 00cc 00cc 00b4 00b4 0084 0084     ................
  4066a0:	0084 0000 0000 0000 0000 0000 0000 0084     ................
  4066b0:	00c4 00c4 00a4 00a4 0094 0094 008c 0000     ................
	...
  4066c8:	0000 0078 0084 0084 0084 0084 0084 0084     ..x.............
  4066d8:	0078 0000 0000 0000 0000 0000 0000 00f8     x...............
  4066e8:	0084 0084 0084 00f8 0080 0080 0080 0000     ................
	...
  406700:	0000 0078 0084 0084 0084 0084 0084 0084     ..x.............
  406710:	0078 0020 0018 0000 0000 0000 0000 00f8     x. .............
  406720:	0084 0084 0084 00f8 0088 0084 0084 0000     ................
	...
  406738:	0000 007c 0080 0080 0060 0018 0004 0004     ..|.....`.......
  406748:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  406758:	0020 0020 0020 0020 0020 0020 0020 0000      . . . . . . ...
	...
  406770:	0000 0084 0084 0084 0084 0084 0084 0084     ................
  406780:	0078 0000 0000 0000 0000 0000 0000 0084     x...............
  406790:	0084 0084 0048 0048 0048 0030 0030 0000     ....H.H.H.0.0...
	...
  4067a8:	0000 0088 00a8 00a8 00a8 00a8 00a8 0050     ..............P.
  4067b8:	0050 0000 0000 0000 0000 0000 0000 0088     P...............
  4067c8:	0088 0050 0020 0020 0050 0088 0088 0000     ..P. . .P.......
	...
  4067e0:	0000 0088 0088 0088 0050 0050 0020 0020     ........P.P. . .
  4067f0:	0020 0000 0000 0000 0000 0000 0000 00fc      ...............
  406800:	0004 0008 0010 0020 0040 0080 00fc 0000     ...... .@.......
	...
  406818:	0070 0040 0040 0040 0040 0040 0040 0040     p.@.@.@.@.@.@.@.
  406828:	0040 0040 0070 0000 0000 0000 0040 0040     @.@.p.......@.@.
  406838:	0020 0020 0020 0010 0010 0010 0008 0008      . . ...........
	...
  406850:	0038 0008 0008 0008 0008 0008 0008 0008     8...............
  406860:	0008 0008 0038 0000 0000 0000 0010 0028     ....8.........(.
  406870:	0044 0000 0000 0000 0000 0000 0000 0000     D...............
	...
  406898:	0038 0000 0000 0000 0000 0000 0000 0020     8............. .
  4068a8:	0010 0000 0000 0000 0000 0000 0000 0000     ................
	...
  4068c4:	0000 0070 0008 0008 0078 0088 007c 0000     ..p.....x...|...
	...
  4068dc:	0080 0080 0080 00f8 0084 0084 0084 0084     ................
  4068ec:	00f8 0000 0000 0000 0000 0000 0000 0000     ................
  4068fc:	0000 0078 0080 0080 0080 0080 0078 0000     ..x.........x...
	...
  406914:	0004 0004 0004 007c 0084 0084 0084 008c     ......|.........
  406924:	0074 0000 0000 0000 0000 0000 0000 0000     t...............
  406934:	0000 0078 0084 00fc 0080 0080 007c 0000     ..x.........|...
	...
  40694c:	001c 0020 0020 00fc 0020 0020 0020 0020     .. . ... . . . .
  40695c:	00fc 0000 0000 0000 0000 0000 0000 0000     ................
  40696c:	0000 007c 0084 0084 0084 0084 007c 0004     ..|.........|...
  40697c:	0078 0000 0000 0000 0080 0080 0080 00b8     x...............
  40698c:	00c4 0084 0084 0084 0084 0000 0000 0000     ................
  40699c:	0000 0000 0000 0010 0000 0070 0010 0010     ..........p.....
  4069ac:	0010 0010 007c 0000 0000 0000 0000 0000     ....|...........
  4069bc:	0000 0008 0000 0078 0008 0008 0008 0008     ......x.........
  4069cc:	0008 0008 0008 0070 0000 0000 0080 0080     ......p.........
  4069dc:	0080 0088 0090 00a0 00d0 0088 0088 0000     ................
	...
  4069f4:	00e0 0020 0020 0020 0020 0020 0020 0020     .. . . . . . . .
  406a04:	00f8 0000 0000 0000 0000 0000 0000 0000     ................
  406a14:	0000 00a4 00fc 00a4 00a4 00a4 00a4 0000     ................
	...
  406a30:	0000 00b8 00c4 0084 0084 0084 0084 0000     ................
	...
  406a4c:	0000 0078 0084 0084 0084 0084 0078 0000     ..x.........x...
	...
  406a68:	0000 00b8 00c4 0084 0084 0084 00f8 0080     ................
  406a78:	0080 0000 0000 0000 0000 0000 0000 007c     ..............|.
  406a88:	0084 0084 0084 0084 007c 0004 0004 0000     ........|.......
	...
  406aa0:	0000 00d8 0060 0040 0040 0040 00f0 0000     ....`.@.@.@.....
	...
  406abc:	0000 0078 0080 0040 0030 0008 00f0 0000     ..x...@.0.......
	...
  406ad8:	0020 00fc 0020 0020 0020 0020 001c 0000      ... . . . .....
	...
  406af4:	0000 0088 0088 0088 0088 0088 007c 0000     ............|...
	...
  406b10:	0000 0084 0084 0084 0048 0048 0030 0000     ........H.H.0...
	...
  406b2c:	0000 0088 00a8 00a8 00a8 00a8 0050 0000     ............P...
	...
  406b48:	0000 0088 0050 0020 0020 0050 0088 0000     ....P. . .P.....
	...
  406b64:	0000 0084 0084 0048 0048 0030 0010 0020     ......H.H.0... .
  406b74:	0040 0000 0000 0000 0000 0000 0000 00f8     @...............
  406b84:	0008 0010 0020 0040 00f8 0000 0000 0000     .... .@.........
  406b94:	0000 0000 0010 0020 0020 0010 0020 0020     ...... . ... . .
  406ba4:	0010 0020 0020 0010 0000 0000 0000 0000     .. . ...........
  406bb4:	0010 0010 0010 0010 0000 0000 0010 0010     ................
  406bc4:	0010 0010 0000 0000 0000 0000 0020 0010     ............ ...
  406bd4:	0010 0020 0010 0010 0020 0010 0010 0020     .. ..... ..... .
  406be4:	0000 0000 2020 2020 2020 2020 2020 2020     ....            
  406bf4:	0020 0000 2e25 6631 6320 006d 6e69 7469      ...%.1f cm.init
  406c04:	0000 0000 7462 206e 0020 0000 5245 4f52     ....btn  ...ERRO
  406c14:	0000 0000 7274 6769 2020 0000               ....trig  ..

00406c20 <_global_impure_ptr>:
  406c20:	0028 2040 4e49 0046 6e69 0066 414e 004e     (.@ INF.inf.NAN.
  406c30:	616e 006e 3130 3332 3534 3736 3938 4241     nan.0123456789AB
  406c40:	4443 4645 0000 0000 3130 3332 3534 3736     CDEF....01234567
  406c50:	3938 6261 6463 6665 0000 0000 6e28 6c75     89abcdef....(nul
  406c60:	296c 0000 0030 0000                         l)..0...

00406c68 <blanks.7223>:
  406c68:	2020 2020 2020 2020 2020 2020 2020 2020                     

00406c78 <zeroes.7224>:
  406c78:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
  406c88:	6e49 6966 696e 7974 0000 0000 614e 004e     Infinity....NaN.

00406c98 <__mprec_bigtens>:
  406c98:	8000 37e0 c379 4341 6e17 b505 b8b5 4693     ...7y.AC.n.....F
  406ca8:	f9f5 e93f 4f03 4d38 1d32 f930 7748 5a82     ..?..O8M2.0.Hw.Z
  406cb8:	bf3c 7f73 4fdd 7515                         <.s..O.u

00406cc0 <__mprec_tens>:
  406cc0:	0000 0000 0000 3ff0 0000 0000 0000 4024     .......?......$@
  406cd0:	0000 0000 0000 4059 0000 0000 4000 408f     ......Y@.....@.@
  406ce0:	0000 0000 8800 40c3 0000 0000 6a00 40f8     .......@.....j.@
  406cf0:	0000 0000 8480 412e 0000 0000 12d0 4163     .......A......cA
  406d00:	0000 0000 d784 4197 0000 0000 cd65 41cd     .......A....e..A
  406d10:	0000 2000 a05f 4202 0000 e800 4876 4237     ... _..B....vH7B
  406d20:	0000 a200 1a94 426d 0000 e540 309c 42a2     ......mB..@..0.B
  406d30:	0000 1e90 bcc4 42d6 0000 2634 6bf5 430c     .......B..4&.k.C
  406d40:	8000 37e0 c379 4341 a000 85d8 3457 4376     ...7y.AC....W4vC
  406d50:	c800 674e c16d 43ab 3d00 6091 58e4 43e1     ..Ngm..C.=.`.X.C
  406d60:	8c40 78b5 af1d 4415 ef50 d6e2 1ae4 444b     @..x...DP.....KD
  406d70:	d592 064d f0cf 4480 4af6 c7e1 2d02 44b5     ..M....D.J...-.D
  406d80:	9db4 79d9 7843 44ea                         ...yCx.D

00406d88 <p05.6055>:
  406d88:	0005 0000 0019 0000 007d 0000 0043 0000     ........}...C...
  406d98:	4f50 4953 0058 0000 002e 0000               POSIX.......

00406da4 <_ctype_>:
  406da4:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
  406db4:	2020 2020 2020 2020 2020 2020 2020 2020                     
  406dc4:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
  406dd4:	0410 0404 0404 0404 0404 1004 1010 1010     ................
  406de4:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
  406df4:	0101 0101 0101 0101 0101 0101 1010 1010     ................
  406e04:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
  406e14:	0202 0202 0202 0202 0202 0202 1010 1010     ................
  406e24:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...

00406ea8 <_init>:
  406ea8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  406eaa:	bf00      	nop
  406eac:	bcf8      	pop	{r3, r4, r5, r6, r7}
  406eae:	bc08      	pop	{r3}
  406eb0:	469e      	mov	lr, r3
  406eb2:	4770      	bx	lr

00406eb4 <__init_array_start>:
  406eb4:	004035a5 	.word	0x004035a5

00406eb8 <__frame_dummy_init_array_entry>:
  406eb8:	00400165                                e.@.

00406ebc <_fini>:
  406ebc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  406ebe:	bf00      	nop
  406ec0:	bcf8      	pop	{r3, r4, r5, r6, r7}
  406ec2:	bc08      	pop	{r3}
  406ec4:	469e      	mov	lr, r3
  406ec6:	4770      	bx	lr

00406ec8 <__fini_array_start>:
  406ec8:	00400141 	.word	0x00400141

Disassembly of section .relocate:

20400000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20400000:	f3bf 8f5f 	dmb	sy
20400004:	3801      	subs	r0, #1
20400006:	d1fb      	bne.n	20400000 <portable_delay_cycles>
20400008:	4770      	bx	lr
	...

2040000c <sysfont>:
2040000c:	0000 0000 61a0 0040 0e0a 7d20               .....a@... }

20400018 <g_interrupt_enabled>:
20400018:	0001 0000                                   ....

2040001c <SystemCoreClock>:
2040001c:	0900 003d                                   ..=.

20400020 <_impure_ptr>:
20400020:	0028 2040 0000 0000                         (.@ ....

20400028 <impure_data>:
20400028:	0000 0000 0314 2040 037c 2040 03e4 2040     ......@ |.@ ..@ 
	...
204000d0:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
204000e0:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

20400450 <__atexit_recursive_mutex>:
20400450:	0cb0 2040                                   ..@ 

20400454 <__malloc_av_>:
	...
2040045c:	0454 2040 0454 2040 045c 2040 045c 2040     T.@ T.@ \.@ \.@ 
2040046c:	0464 2040 0464 2040 046c 2040 046c 2040     d.@ d.@ l.@ l.@ 
2040047c:	0474 2040 0474 2040 047c 2040 047c 2040     t.@ t.@ |.@ |.@ 
2040048c:	0484 2040 0484 2040 048c 2040 048c 2040     ..@ ..@ ..@ ..@ 
2040049c:	0494 2040 0494 2040 049c 2040 049c 2040     ..@ ..@ ..@ ..@ 
204004ac:	04a4 2040 04a4 2040 04ac 2040 04ac 2040     ..@ ..@ ..@ ..@ 
204004bc:	04b4 2040 04b4 2040 04bc 2040 04bc 2040     ..@ ..@ ..@ ..@ 
204004cc:	04c4 2040 04c4 2040 04cc 2040 04cc 2040     ..@ ..@ ..@ ..@ 
204004dc:	04d4 2040 04d4 2040 04dc 2040 04dc 2040     ..@ ..@ ..@ ..@ 
204004ec:	04e4 2040 04e4 2040 04ec 2040 04ec 2040     ..@ ..@ ..@ ..@ 
204004fc:	04f4 2040 04f4 2040 04fc 2040 04fc 2040     ..@ ..@ ..@ ..@ 
2040050c:	0504 2040 0504 2040 050c 2040 050c 2040     ..@ ..@ ..@ ..@ 
2040051c:	0514 2040 0514 2040 051c 2040 051c 2040     ..@ ..@ ..@ ..@ 
2040052c:	0524 2040 0524 2040 052c 2040 052c 2040     $.@ $.@ ,.@ ,.@ 
2040053c:	0534 2040 0534 2040 053c 2040 053c 2040     4.@ 4.@ <.@ <.@ 
2040054c:	0544 2040 0544 2040 054c 2040 054c 2040     D.@ D.@ L.@ L.@ 
2040055c:	0554 2040 0554 2040 055c 2040 055c 2040     T.@ T.@ \.@ \.@ 
2040056c:	0564 2040 0564 2040 056c 2040 056c 2040     d.@ d.@ l.@ l.@ 
2040057c:	0574 2040 0574 2040 057c 2040 057c 2040     t.@ t.@ |.@ |.@ 
2040058c:	0584 2040 0584 2040 058c 2040 058c 2040     ..@ ..@ ..@ ..@ 
2040059c:	0594 2040 0594 2040 059c 2040 059c 2040     ..@ ..@ ..@ ..@ 
204005ac:	05a4 2040 05a4 2040 05ac 2040 05ac 2040     ..@ ..@ ..@ ..@ 
204005bc:	05b4 2040 05b4 2040 05bc 2040 05bc 2040     ..@ ..@ ..@ ..@ 
204005cc:	05c4 2040 05c4 2040 05cc 2040 05cc 2040     ..@ ..@ ..@ ..@ 
204005dc:	05d4 2040 05d4 2040 05dc 2040 05dc 2040     ..@ ..@ ..@ ..@ 
204005ec:	05e4 2040 05e4 2040 05ec 2040 05ec 2040     ..@ ..@ ..@ ..@ 
204005fc:	05f4 2040 05f4 2040 05fc 2040 05fc 2040     ..@ ..@ ..@ ..@ 
2040060c:	0604 2040 0604 2040 060c 2040 060c 2040     ..@ ..@ ..@ ..@ 
2040061c:	0614 2040 0614 2040 061c 2040 061c 2040     ..@ ..@ ..@ ..@ 
2040062c:	0624 2040 0624 2040 062c 2040 062c 2040     $.@ $.@ ,.@ ,.@ 
2040063c:	0634 2040 0634 2040 063c 2040 063c 2040     4.@ 4.@ <.@ <.@ 
2040064c:	0644 2040 0644 2040 064c 2040 064c 2040     D.@ D.@ L.@ L.@ 
2040065c:	0654 2040 0654 2040 065c 2040 065c 2040     T.@ T.@ \.@ \.@ 
2040066c:	0664 2040 0664 2040 066c 2040 066c 2040     d.@ d.@ l.@ l.@ 
2040067c:	0674 2040 0674 2040 067c 2040 067c 2040     t.@ t.@ |.@ |.@ 
2040068c:	0684 2040 0684 2040 068c 2040 068c 2040     ..@ ..@ ..@ ..@ 
2040069c:	0694 2040 0694 2040 069c 2040 069c 2040     ..@ ..@ ..@ ..@ 
204006ac:	06a4 2040 06a4 2040 06ac 2040 06ac 2040     ..@ ..@ ..@ ..@ 
204006bc:	06b4 2040 06b4 2040 06bc 2040 06bc 2040     ..@ ..@ ..@ ..@ 
204006cc:	06c4 2040 06c4 2040 06cc 2040 06cc 2040     ..@ ..@ ..@ ..@ 
204006dc:	06d4 2040 06d4 2040 06dc 2040 06dc 2040     ..@ ..@ ..@ ..@ 
204006ec:	06e4 2040 06e4 2040 06ec 2040 06ec 2040     ..@ ..@ ..@ ..@ 
204006fc:	06f4 2040 06f4 2040 06fc 2040 06fc 2040     ..@ ..@ ..@ ..@ 
2040070c:	0704 2040 0704 2040 070c 2040 070c 2040     ..@ ..@ ..@ ..@ 
2040071c:	0714 2040 0714 2040 071c 2040 071c 2040     ..@ ..@ ..@ ..@ 
2040072c:	0724 2040 0724 2040 072c 2040 072c 2040     $.@ $.@ ,.@ ,.@ 
2040073c:	0734 2040 0734 2040 073c 2040 073c 2040     4.@ 4.@ <.@ <.@ 
2040074c:	0744 2040 0744 2040 074c 2040 074c 2040     D.@ D.@ L.@ L.@ 
2040075c:	0754 2040 0754 2040 075c 2040 075c 2040     T.@ T.@ \.@ \.@ 
2040076c:	0764 2040 0764 2040 076c 2040 076c 2040     d.@ d.@ l.@ l.@ 
2040077c:	0774 2040 0774 2040 077c 2040 077c 2040     t.@ t.@ |.@ |.@ 
2040078c:	0784 2040 0784 2040 078c 2040 078c 2040     ..@ ..@ ..@ ..@ 
2040079c:	0794 2040 0794 2040 079c 2040 079c 2040     ..@ ..@ ..@ ..@ 
204007ac:	07a4 2040 07a4 2040 07ac 2040 07ac 2040     ..@ ..@ ..@ ..@ 
204007bc:	07b4 2040 07b4 2040 07bc 2040 07bc 2040     ..@ ..@ ..@ ..@ 
204007cc:	07c4 2040 07c4 2040 07cc 2040 07cc 2040     ..@ ..@ ..@ ..@ 
204007dc:	07d4 2040 07d4 2040 07dc 2040 07dc 2040     ..@ ..@ ..@ ..@ 
204007ec:	07e4 2040 07e4 2040 07ec 2040 07ec 2040     ..@ ..@ ..@ ..@ 
204007fc:	07f4 2040 07f4 2040 07fc 2040 07fc 2040     ..@ ..@ ..@ ..@ 
2040080c:	0804 2040 0804 2040 080c 2040 080c 2040     ..@ ..@ ..@ ..@ 
2040081c:	0814 2040 0814 2040 081c 2040 081c 2040     ..@ ..@ ..@ ..@ 
2040082c:	0824 2040 0824 2040 082c 2040 082c 2040     $.@ $.@ ,.@ ,.@ 
2040083c:	0834 2040 0834 2040 083c 2040 083c 2040     4.@ 4.@ <.@ <.@ 
2040084c:	0844 2040 0844 2040 084c 2040 084c 2040     D.@ D.@ L.@ L.@ 

2040085c <__malloc_sbrk_base>:
2040085c:	ffff ffff                                   ....

20400860 <__malloc_trim_threshold>:
20400860:	0000 0002                                   ....

20400864 <__global_locale>:
20400864:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400884:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008a4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008c4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008e4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400904:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400924:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400944:	5ce9 0040 58a9 0040 0000 0000 6da4 0040     .\@..X@......m@.
20400954:	6da0 0040 6c44 0040 6c44 0040 6c44 0040     .m@.Dl@.Dl@.Dl@.
20400964:	6c44 0040 6c44 0040 6c44 0040 6c44 0040     Dl@.Dl@.Dl@.Dl@.
20400974:	6c44 0040 6c44 0040 ffff ffff ffff ffff     Dl@.Dl@.........
20400984:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
	...
204009ac:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...
